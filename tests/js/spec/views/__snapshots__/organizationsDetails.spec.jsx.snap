// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrganizationDetails render() deletion in progress should render a deletion in progress prompt 1`] = `
<OrganizationDetails
  location={Object {}}
  params={
    Object {
      "orgId": "org-slug",
    }
  }
>
  <OrganizationContext
    includeSidebar={true}
    location={Object {}}
    params={
      Object {
        "orgId": "org-slug",
      }
    }
  >
    <SideEffect(DocumentTitle)
      title="Organization Name"
    >
      <DocumentTitle
        title="Organization Name"
      >
        <div
          className="app"
        >
          <withOrganizations(withLatestContext(withRouter(SidebarContainer)))
            includeSidebar={true}
            location={Object {}}
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "deletion_in_progress",
                  "name": "deletion in progress",
                },
                "teams": Array [],
              }
            }
            params={
              Object {
                "orgId": "org-slug",
              }
            }
          >
            <withLatestContext(withRouter(SidebarContainer))
              includeSidebar={true}
              location={Object {}}
              organization={
                Object {
                  "access": Array [
                    "org:read",
                    "org:write",
                    "org:admin",
                    "project:read",
                    "project:write",
                    "project:admin",
                    "team:read",
                    "team:write",
                    "team:admin",
                  ],
                  "features": Array [],
                  "id": "3",
                  "name": "Organization Name",
                  "onboardingTasks": Array [],
                  "projects": Array [],
                  "scrapeJavaScript": true,
                  "slug": "org-slug",
                  "status": Object {
                    "id": "deletion_in_progress",
                    "name": "deletion in progress",
                  },
                  "teams": Array [],
                }
              }
              organizations={Array []}
              params={
                Object {
                  "orgId": "org-slug",
                }
              }
            >
              <withRouter(SidebarContainer)
                includeSidebar={true}
                lastRoute={null}
                location={Object {}}
                organization={
                  Object {
                    "access": Array [
                      "org:read",
                      "org:write",
                      "org:admin",
                      "project:read",
                      "project:write",
                      "project:admin",
                      "team:read",
                      "team:write",
                      "team:admin",
                    ],
                    "features": Array [],
                    "id": "3",
                    "name": "Organization Name",
                    "onboardingTasks": Array [],
                    "projects": Array [],
                    "scrapeJavaScript": true,
                    "slug": "org-slug",
                    "status": Object {
                      "id": "deletion_in_progress",
                      "name": "deletion in progress",
                    },
                    "teams": Array [],
                  }
                }
                organizations={Array []}
                params={
                  Object {
                    "orgId": "org-slug",
                  }
                }
                project={null}
              >
                <SidebarContainer
                  includeSidebar={true}
                  lastRoute={null}
                  location={Object {}}
                  organization={
                    Object {
                      "access": Array [
                        "org:read",
                        "org:write",
                        "org:admin",
                        "project:read",
                        "project:write",
                        "project:admin",
                        "team:read",
                        "team:write",
                        "team:admin",
                      ],
                      "features": Array [],
                      "id": "3",
                      "name": "Organization Name",
                      "onboardingTasks": Array [],
                      "projects": Array [],
                      "scrapeJavaScript": true,
                      "slug": "org-slug",
                      "status": Object {
                        "id": "deletion_in_progress",
                        "name": "deletion in progress",
                      },
                      "teams": Array [],
                    }
                  }
                  organizations={Array []}
                  params={
                    Object {
                      "orgId": "org-slug",
                    }
                  }
                  project={null}
                >
                  <ThemeProvider
                    theme={
                      Object {
                        "alert": Object {
                          "attention": Object {
                            "background": "#F09E71",
                            "backgroundLight": "#ECBFA6",
                            "border": "#D0816D",
                          },
                          "beta": Object {
                            "background": "linear-gradient(90deg, #F868BC, #6C5FC7)",
                          },
                          "default": Object {
                            "background": "#BDB4C7",
                            "backgroundLight": "#FAF9FB",
                            "border": "#E2DBE8",
                          },
                          "error": Object {
                            "background": "#e03e2f",
                            "backgroundLight": "#FDF6F5",
                            "border": "#E7C0BC",
                            "iconColor": "#C72516",
                            "textLight": "#92635f",
                          },
                          "info": Object {
                            "background": "#3B6ECC",
                            "backgroundLight": "#F5FAFE",
                            "border": "#B5D6ED",
                            "iconColor": "#3B6ECC",
                          },
                          "success": Object {
                            "background": "#57be8c",
                            "backgroundLight": "#F8FCF7",
                            "border": "#BBD6B3",
                            "iconColor": "#3EA573",
                          },
                          "warn": Object {
                            "background": "#ecc844",
                            "backgroundLight": "#FFFDF7",
                            "border": "#E1D697",
                            "iconColor": "#e6bc23",
                          },
                          "warning": Object {
                            "background": "#ecc844",
                            "backgroundLight": "#FFFDF7",
                            "border": "#E1D697",
                            "iconColor": "#e6bc23",
                          },
                        },
                        "background": "#fff",
                        "blue": "#3B6ECC",
                        "blueDark": "#2F58A3",
                        "blueLight": "#628BD6",
                        "borderDark": "#D1CAD8",
                        "borderLight": "#E2DBE8",
                        "borderLighter": "#f9f6fd",
                        "borderRadius": "4px",
                        "breakpoints": Array [
                          "768px",
                          "992px",
                          "1200px",
                        ],
                        "button": Object {
                          "borderRadius": "3px",
                          "danger": Object {
                            "background": "#e03e2f",
                            "backgroundActive": "#bf2a1d",
                            "border": "#bf2a1d",
                            "borderActive": "#7d1c13",
                            "color": "#FFFFFF",
                          },
                          "default": Object {
                            "background": "#FFFFFF",
                            "backgroundActive": "#FFFFFF",
                            "border": "#d8d2de",
                            "borderActive": "#c9c0d1",
                            "color": "#2f2936",
                            "colorActive": "#161319",
                          },
                          "disabled": Object {
                            "background": "#FFFFFF",
                            "backgroundActive": "#FFFFFF",
                            "border": "#e3e5e6",
                            "borderActive": "#e3e5e6",
                            "color": "#BDB4C7",
                          },
                          "link": Object {
                            "background": "transparent",
                            "backgroundActive": "transparent",
                            "color": "#3B6ECC",
                          },
                          "primary": Object {
                            "background": "#6C5FC7",
                            "backgroundActive": "#4e3fb4",
                            "border": "#3d328e",
                            "borderActive": "#352b7b",
                            "color": "#FFFFFF",
                          },
                          "success": Object {
                            "background": "#3fa372",
                            "backgroundActive": "#57be8c",
                            "border": "#7ccca5",
                            "borderActive": "#7ccca5",
                            "color": "#FFFFFF",
                          },
                        },
                        "charts": Object {
                          "colors": Array [
                            "#444674",
                            "#524a7e",
                            "#624d84",
                            "#744f88",
                            "#865189",
                            "#985389",
                            "#aa5488",
                            "#bc5585",
                            "#cd5681",
                            "#df567c",
                            "#e86070",
                            "#ed6c64",
                            "#f17959",
                            "#f4854e",
                            "#f59242",
                            "#f59e35",
                            "#f4aa27",
                            "#f2b712",
                          ],
                          "getColorPalette": [Function],
                          "previousPeriod": "#BDB4C7",
                          "symbolSize": 6,
                        },
                        "diff": Object {
                          "added": "#d8f0e4",
                          "addedRow": "#f5fbf8",
                          "removed": "#f7ceca",
                          "removedRow": "#fcefee",
                        },
                        "disabled": "#BDB4C7",
                        "dropShadowHeavy": "0 1px 4px 1px rgba(47,40,55,0.08), 0 4px 16px 0 rgba(47,40,55,0.12)",
                        "dropShadowLight": "0 2px 0 rgba(37, 11, 54, 0.04)",
                        "error": "#e03e2f",
                        "fontSizeExtraLarge": "18px",
                        "fontSizeLarge": "16px",
                        "fontSizeMedium": "14px",
                        "fontSizeSmall": "12px",
                        "gray1": "#BDB4C7",
                        "gray2": "#9585A3",
                        "gray3": "#645574",
                        "gray4": "#4A3E56",
                        "gray5": "#302839",
                        "gray6": "#AFA3BB",
                        "green": "#57be8c",
                        "greenDark": "#3EA573",
                        "greenLight": "#71D8A6",
                        "greenTransparent": "rgba(87, 190, 140, 0.5)",
                        "grid": 8,
                        "headerFontSize": "22px",
                        "offWhite": "#FAF9FB",
                        "offWhite2": "#E7E1EC",
                        "orange": "#ec5e44",
                        "orangeDark": "#D3452B",
                        "orangeLight": "#FF785E",
                        "pink": "#F868BC",
                        "pinkDark": "#DF4FA3",
                        "pinkLight": "#FF82D6",
                        "purple": "#6C5FC7",
                        "purple2": "#6f617c",
                        "purpleDark": "#5346AE",
                        "purpleDarkest": "#392C94",
                        "purpleLight": "#8679E1",
                        "purpleLightest": "#9F92FA",
                        "red": "#e03e2f",
                        "redDark": "#C72516",
                        "redLight": "#FA5849",
                        "settings": Object {
                          "containerWidth": "1440px",
                          "headerHeight": "115px",
                          "maxCrumbWidth": "240px",
                          "sidebarWidth": "220px",
                        },
                        "sidebar": Object {
                          "background": "#2f2936",
                          "badgeSize": "22px",
                          "collapsedWidth": "70px",
                          "color": "#9586a5",
                          "divider": "#493e54",
                          "expandedWidth": "220px",
                          "menuSpacing": "15px",
                          "mobileHeight": "54px",
                          "panel": Object {
                            "headerHeight": "62px",
                            "width": "320px",
                          },
                          "smallBadgeSize": "11px",
                        },
                        "similarity": Object {
                          "colors": Array [
                            "#ec5e44",
                            "#f38259",
                            "#f9a66d",
                            "#98b480",
                            "#57be8c",
                          ],
                          "empty": "#e2dee6",
                        },
                        "success": "#57be8c",
                        "text": Object {
                          "family": "\\"Rubik\\", \\"Avenir Next\\", sans-serif",
                          "familyMono": "Monaco, Consolas, \\"Courier New\\", monospace",
                          "lineHeightBody": "1.4",
                          "lineHeightHeading": "1.15",
                        },
                        "textColor": "#302839",
                        "white": "#FFFFFF",
                        "whiteDark": "#fbfbfc",
                        "yellow": "#ecc844",
                        "yellowDark": "#e6bc23",
                        "yellowLight": "#FFF15E",
                        "yellowLightest": "#FFFDF7",
                        "yellowOrange": "#f9a66d",
                        "yellowOrangeDark": "#E08D54",
                        "yellowOrangeLight": "#FFC087",
                        "zIndex": Object {
                          "dropdown": 1001,
                          "dropdownAutocomplete": Object {
                            "actor": 1008,
                            "menu": 1007,
                          },
                          "globalSelectionHeader": 1002,
                          "header": 1000,
                          "modal": 10000,
                          "orgAndUserMenu": 1004,
                          "sidebar": 1003,
                          "toast": 10001,
                        },
                      }
                    }
                  >
                    <Sidebar
                      collapsed={false}
                      includeSidebar={true}
                      lastRoute={null}
                      location={Object {}}
                      organization={
                        Object {
                          "access": Array [
                            "org:read",
                            "org:write",
                            "org:admin",
                            "project:read",
                            "project:write",
                            "project:admin",
                            "team:read",
                            "team:write",
                            "team:admin",
                          ],
                          "features": Array [],
                          "id": "3",
                          "name": "Organization Name",
                          "onboardingTasks": Array [],
                          "projects": Array [],
                          "scrapeJavaScript": true,
                          "slug": "org-slug",
                          "status": Object {
                            "id": "deletion_in_progress",
                            "name": "deletion in progress",
                          },
                          "teams": Array [],
                        }
                      }
                      organizations={Array []}
                      params={
                        Object {
                          "orgId": "org-slug",
                        }
                      }
                      project={null}
                    >
                      <StyledSidebar
                        collapsed={false}
                        innerRef={[Function]}
                      >
                        <div
                          className="css-5cf61n-StyledSidebar-responsiveFlex e1sgxx350"
                        >
                          <SidebarSectionGroup>
                            <div
                              className="css-1uxlgm0-SidebarSectionGroup-responsiveFlex e1sgxx351"
                            >
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <withApi(SidebarDropdown)
                                    collapsed={false}
                                    config={
                                      Object {
                                        "features": Set {},
                                        "messages": Array [],
                                        "user": Object {
                                          "email": "foo@example.com",
                                          "flags": Object {
                                            "newsletter_consent_prompt": false,
                                          },
                                          "hasPasswordAuth": true,
                                          "id": "1",
                                          "isAuthenticated": true,
                                          "name": "Foo Bar",
                                          "options": Object {
                                            "timezone": "UTC",
                                          },
                                          "permissions": Set {},
                                          "username": "foo@example.com",
                                        },
                                      }
                                    }
                                    onClick={[Function]}
                                    org={
                                      Object {
                                        "access": Array [
                                          "org:read",
                                          "org:write",
                                          "org:admin",
                                          "project:read",
                                          "project:write",
                                          "project:admin",
                                          "team:read",
                                          "team:write",
                                          "team:admin",
                                        ],
                                        "features": Array [],
                                        "id": "3",
                                        "name": "Organization Name",
                                        "onboardingTasks": Array [],
                                        "projects": Array [],
                                        "scrapeJavaScript": true,
                                        "slug": "org-slug",
                                        "status": Object {
                                          "id": "deletion_in_progress",
                                          "name": "deletion in progress",
                                        },
                                        "teams": Array [],
                                      }
                                    }
                                    orientation="left"
                                    user={
                                      Object {
                                        "email": "foo@example.com",
                                        "flags": Object {
                                          "newsletter_consent_prompt": false,
                                        },
                                        "hasPasswordAuth": true,
                                        "id": "1",
                                        "isAuthenticated": true,
                                        "name": "Foo Bar",
                                        "options": Object {
                                          "timezone": "UTC",
                                        },
                                        "permissions": Set {},
                                        "username": "foo@example.com",
                                      }
                                    }
                                  >
                                    <SidebarDropdown
                                      api={Client {}}
                                      collapsed={false}
                                      config={
                                        Object {
                                          "features": Set {},
                                          "messages": Array [],
                                          "user": Object {
                                            "email": "foo@example.com",
                                            "flags": Object {
                                              "newsletter_consent_prompt": false,
                                            },
                                            "hasPasswordAuth": true,
                                            "id": "1",
                                            "isAuthenticated": true,
                                            "name": "Foo Bar",
                                            "options": Object {
                                              "timezone": "UTC",
                                            },
                                            "permissions": Set {},
                                            "username": "foo@example.com",
                                          },
                                        }
                                      }
                                      onClick={[Function]}
                                      org={
                                        Object {
                                          "access": Array [
                                            "org:read",
                                            "org:write",
                                            "org:admin",
                                            "project:read",
                                            "project:write",
                                            "project:admin",
                                            "team:read",
                                            "team:write",
                                            "team:admin",
                                          ],
                                          "features": Array [],
                                          "id": "3",
                                          "name": "Organization Name",
                                          "onboardingTasks": Array [],
                                          "projects": Array [],
                                          "scrapeJavaScript": true,
                                          "slug": "org-slug",
                                          "status": Object {
                                            "id": "deletion_in_progress",
                                            "name": "deletion in progress",
                                          },
                                          "teams": Array [],
                                        }
                                      }
                                      orientation="left"
                                      user={
                                        Object {
                                          "email": "foo@example.com",
                                          "flags": Object {
                                            "newsletter_consent_prompt": false,
                                          },
                                          "hasPasswordAuth": true,
                                          "id": "1",
                                          "isAuthenticated": true,
                                          "name": "Foo Bar",
                                          "options": Object {
                                            "timezone": "UTC",
                                          },
                                          "permissions": Set {},
                                          "username": "foo@example.com",
                                        }
                                      }
                                    >
                                      <DropdownMenu
                                        closeOnEscape={true}
                                        keepMenuOpen={false}
                                      >
                                        <SidebarDropdownRoot
                                          isStyled={true}
                                        >
                                          <div
                                            className="css-jdsvwb-SidebarDropdownRoot e1fowdfw3"
                                          >
                                            <SidebarDropdownActor
                                              data-test-id="sidebar-dropdown"
                                              innerRef={[Function]}
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              style={
                                                Object {
                                                  "outline": "none",
                                                }
                                              }
                                              tabIndex={-1}
                                            >
                                              <div
                                                className="css-1d9hpgj-SidebarDropdownActor e1fowdfw7"
                                                data-test-id="sidebar-dropdown"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                style={
                                                  Object {
                                                    "outline": "none",
                                                  }
                                                }
                                                tabIndex={-1}
                                              >
                                                <div
                                                  style={
                                                    Object {
                                                      "alignItems": "flex-start",
                                                      "display": "flex",
                                                    }
                                                  }
                                                >
                                                  <StyledAvatar
                                                    collapsed={false}
                                                    onClick={[Function]}
                                                    organization={
                                                      Object {
                                                        "access": Array [
                                                          "org:read",
                                                          "org:write",
                                                          "org:admin",
                                                          "project:read",
                                                          "project:write",
                                                          "project:admin",
                                                          "team:read",
                                                          "team:write",
                                                          "team:admin",
                                                        ],
                                                        "features": Array [],
                                                        "id": "3",
                                                        "name": "Organization Name",
                                                        "onboardingTasks": Array [],
                                                        "projects": Array [],
                                                        "scrapeJavaScript": true,
                                                        "slug": "org-slug",
                                                        "status": Object {
                                                          "id": "deletion_in_progress",
                                                          "name": "deletion in progress",
                                                        },
                                                        "teams": Array [],
                                                      }
                                                    }
                                                    round={false}
                                                    size={32}
                                                    user={null}
                                                  >
                                                    <Avatar
                                                      className="css-hbasbf-StyledAvatar e1fowdfw8"
                                                      collapsed={false}
                                                      hasTooltip={false}
                                                      onClick={[Function]}
                                                      organization={
                                                        Object {
                                                          "access": Array [
                                                            "org:read",
                                                            "org:write",
                                                            "org:admin",
                                                            "project:read",
                                                            "project:write",
                                                            "project:admin",
                                                            "team:read",
                                                            "team:write",
                                                            "team:admin",
                                                          ],
                                                          "features": Array [],
                                                          "id": "3",
                                                          "name": "Organization Name",
                                                          "onboardingTasks": Array [],
                                                          "projects": Array [],
                                                          "scrapeJavaScript": true,
                                                          "slug": "org-slug",
                                                          "status": Object {
                                                            "id": "deletion_in_progress",
                                                            "name": "deletion in progress",
                                                          },
                                                          "teams": Array [],
                                                        }
                                                      }
                                                      round={false}
                                                      size={32}
                                                      user={null}
                                                    >
                                                      <OrganizationAvatar
                                                        className="css-hbasbf-StyledAvatar e1fowdfw8"
                                                        collapsed={false}
                                                        hasTooltip={false}
                                                        onClick={[Function]}
                                                        organization={
                                                          Object {
                                                            "access": Array [
                                                              "org:read",
                                                              "org:write",
                                                              "org:admin",
                                                              "project:read",
                                                              "project:write",
                                                              "project:admin",
                                                              "team:read",
                                                              "team:write",
                                                              "team:admin",
                                                            ],
                                                            "features": Array [],
                                                            "id": "3",
                                                            "name": "Organization Name",
                                                            "onboardingTasks": Array [],
                                                            "projects": Array [],
                                                            "scrapeJavaScript": true,
                                                            "slug": "org-slug",
                                                            "status": Object {
                                                              "id": "deletion_in_progress",
                                                              "name": "deletion in progress",
                                                            },
                                                            "teams": Array [],
                                                          }
                                                        }
                                                        round={false}
                                                        size={32}
                                                      >
                                                        <BaseAvatar
                                                          className="css-hbasbf-StyledAvatar e1fowdfw8"
                                                          collapsed={false}
                                                          hasTooltip={false}
                                                          letterId="org-slug"
                                                          onClick={[Function]}
                                                          round={false}
                                                          size={32}
                                                          style={Object {}}
                                                          title="org slug"
                                                          tooltip="org-slug"
                                                          type="letter_avatar"
                                                          uploadPath="organization-avatar"
                                                        >
                                                          <Tooltip
                                                            disabled={true}
                                                            title="org-slug"
                                                          >
                                                            <StyledBaseAvatar
                                                              className="avatar css-hbasbf-StyledAvatar e1fowdfw8"
                                                              loaded={true}
                                                              round={false}
                                                              style={
                                                                Object {
                                                                  "height": "32px",
                                                                  "width": "32px",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="avatar e1fowdfw8 css-tmrp5m-StyledBaseAvatar-StyledAvatar e1z0ohzl0"
                                                                style={
                                                                  Object {
                                                                    "height": "32px",
                                                                    "width": "32px",
                                                                  }
                                                                }
                                                              >
                                                                <LetterAvatar
                                                                  displayName="org slug"
                                                                  identifier="org-slug"
                                                                  round={false}
                                                                >
                                                                  <Svg
                                                                    round={false}
                                                                    viewBox="0 0 120 120"
                                                                  >
                                                                    <svg
                                                                      className="css-123ijso-Svg e1knxa8x0"
                                                                      viewBox="0 0 120 120"
                                                                    >
                                                                      <rect
                                                                        fill="#4674ca"
                                                                        height="120"
                                                                        rx="15"
                                                                        ry="15"
                                                                        width="120"
                                                                        x="0"
                                                                        y="0"
                                                                      />
                                                                      <text
                                                                        fill="#FFFFFF"
                                                                        fontSize="65"
                                                                        style={
                                                                          Object {
                                                                            "dominantBaseline": "central",
                                                                          }
                                                                        }
                                                                        textAnchor="middle"
                                                                        x="50%"
                                                                        y="50%"
                                                                      >
                                                                        OS
                                                                      </text>
                                                                    </svg>
                                                                  </Svg>
                                                                </LetterAvatar>
                                                              </span>
                                                            </StyledBaseAvatar>
                                                          </Tooltip>
                                                        </BaseAvatar>
                                                      </OrganizationAvatar>
                                                    </Avatar>
                                                  </StyledAvatar>
                                                  <OrgAndUserWrapper>
                                                    <div
                                                      className="css-1mzb71u-OrgAndUserWrapper e1fowdfw4"
                                                    >
                                                      <OrgOrUserName>
                                                        <div
                                                          className="css-df1voe-TextOverflow-OrgOrUserName e1fowdfw5"
                                                        >
                                                          Organization Name
                                                           
                                                          <i
                                                            className="icon-arrow-down"
                                                          />
                                                        </div>
                                                      </OrgOrUserName>
                                                      <UserNameOrEmail>
                                                        <div
                                                          className="css-1b3lkmg-TextOverflow-UserNameOrEmail e1fowdfw6"
                                                        >
                                                          Foo Bar
                                                        </div>
                                                      </UserNameOrEmail>
                                                    </div>
                                                  </OrgAndUserWrapper>
                                                </div>
                                              </div>
                                            </SidebarDropdownActor>
                                          </div>
                                        </SidebarDropdownRoot>
                                      </DropdownMenu>
                                    </SidebarDropdown>
                                  </withApi(SidebarDropdown)>
                                </div>
                              </SidebarSection>
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <FeatureContainer
                                    features={
                                      Array [
                                        "sentry10",
                                      ]
                                    }
                                    renderDisabled={[Function]}
                                  >
                                    <Feature
                                      configFeatures={Array []}
                                      features={
                                        Array [
                                          "sentry10",
                                        ]
                                      }
                                      organization={
                                        Object {
                                          "access": Array [
                                            "org:read",
                                            "org:write",
                                            "org:admin",
                                            "project:read",
                                            "project:write",
                                            "project:admin",
                                            "team:read",
                                            "team:write",
                                            "team:admin",
                                          ],
                                          "features": Array [],
                                          "id": "3",
                                          "name": "Organization Name",
                                          "onboardingTasks": Array [],
                                          "projects": Array [],
                                          "scrapeJavaScript": true,
                                          "slug": "org-slug",
                                          "status": Object {
                                            "id": "deletion_in_progress",
                                            "name": "deletion in progress",
                                          },
                                          "teams": Array [],
                                        }
                                      }
                                      renderDisabled={[Function]}
                                      requireAll={true}
                                    >
                                      <withRouter(SidebarItem)
                                        collapsed={false}
                                        hasPanel={false}
                                        icon={
                                          <InlineSvg
                                            src="icon-projects"
                                          />
                                        }
                                        index={true}
                                        label="Projects"
                                        onClick={[Function]}
                                        orientation="left"
                                        to="/org-slug/"
                                      >
                                        <SidebarItem
                                          collapsed={false}
                                          hasPanel={false}
                                          icon={
                                            <InlineSvg
                                              src="icon-projects"
                                            />
                                          }
                                          index={true}
                                          label="Projects"
                                          onClick={[Function]}
                                          orientation="left"
                                          to="/org-slug/"
                                        >
                                          <Tooltip
                                            disabled={true}
                                            title="Projects"
                                            tooltipOptions={
                                              Object {
                                                "html": true,
                                                "placement": "right",
                                              }
                                            }
                                          >
                                            <StyledSidebarItem
                                              active={false}
                                              onClick={[Function]}
                                              to="/org-slug/"
                                            >
                                              <Component
                                                active={false}
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                onClick={[Function]}
                                                to="/org-slug/"
                                              >
                                                <Link
                                                  className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                  onClick={[Function]}
                                                  to="/org-slug/"
                                                >
                                                  <a
                                                    className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                    href="/org-slug/"
                                                    onClick={[Function]}
                                                  >
                                                    <SidebarItemWrapper>
                                                      <div
                                                        className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                      >
                                                        <SidebarItemIcon>
                                                          <span
                                                            className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                          >
                                                            <InlineSvg
                                                              src="icon-projects"
                                                            >
                                                              <StyledSvg
                                                                height="1em"
                                                                viewBox={Object {}}
                                                                width="1em"
                                                              >
                                                                <svg
                                                                  className="css-ryh69w-StyledSvg e2idor0"
                                                                  height="1em"
                                                                  viewBox={Object {}}
                                                                  width="1em"
                                                                >
                                                                  <use
                                                                    href="#test"
                                                                    xlinkHref="#test"
                                                                  />
                                                                </svg>
                                                              </StyledSvg>
                                                            </InlineSvg>
                                                          </span>
                                                        </SidebarItemIcon>
                                                        <SidebarItemLabel>
                                                          <span
                                                            className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                          >
                                                            <TextOverflow>
                                                              <div
                                                                className="css-179hf69-TextOverflow e8qi82q0"
                                                              >
                                                                Projects
                                                              </div>
                                                            </TextOverflow>
                                                          </span>
                                                        </SidebarItemLabel>
                                                      </div>
                                                    </SidebarItemWrapper>
                                                  </a>
                                                </Link>
                                              </Component>
                                            </StyledSidebarItem>
                                          </Tooltip>
                                        </SidebarItem>
                                      </withRouter(SidebarItem)>
                                    </Feature>
                                  </FeatureContainer>
                                  <FeatureContainer
                                    features={
                                      Array [
                                        "events",
                                      ]
                                    }
                                  >
                                    <Feature
                                      configFeatures={Array []}
                                      features={
                                        Array [
                                          "events",
                                        ]
                                      }
                                      organization={
                                        Object {
                                          "access": Array [
                                            "org:read",
                                            "org:write",
                                            "org:admin",
                                            "project:read",
                                            "project:write",
                                            "project:admin",
                                            "team:read",
                                            "team:write",
                                            "team:admin",
                                          ],
                                          "features": Array [],
                                          "id": "3",
                                          "name": "Organization Name",
                                          "onboardingTasks": Array [],
                                          "projects": Array [],
                                          "scrapeJavaScript": true,
                                          "slug": "org-slug",
                                          "status": Object {
                                            "id": "deletion_in_progress",
                                            "name": "deletion in progress",
                                          },
                                          "teams": Array [],
                                        }
                                      }
                                      renderDisabled={false}
                                      requireAll={true}
                                    />
                                  </FeatureContainer>
                                  <FeatureContainer
                                    features={
                                      Array [
                                        "sentry10",
                                      ]
                                    }
                                  >
                                    <Feature
                                      configFeatures={Array []}
                                      features={
                                        Array [
                                          "sentry10",
                                        ]
                                      }
                                      organization={
                                        Object {
                                          "access": Array [
                                            "org:read",
                                            "org:write",
                                            "org:admin",
                                            "project:read",
                                            "project:write",
                                            "project:admin",
                                            "team:read",
                                            "team:write",
                                            "team:admin",
                                          ],
                                          "features": Array [],
                                          "id": "3",
                                          "name": "Organization Name",
                                          "onboardingTasks": Array [],
                                          "projects": Array [],
                                          "scrapeJavaScript": true,
                                          "slug": "org-slug",
                                          "status": Object {
                                            "id": "deletion_in_progress",
                                            "name": "deletion in progress",
                                          },
                                          "teams": Array [],
                                        }
                                      }
                                      renderDisabled={false}
                                      requireAll={true}
                                    />
                                  </FeatureContainer>
                                  <FeatureContainer
                                    features={
                                      Array [
                                        "discover",
                                      ]
                                    }
                                  >
                                    <Feature
                                      configFeatures={Array []}
                                      features={
                                        Array [
                                          "discover",
                                        ]
                                      }
                                      organization={
                                        Object {
                                          "access": Array [
                                            "org:read",
                                            "org:write",
                                            "org:admin",
                                            "project:read",
                                            "project:write",
                                            "project:admin",
                                            "team:read",
                                            "team:write",
                                            "team:admin",
                                          ],
                                          "features": Array [],
                                          "id": "3",
                                          "name": "Organization Name",
                                          "onboardingTasks": Array [],
                                          "projects": Array [],
                                          "scrapeJavaScript": true,
                                          "slug": "org-slug",
                                          "status": Object {
                                            "id": "deletion_in_progress",
                                            "name": "deletion in progress",
                                          },
                                          "teams": Array [],
                                        }
                                      }
                                      renderDisabled={false}
                                      requireAll={true}
                                    />
                                  </FeatureContainer>
                                </div>
                              </SidebarSection>
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <withRouter(SidebarItem)
                                    collapsed={false}
                                    hasPanel={false}
                                    icon={
                                      <InlineSvg
                                        src="icon-user"
                                      />
                                    }
                                    label="Assigned to me"
                                    onClick={[Function]}
                                    orientation="left"
                                    to="/organizations/org-slug/issues/assigned/"
                                  >
                                    <SidebarItem
                                      collapsed={false}
                                      hasPanel={false}
                                      icon={
                                        <InlineSvg
                                          src="icon-user"
                                        />
                                      }
                                      label="Assigned to me"
                                      onClick={[Function]}
                                      orientation="left"
                                      to="/organizations/org-slug/issues/assigned/"
                                    >
                                      <Tooltip
                                        disabled={true}
                                        title="Assigned to me"
                                        tooltipOptions={
                                          Object {
                                            "html": true,
                                            "placement": "right",
                                          }
                                        }
                                      >
                                        <StyledSidebarItem
                                          active={false}
                                          onClick={[Function]}
                                          to="/organizations/org-slug/issues/assigned/"
                                        >
                                          <Component
                                            active={false}
                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                            onClick={[Function]}
                                            to="/organizations/org-slug/issues/assigned/"
                                          >
                                            <Link
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              onClick={[Function]}
                                              to="/organizations/org-slug/issues/assigned/"
                                            >
                                              <a
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                href="/organizations/org-slug/issues/assigned/"
                                                onClick={[Function]}
                                              >
                                                <SidebarItemWrapper>
                                                  <div
                                                    className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                  >
                                                    <SidebarItemIcon>
                                                      <span
                                                        className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                      >
                                                        <InlineSvg
                                                          src="icon-user"
                                                        >
                                                          <StyledSvg
                                                            height="1em"
                                                            viewBox={Object {}}
                                                            width="1em"
                                                          >
                                                            <svg
                                                              className="css-ryh69w-StyledSvg e2idor0"
                                                              height="1em"
                                                              viewBox={Object {}}
                                                              width="1em"
                                                            >
                                                              <use
                                                                href="#test"
                                                                xlinkHref="#test"
                                                              />
                                                            </svg>
                                                          </StyledSvg>
                                                        </InlineSvg>
                                                      </span>
                                                    </SidebarItemIcon>
                                                    <SidebarItemLabel>
                                                      <span
                                                        className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                      >
                                                        <TextOverflow>
                                                          <div
                                                            className="css-179hf69-TextOverflow e8qi82q0"
                                                          >
                                                            Assigned to me
                                                          </div>
                                                        </TextOverflow>
                                                      </span>
                                                    </SidebarItemLabel>
                                                  </div>
                                                </SidebarItemWrapper>
                                              </a>
                                            </Link>
                                          </Component>
                                        </StyledSidebarItem>
                                      </Tooltip>
                                    </SidebarItem>
                                  </withRouter(SidebarItem)>
                                  <withRouter(SidebarItem)
                                    collapsed={false}
                                    hasPanel={false}
                                    icon={
                                      <InlineSvg
                                        src="icon-star"
                                      />
                                    }
                                    label="Bookmarked issues"
                                    onClick={[Function]}
                                    orientation="left"
                                    to="/organizations/org-slug/issues/bookmarks/"
                                  >
                                    <SidebarItem
                                      collapsed={false}
                                      hasPanel={false}
                                      icon={
                                        <InlineSvg
                                          src="icon-star"
                                        />
                                      }
                                      label="Bookmarked issues"
                                      onClick={[Function]}
                                      orientation="left"
                                      to="/organizations/org-slug/issues/bookmarks/"
                                    >
                                      <Tooltip
                                        disabled={true}
                                        title="Bookmarked issues"
                                        tooltipOptions={
                                          Object {
                                            "html": true,
                                            "placement": "right",
                                          }
                                        }
                                      >
                                        <StyledSidebarItem
                                          active={false}
                                          onClick={[Function]}
                                          to="/organizations/org-slug/issues/bookmarks/"
                                        >
                                          <Component
                                            active={false}
                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                            onClick={[Function]}
                                            to="/organizations/org-slug/issues/bookmarks/"
                                          >
                                            <Link
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              onClick={[Function]}
                                              to="/organizations/org-slug/issues/bookmarks/"
                                            >
                                              <a
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                href="/organizations/org-slug/issues/bookmarks/"
                                                onClick={[Function]}
                                              >
                                                <SidebarItemWrapper>
                                                  <div
                                                    className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                  >
                                                    <SidebarItemIcon>
                                                      <span
                                                        className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                      >
                                                        <InlineSvg
                                                          src="icon-star"
                                                        >
                                                          <StyledSvg
                                                            height="1em"
                                                            viewBox={Object {}}
                                                            width="1em"
                                                          >
                                                            <svg
                                                              className="css-ryh69w-StyledSvg e2idor0"
                                                              height="1em"
                                                              viewBox={Object {}}
                                                              width="1em"
                                                            >
                                                              <use
                                                                href="#test"
                                                                xlinkHref="#test"
                                                              />
                                                            </svg>
                                                          </StyledSvg>
                                                        </InlineSvg>
                                                      </span>
                                                    </SidebarItemIcon>
                                                    <SidebarItemLabel>
                                                      <span
                                                        className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                      >
                                                        <TextOverflow>
                                                          <div
                                                            className="css-179hf69-TextOverflow e8qi82q0"
                                                          >
                                                            Bookmarked issues
                                                          </div>
                                                        </TextOverflow>
                                                      </span>
                                                    </SidebarItemLabel>
                                                  </div>
                                                </SidebarItemWrapper>
                                              </a>
                                            </Link>
                                          </Component>
                                        </StyledSidebarItem>
                                      </Tooltip>
                                    </SidebarItem>
                                  </withRouter(SidebarItem)>
                                  <withRouter(SidebarItem)
                                    collapsed={false}
                                    hasPanel={false}
                                    icon={
                                      <InlineSvg
                                        src="icon-history"
                                      />
                                    }
                                    label="Recently viewed"
                                    onClick={[Function]}
                                    orientation="left"
                                    to="/organizations/org-slug/issues/history/"
                                  >
                                    <SidebarItem
                                      collapsed={false}
                                      hasPanel={false}
                                      icon={
                                        <InlineSvg
                                          src="icon-history"
                                        />
                                      }
                                      label="Recently viewed"
                                      onClick={[Function]}
                                      orientation="left"
                                      to="/organizations/org-slug/issues/history/"
                                    >
                                      <Tooltip
                                        disabled={true}
                                        title="Recently viewed"
                                        tooltipOptions={
                                          Object {
                                            "html": true,
                                            "placement": "right",
                                          }
                                        }
                                      >
                                        <StyledSidebarItem
                                          active={false}
                                          onClick={[Function]}
                                          to="/organizations/org-slug/issues/history/"
                                        >
                                          <Component
                                            active={false}
                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                            onClick={[Function]}
                                            to="/organizations/org-slug/issues/history/"
                                          >
                                            <Link
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              onClick={[Function]}
                                              to="/organizations/org-slug/issues/history/"
                                            >
                                              <a
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                href="/organizations/org-slug/issues/history/"
                                                onClick={[Function]}
                                              >
                                                <SidebarItemWrapper>
                                                  <div
                                                    className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                  >
                                                    <SidebarItemIcon>
                                                      <span
                                                        className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                      >
                                                        <InlineSvg
                                                          src="icon-history"
                                                        >
                                                          <StyledSvg
                                                            height="1em"
                                                            viewBox={Object {}}
                                                            width="1em"
                                                          >
                                                            <svg
                                                              className="css-ryh69w-StyledSvg e2idor0"
                                                              height="1em"
                                                              viewBox={Object {}}
                                                              width="1em"
                                                            >
                                                              <use
                                                                href="#test"
                                                                xlinkHref="#test"
                                                              />
                                                            </svg>
                                                          </StyledSvg>
                                                        </InlineSvg>
                                                      </span>
                                                    </SidebarItemIcon>
                                                    <SidebarItemLabel>
                                                      <span
                                                        className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                      >
                                                        <TextOverflow>
                                                          <div
                                                            className="css-179hf69-TextOverflow e8qi82q0"
                                                          >
                                                            Recently viewed
                                                          </div>
                                                        </TextOverflow>
                                                      </span>
                                                    </SidebarItemLabel>
                                                  </div>
                                                </SidebarItemWrapper>
                                              </a>
                                            </Link>
                                          </Component>
                                        </StyledSidebarItem>
                                      </Tooltip>
                                    </SidebarItem>
                                  </withRouter(SidebarItem)>
                                </div>
                              </SidebarSection>
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <withRouter(SidebarItem)
                                    collapsed={false}
                                    hasPanel={false}
                                    icon={
                                      <InlineSvg
                                        src="icon-activity"
                                      />
                                    }
                                    label="Activity"
                                    onClick={[Function]}
                                    orientation="left"
                                    to="/organizations/org-slug/activity/"
                                  >
                                    <SidebarItem
                                      collapsed={false}
                                      hasPanel={false}
                                      icon={
                                        <InlineSvg
                                          src="icon-activity"
                                        />
                                      }
                                      label="Activity"
                                      onClick={[Function]}
                                      orientation="left"
                                      to="/organizations/org-slug/activity/"
                                    >
                                      <Tooltip
                                        disabled={true}
                                        title="Activity"
                                        tooltipOptions={
                                          Object {
                                            "html": true,
                                            "placement": "right",
                                          }
                                        }
                                      >
                                        <StyledSidebarItem
                                          active={false}
                                          onClick={[Function]}
                                          to="/organizations/org-slug/activity/"
                                        >
                                          <Component
                                            active={false}
                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                            onClick={[Function]}
                                            to="/organizations/org-slug/activity/"
                                          >
                                            <Link
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              onClick={[Function]}
                                              to="/organizations/org-slug/activity/"
                                            >
                                              <a
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                href="/organizations/org-slug/activity/"
                                                onClick={[Function]}
                                              >
                                                <SidebarItemWrapper>
                                                  <div
                                                    className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                  >
                                                    <SidebarItemIcon>
                                                      <span
                                                        className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                      >
                                                        <InlineSvg
                                                          src="icon-activity"
                                                        >
                                                          <StyledSvg
                                                            height="1em"
                                                            viewBox={Object {}}
                                                            width="1em"
                                                          >
                                                            <svg
                                                              className="css-ryh69w-StyledSvg e2idor0"
                                                              height="1em"
                                                              viewBox={Object {}}
                                                              width="1em"
                                                            >
                                                              <use
                                                                href="#test"
                                                                xlinkHref="#test"
                                                              />
                                                            </svg>
                                                          </StyledSvg>
                                                        </InlineSvg>
                                                      </span>
                                                    </SidebarItemIcon>
                                                    <SidebarItemLabel>
                                                      <span
                                                        className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                      >
                                                        <TextOverflow>
                                                          <div
                                                            className="css-179hf69-TextOverflow e8qi82q0"
                                                          >
                                                            Activity
                                                          </div>
                                                        </TextOverflow>
                                                      </span>
                                                    </SidebarItemLabel>
                                                  </div>
                                                </SidebarItemWrapper>
                                              </a>
                                            </Link>
                                          </Component>
                                        </StyledSidebarItem>
                                      </Tooltip>
                                    </SidebarItem>
                                  </withRouter(SidebarItem)>
                                  <withRouter(SidebarItem)
                                    collapsed={false}
                                    hasPanel={false}
                                    icon={
                                      <InlineSvg
                                        src="icon-stats"
                                      />
                                    }
                                    label="Stats"
                                    onClick={[Function]}
                                    orientation="left"
                                    to="/organizations/org-slug/stats/"
                                  >
                                    <SidebarItem
                                      collapsed={false}
                                      hasPanel={false}
                                      icon={
                                        <InlineSvg
                                          src="icon-stats"
                                        />
                                      }
                                      label="Stats"
                                      onClick={[Function]}
                                      orientation="left"
                                      to="/organizations/org-slug/stats/"
                                    >
                                      <Tooltip
                                        disabled={true}
                                        title="Stats"
                                        tooltipOptions={
                                          Object {
                                            "html": true,
                                            "placement": "right",
                                          }
                                        }
                                      >
                                        <StyledSidebarItem
                                          active={false}
                                          onClick={[Function]}
                                          to="/organizations/org-slug/stats/"
                                        >
                                          <Component
                                            active={false}
                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                            onClick={[Function]}
                                            to="/organizations/org-slug/stats/"
                                          >
                                            <Link
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              onClick={[Function]}
                                              to="/organizations/org-slug/stats/"
                                            >
                                              <a
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                href="/organizations/org-slug/stats/"
                                                onClick={[Function]}
                                              >
                                                <SidebarItemWrapper>
                                                  <div
                                                    className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                  >
                                                    <SidebarItemIcon>
                                                      <span
                                                        className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                      >
                                                        <InlineSvg
                                                          src="icon-stats"
                                                        >
                                                          <StyledSvg
                                                            height="1em"
                                                            viewBox={Object {}}
                                                            width="1em"
                                                          >
                                                            <svg
                                                              className="css-ryh69w-StyledSvg e2idor0"
                                                              height="1em"
                                                              viewBox={Object {}}
                                                              width="1em"
                                                            >
                                                              <use
                                                                href="#test"
                                                                xlinkHref="#test"
                                                              />
                                                            </svg>
                                                          </StyledSvg>
                                                        </InlineSvg>
                                                      </span>
                                                    </SidebarItemIcon>
                                                    <SidebarItemLabel>
                                                      <span
                                                        className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                      >
                                                        <TextOverflow>
                                                          <div
                                                            className="css-179hf69-TextOverflow e8qi82q0"
                                                          >
                                                            Stats
                                                          </div>
                                                        </TextOverflow>
                                                      </span>
                                                    </SidebarItemLabel>
                                                  </div>
                                                </SidebarItemWrapper>
                                              </a>
                                            </Link>
                                          </Component>
                                        </StyledSidebarItem>
                                      </Tooltip>
                                    </SidebarItem>
                                  </withRouter(SidebarItem)>
                                </div>
                              </SidebarSection>
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <withRouter(SidebarItem)
                                    collapsed={false}
                                    hasPanel={false}
                                    icon={
                                      <InlineSvg
                                        src="icon-settings"
                                      />
                                    }
                                    label="Settings"
                                    onClick={[Function]}
                                    orientation="left"
                                    to="/settings/org-slug/"
                                  >
                                    <SidebarItem
                                      collapsed={false}
                                      hasPanel={false}
                                      icon={
                                        <InlineSvg
                                          src="icon-settings"
                                        />
                                      }
                                      label="Settings"
                                      onClick={[Function]}
                                      orientation="left"
                                      to="/settings/org-slug/"
                                    >
                                      <Tooltip
                                        disabled={true}
                                        title="Settings"
                                        tooltipOptions={
                                          Object {
                                            "html": true,
                                            "placement": "right",
                                          }
                                        }
                                      >
                                        <StyledSidebarItem
                                          active={false}
                                          onClick={[Function]}
                                          to="/settings/org-slug/"
                                        >
                                          <Component
                                            active={false}
                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                            onClick={[Function]}
                                            to="/settings/org-slug/"
                                          >
                                            <Link
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              onClick={[Function]}
                                              to="/settings/org-slug/"
                                            >
                                              <a
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                href="/settings/org-slug/"
                                                onClick={[Function]}
                                              >
                                                <SidebarItemWrapper>
                                                  <div
                                                    className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                  >
                                                    <SidebarItemIcon>
                                                      <span
                                                        className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                      >
                                                        <InlineSvg
                                                          src="icon-settings"
                                                        >
                                                          <StyledSvg
                                                            height="1em"
                                                            viewBox={Object {}}
                                                            width="1em"
                                                          >
                                                            <svg
                                                              className="css-ryh69w-StyledSvg e2idor0"
                                                              height="1em"
                                                              viewBox={Object {}}
                                                              width="1em"
                                                            >
                                                              <use
                                                                href="#test"
                                                                xlinkHref="#test"
                                                              />
                                                            </svg>
                                                          </StyledSvg>
                                                        </InlineSvg>
                                                      </span>
                                                    </SidebarItemIcon>
                                                    <SidebarItemLabel>
                                                      <span
                                                        className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                      >
                                                        <TextOverflow>
                                                          <div
                                                            className="css-179hf69-TextOverflow e8qi82q0"
                                                          >
                                                            Settings
                                                          </div>
                                                        </TextOverflow>
                                                      </span>
                                                    </SidebarItemLabel>
                                                  </div>
                                                </SidebarItemWrapper>
                                              </a>
                                            </Link>
                                          </Component>
                                        </StyledSidebarItem>
                                      </Tooltip>
                                    </SidebarItem>
                                  </withRouter(SidebarItem)>
                                </div>
                              </SidebarSection>
                            </div>
                          </SidebarSectionGroup>
                          <SidebarSectionGroup>
                            <div
                              className="css-1uxlgm0-SidebarSectionGroup-responsiveFlex e1sgxx351"
                            >
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <SidebarHelp
                                    collapsed={false}
                                    hidePanel={[Function]}
                                    organization={
                                      Object {
                                        "access": Array [
                                          "org:read",
                                          "org:write",
                                          "org:admin",
                                          "project:read",
                                          "project:write",
                                          "project:admin",
                                          "team:read",
                                          "team:write",
                                          "team:admin",
                                        ],
                                        "features": Array [],
                                        "id": "3",
                                        "name": "Organization Name",
                                        "onboardingTasks": Array [],
                                        "projects": Array [],
                                        "scrapeJavaScript": true,
                                        "slug": "org-slug",
                                        "status": Object {
                                          "id": "deletion_in_progress",
                                          "name": "deletion in progress",
                                        },
                                        "teams": Array [],
                                      }
                                    }
                                    orientation="left"
                                  >
                                    <DropdownMenu
                                      closeOnEscape={true}
                                      keepMenuOpen={false}
                                    >
                                      <HelpRoot>
                                        <div
                                          className="css-1dvxhjs-HelpRoot e1q2bb9t0"
                                        >
                                          <HelpActor
                                            innerRef={[Function]}
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            style={
                                              Object {
                                                "outline": "none",
                                              }
                                            }
                                            tabIndex={-1}
                                          >
                                            <div
                                              className="css-d4wreg-HelpActor e1q2bb9t1"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              style={
                                                Object {
                                                  "outline": "none",
                                                }
                                              }
                                              tabIndex={-1}
                                            >
                                              <withRouter(SidebarItem)
                                                collapsed={false}
                                                hasPanel={false}
                                                icon={
                                                  <InlineSvg
                                                    src="icon-circle-question"
                                                  />
                                                }
                                                label="Help"
                                                orientation="left"
                                              >
                                                <SidebarItem
                                                  collapsed={false}
                                                  hasPanel={false}
                                                  icon={
                                                    <InlineSvg
                                                      src="icon-circle-question"
                                                    />
                                                  }
                                                  label="Help"
                                                  orientation="left"
                                                >
                                                  <Tooltip
                                                    disabled={true}
                                                    title="Help"
                                                    tooltipOptions={
                                                      Object {
                                                        "html": true,
                                                        "placement": "right",
                                                      }
                                                    }
                                                  >
                                                    <StyledSidebarItem
                                                      active={false}
                                                      onClick={[Function]}
                                                    >
                                                      <Component
                                                        active={false}
                                                        className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                        onClick={[Function]}
                                                      >
                                                        <Link
                                                          className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                          onClick={[Function]}
                                                        >
                                                          <a
                                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                            onClick={[Function]}
                                                          >
                                                            <SidebarItemWrapper>
                                                              <div
                                                                className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                              >
                                                                <SidebarItemIcon>
                                                                  <span
                                                                    className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                                  >
                                                                    <InlineSvg
                                                                      src="icon-circle-question"
                                                                    >
                                                                      <StyledSvg
                                                                        height="1em"
                                                                        viewBox={Object {}}
                                                                        width="1em"
                                                                      >
                                                                        <svg
                                                                          className="css-ryh69w-StyledSvg e2idor0"
                                                                          height="1em"
                                                                          viewBox={Object {}}
                                                                          width="1em"
                                                                        >
                                                                          <use
                                                                            href="#test"
                                                                            xlinkHref="#test"
                                                                          />
                                                                        </svg>
                                                                      </StyledSvg>
                                                                    </InlineSvg>
                                                                  </span>
                                                                </SidebarItemIcon>
                                                                <SidebarItemLabel>
                                                                  <span
                                                                    className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                                  >
                                                                    <TextOverflow>
                                                                      <div
                                                                        className="css-179hf69-TextOverflow e8qi82q0"
                                                                      >
                                                                        Help
                                                                      </div>
                                                                    </TextOverflow>
                                                                  </span>
                                                                </SidebarItemLabel>
                                                              </div>
                                                            </SidebarItemWrapper>
                                                          </a>
                                                        </Link>
                                                      </Component>
                                                    </StyledSidebarItem>
                                                  </Tooltip>
                                                </SidebarItem>
                                              </withRouter(SidebarItem)>
                                            </div>
                                          </HelpActor>
                                        </div>
                                      </HelpRoot>
                                    </DropdownMenu>
                                  </SidebarHelp>
                                  <Broadcasts
                                    collapsed={false}
                                    currentPanel=""
                                    hidePanel={[Function]}
                                    onShowPanel={[Function]}
                                    orientation="left"
                                    showPanel={false}
                                  >
                                    <withRouter(SidebarItem)
                                      active={false}
                                      badge={0}
                                      collapsed={false}
                                      data-test-id="sidebar-broadcasts"
                                      icon={
                                        <InlineSvg
                                          size="22px"
                                          src="icon-broadcast"
                                        />
                                      }
                                      label="What's new"
                                      onClick={[Function]}
                                      orientation="left"
                                    >
                                      <SidebarItem
                                        active={false}
                                        badge={0}
                                        collapsed={false}
                                        data-test-id="sidebar-broadcasts"
                                        icon={
                                          <InlineSvg
                                            size="22px"
                                            src="icon-broadcast"
                                          />
                                        }
                                        label="What's new"
                                        onClick={[Function]}
                                        orientation="left"
                                      >
                                        <Tooltip
                                          disabled={true}
                                          title="What's new"
                                          tooltipOptions={
                                            Object {
                                              "html": true,
                                              "placement": "right",
                                            }
                                          }
                                        >
                                          <StyledSidebarItem
                                            active={false}
                                            data-test-id="sidebar-broadcasts"
                                            onClick={[Function]}
                                          >
                                            <Component
                                              active={false}
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              data-test-id="sidebar-broadcasts"
                                              onClick={[Function]}
                                            >
                                              <Link
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                data-test-id="sidebar-broadcasts"
                                                onClick={[Function]}
                                              >
                                                <a
                                                  className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                  data-test-id="sidebar-broadcasts"
                                                  onClick={[Function]}
                                                >
                                                  <SidebarItemWrapper>
                                                    <div
                                                      className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                    >
                                                      <SidebarItemIcon>
                                                        <span
                                                          className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                        >
                                                          <InlineSvg
                                                            size="22px"
                                                            src="icon-broadcast"
                                                          >
                                                            <StyledSvg
                                                              height="22px"
                                                              viewBox={Object {}}
                                                              width="22px"
                                                            >
                                                              <svg
                                                                className="css-ryh69w-StyledSvg e2idor0"
                                                                height="22px"
                                                                viewBox={Object {}}
                                                                width="22px"
                                                              >
                                                                <use
                                                                  href="#test"
                                                                  xlinkHref="#test"
                                                                />
                                                              </svg>
                                                            </StyledSvg>
                                                          </InlineSvg>
                                                        </span>
                                                      </SidebarItemIcon>
                                                      <SidebarItemLabel>
                                                        <span
                                                          className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                        >
                                                          <TextOverflow>
                                                            <div
                                                              className="css-179hf69-TextOverflow e8qi82q0"
                                                            >
                                                              What's new
                                                            </div>
                                                          </TextOverflow>
                                                        </span>
                                                      </SidebarItemLabel>
                                                    </div>
                                                  </SidebarItemWrapper>
                                                </a>
                                              </Link>
                                            </Component>
                                          </StyledSidebarItem>
                                        </Tooltip>
                                      </SidebarItem>
                                    </withRouter(SidebarItem)>
                                  </Broadcasts>
                                  <Incidents
                                    collapsed={false}
                                    currentPanel=""
                                    hidePanel={[Function]}
                                    onShowPanel={[Function]}
                                    orientation="left"
                                    showPanel={false}
                                  />
                                </div>
                              </SidebarSection>
                              <SidebarSection
                                noMargin={true}
                              >
                                <div
                                  className="css-1j3ay2q-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <OnboardingStatus
                                    collapsed={false}
                                    currentPanel=""
                                    hidePanel={[Function]}
                                    onShowPanel={[Function]}
                                    org={
                                      Object {
                                        "access": Array [
                                          "org:read",
                                          "org:write",
                                          "org:admin",
                                          "project:read",
                                          "project:write",
                                          "project:admin",
                                          "team:read",
                                          "team:write",
                                          "team:admin",
                                        ],
                                        "features": Array [],
                                        "id": "3",
                                        "name": "Organization Name",
                                        "onboardingTasks": Array [],
                                        "projects": Array [],
                                        "scrapeJavaScript": true,
                                        "slug": "org-slug",
                                        "status": Object {
                                          "id": "deletion_in_progress",
                                          "name": "deletion in progress",
                                        },
                                        "teams": Array [],
                                      }
                                    }
                                    showPanel={false}
                                  />
                                </div>
                              </SidebarSection>
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <SidebarCollapseItem
                                    collapsed={false}
                                    data-test-id="sidebar-collapse"
                                    hasPanel={false}
                                    icon={
                                      <StyledInlineSvg
                                        collapsed={false}
                                        src="icon-collapse"
                                      />
                                    }
                                    label="Collapse"
                                    onClick={[Function]}
                                    orientation="left"
                                  >
                                    <withRouter(SidebarItem)
                                      className="css-1s7mi0e-SidebarCollapseItem e1sgxx354"
                                      collapsed={false}
                                      data-test-id="sidebar-collapse"
                                      hasPanel={false}
                                      icon={
                                        <StyledInlineSvg
                                          collapsed={false}
                                          src="icon-collapse"
                                        />
                                      }
                                      label="Collapse"
                                      onClick={[Function]}
                                      orientation="left"
                                    >
                                      <SidebarItem
                                        className="css-1s7mi0e-SidebarCollapseItem e1sgxx354"
                                        collapsed={false}
                                        data-test-id="sidebar-collapse"
                                        hasPanel={false}
                                        icon={
                                          <StyledInlineSvg
                                            collapsed={false}
                                            src="icon-collapse"
                                          />
                                        }
                                        label="Collapse"
                                        onClick={[Function]}
                                        orientation="left"
                                      >
                                        <Tooltip
                                          disabled={true}
                                          title="Collapse"
                                          tooltipOptions={
                                            Object {
                                              "html": true,
                                              "placement": "right",
                                            }
                                          }
                                        >
                                          <StyledSidebarItem
                                            active={false}
                                            className="css-1s7mi0e-SidebarCollapseItem e1sgxx354"
                                            data-test-id="sidebar-collapse"
                                            onClick={[Function]}
                                          >
                                            <Component
                                              active={false}
                                              className="e1sgxx354 css-ekfpov-StyledSidebarItem-SidebarCollapseItem e1qdnaq70"
                                              data-test-id="sidebar-collapse"
                                              onClick={[Function]}
                                            >
                                              <Link
                                                className="e1sgxx354 css-ekfpov-StyledSidebarItem-SidebarCollapseItem e1qdnaq70"
                                                data-test-id="sidebar-collapse"
                                                onClick={[Function]}
                                              >
                                                <a
                                                  className="e1sgxx354 css-ekfpov-StyledSidebarItem-SidebarCollapseItem e1qdnaq70"
                                                  data-test-id="sidebar-collapse"
                                                  onClick={[Function]}
                                                >
                                                  <SidebarItemWrapper>
                                                    <div
                                                      className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                    >
                                                      <SidebarItemIcon>
                                                        <span
                                                          className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                        >
                                                          <StyledInlineSvg
                                                            collapsed={false}
                                                            src="icon-collapse"
                                                          >
                                                            <Component
                                                              className="css-19qca8n-StyledInlineSvg e1sgxx353"
                                                              collapsed={false}
                                                              src="icon-collapse"
                                                            >
                                                              <InlineSvg
                                                                className="e1sgxx353 css-1ktuuwq-StyledInlineSvg-ExpandedIcon"
                                                                src="icon-collapse"
                                                              >
                                                                <StyledSvg
                                                                  className="e1sgxx353 css-1ktuuwq-StyledInlineSvg-ExpandedIcon"
                                                                  height="1em"
                                                                  viewBox={Object {}}
                                                                  width="1em"
                                                                >
                                                                  <svg
                                                                    className="e1sgxx353 css-coblwz-StyledSvg-StyledInlineSvg-ExpandedIcon e2idor0"
                                                                    height="1em"
                                                                    viewBox={Object {}}
                                                                    width="1em"
                                                                  >
                                                                    <use
                                                                      href="#test"
                                                                      xlinkHref="#test"
                                                                    />
                                                                  </svg>
                                                                </StyledSvg>
                                                              </InlineSvg>
                                                            </Component>
                                                          </StyledInlineSvg>
                                                        </span>
                                                      </SidebarItemIcon>
                                                      <SidebarItemLabel>
                                                        <span
                                                          className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                        >
                                                          <TextOverflow>
                                                            <div
                                                              className="css-179hf69-TextOverflow e8qi82q0"
                                                            >
                                                              Collapse
                                                            </div>
                                                          </TextOverflow>
                                                        </span>
                                                      </SidebarItemLabel>
                                                    </div>
                                                  </SidebarItemWrapper>
                                                </a>
                                              </Link>
                                            </Component>
                                          </StyledSidebarItem>
                                        </Tooltip>
                                      </SidebarItem>
                                    </withRouter(SidebarItem)>
                                  </SidebarCollapseItem>
                                </div>
                              </SidebarSection>
                            </div>
                          </SidebarSectionGroup>
                        </div>
                      </StyledSidebar>
                    </Sidebar>
                  </ThemeProvider>
                </SidebarContainer>
              </withRouter(SidebarContainer)>
            </withLatestContext(withRouter(SidebarContainer))>
          </withOrganizations(withLatestContext(withRouter(SidebarContainer)))>
          <OrganizationDetailsBody>
            <DeletionInProgress
              organization={
                Object {
                  "access": Array [
                    "org:read",
                    "org:write",
                    "org:admin",
                    "project:read",
                    "project:write",
                    "project:admin",
                    "team:read",
                    "team:write",
                    "team:admin",
                  ],
                  "features": Array [],
                  "id": "3",
                  "name": "Organization Name",
                  "onboardingTasks": Array [],
                  "projects": Array [],
                  "scrapeJavaScript": true,
                  "slug": "org-slug",
                  "status": Object {
                    "id": "deletion_in_progress",
                    "name": "deletion in progress",
                  },
                  "teams": Array [],
                }
              }
            >
              <NarrowLayout>
                <div
                  className="app"
                >
                  <div
                    className="pattern-bg"
                  />
                  <div
                    className="container"
                  >
                    <div
                      className="box box-modal"
                    >
                      <div
                        className="box-header"
                      >
                        <a
                          href="/"
                        >
                          <span
                            className="icon-sentry-logo"
                          />
                        </a>
                      </div>
                      <div
                        className="box-content with-padding"
                      >
                        <p>
                          <span
                            key="4"
                          >
                            <span
                              key="0"
                            >
                              The 
                            </span>
                            <strong
                              key="1"
                            >
                              org-slug
                            </strong>
                            <span
                              key="2"
                            >
                               organization is currently in the process of being deleted from Sentry.
                            </span>
                          </span>
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </NarrowLayout>
            </DeletionInProgress>
          </OrganizationDetailsBody>
        </div>
      </DocumentTitle>
    </SideEffect(DocumentTitle)>
  </OrganizationContext>
</OrganizationDetails>
`;

exports[`OrganizationDetails render() pending deletion should render a restoration prompt 1`] = `
<OrganizationDetails
  location={Object {}}
  params={
    Object {
      "orgId": "org-slug",
    }
  }
>
  <OrganizationContext
    includeSidebar={true}
    location={Object {}}
    params={
      Object {
        "orgId": "org-slug",
      }
    }
  >
    <SideEffect(DocumentTitle)
      title="Organization Name"
    >
      <DocumentTitle
        title="Organization Name"
      >
        <div
          className="app"
        >
          <withOrganizations(withLatestContext(withRouter(SidebarContainer)))
            includeSidebar={true}
            location={Object {}}
            organization={
              Object {
                "access": Array [
                  "org:read",
                  "org:write",
                  "org:admin",
                  "project:read",
                  "project:write",
                  "project:admin",
                  "team:read",
                  "team:write",
                  "team:admin",
                ],
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "pending_deletion",
                  "name": "pending deletion",
                },
                "teams": Array [],
              }
            }
            params={
              Object {
                "orgId": "org-slug",
              }
            }
          >
            <withLatestContext(withRouter(SidebarContainer))
              includeSidebar={true}
              location={Object {}}
              organization={
                Object {
                  "access": Array [
                    "org:read",
                    "org:write",
                    "org:admin",
                    "project:read",
                    "project:write",
                    "project:admin",
                    "team:read",
                    "team:write",
                    "team:admin",
                  ],
                  "features": Array [],
                  "id": "3",
                  "name": "Organization Name",
                  "onboardingTasks": Array [],
                  "projects": Array [],
                  "scrapeJavaScript": true,
                  "slug": "org-slug",
                  "status": Object {
                    "id": "pending_deletion",
                    "name": "pending deletion",
                  },
                  "teams": Array [],
                }
              }
              organizations={Array []}
              params={
                Object {
                  "orgId": "org-slug",
                }
              }
            >
              <withRouter(SidebarContainer)
                includeSidebar={true}
                lastRoute={null}
                location={Object {}}
                organization={
                  Object {
                    "access": Array [
                      "org:read",
                      "org:write",
                      "org:admin",
                      "project:read",
                      "project:write",
                      "project:admin",
                      "team:read",
                      "team:write",
                      "team:admin",
                    ],
                    "features": Array [],
                    "id": "3",
                    "name": "Organization Name",
                    "onboardingTasks": Array [],
                    "projects": Array [],
                    "scrapeJavaScript": true,
                    "slug": "org-slug",
                    "status": Object {
                      "id": "pending_deletion",
                      "name": "pending deletion",
                    },
                    "teams": Array [],
                  }
                }
                organizations={Array []}
                params={
                  Object {
                    "orgId": "org-slug",
                  }
                }
                project={null}
              >
                <SidebarContainer
                  includeSidebar={true}
                  lastRoute={null}
                  location={
                    Object {
                      "query": Object {},
                    }
                  }
                  organization={
                    Object {
                      "access": Array [
                        "org:read",
                        "org:write",
                        "org:admin",
                        "project:read",
                        "project:write",
                        "project:admin",
                        "team:read",
                        "team:write",
                        "team:admin",
                      ],
                      "features": Array [],
                      "id": "3",
                      "name": "Organization Name",
                      "onboardingTasks": Array [],
                      "projects": Array [],
                      "scrapeJavaScript": true,
                      "slug": "org-slug",
                      "status": Object {
                        "id": "pending_deletion",
                        "name": "pending deletion",
                      },
                      "teams": Array [],
                    }
                  }
                  organizations={Array []}
                  project={null}
                  router={
                    Object {
                      "createHref": [MockFunction] {
                        "calls": Array [
                          Array [
                            "/org-slug/",
                          ],
                          Array [
                            "/organizations/org-slug/issues/assigned/",
                          ],
                          Array [
                            "/organizations/org-slug/issues/bookmarks/",
                          ],
                          Array [
                            "/organizations/org-slug/issues/history/",
                          ],
                          Array [
                            "/organizations/org-slug/activity/",
                          ],
                          Array [
                            "/organizations/org-slug/stats/",
                          ],
                          Array [
                            "/settings/org-slug/",
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                      "go": [MockFunction],
                      "goBack": [MockFunction],
                      "goForward": [MockFunction],
                      "isActive": [MockFunction],
                      "listen": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Function],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                      "location": Object {
                        "query": Object {},
                      },
                      "push": [MockFunction],
                      "replace": [MockFunction],
                      "setRouteLeaveHook": [MockFunction],
                    }
                  }
                >
                  <ThemeProvider
                    theme={
                      Object {
                        "alert": Object {
                          "attention": Object {
                            "background": "#F09E71",
                            "backgroundLight": "#ECBFA6",
                            "border": "#D0816D",
                          },
                          "beta": Object {
                            "background": "linear-gradient(90deg, #F868BC, #6C5FC7)",
                          },
                          "default": Object {
                            "background": "#BDB4C7",
                            "backgroundLight": "#FAF9FB",
                            "border": "#E2DBE8",
                          },
                          "error": Object {
                            "background": "#e03e2f",
                            "backgroundLight": "#FDF6F5",
                            "border": "#E7C0BC",
                            "iconColor": "#C72516",
                            "textLight": "#92635f",
                          },
                          "info": Object {
                            "background": "#3B6ECC",
                            "backgroundLight": "#F5FAFE",
                            "border": "#B5D6ED",
                            "iconColor": "#3B6ECC",
                          },
                          "success": Object {
                            "background": "#57be8c",
                            "backgroundLight": "#F8FCF7",
                            "border": "#BBD6B3",
                            "iconColor": "#3EA573",
                          },
                          "warn": Object {
                            "background": "#ecc844",
                            "backgroundLight": "#FFFDF7",
                            "border": "#E1D697",
                            "iconColor": "#e6bc23",
                          },
                          "warning": Object {
                            "background": "#ecc844",
                            "backgroundLight": "#FFFDF7",
                            "border": "#E1D697",
                            "iconColor": "#e6bc23",
                          },
                        },
                        "background": "#fff",
                        "blue": "#3B6ECC",
                        "blueDark": "#2F58A3",
                        "blueLight": "#628BD6",
                        "borderDark": "#D1CAD8",
                        "borderLight": "#E2DBE8",
                        "borderLighter": "#f9f6fd",
                        "borderRadius": "4px",
                        "breakpoints": Array [
                          "768px",
                          "992px",
                          "1200px",
                        ],
                        "button": Object {
                          "borderRadius": "3px",
                          "danger": Object {
                            "background": "#e03e2f",
                            "backgroundActive": "#bf2a1d",
                            "border": "#bf2a1d",
                            "borderActive": "#7d1c13",
                            "color": "#FFFFFF",
                          },
                          "default": Object {
                            "background": "#FFFFFF",
                            "backgroundActive": "#FFFFFF",
                            "border": "#d8d2de",
                            "borderActive": "#c9c0d1",
                            "color": "#2f2936",
                            "colorActive": "#161319",
                          },
                          "disabled": Object {
                            "background": "#FFFFFF",
                            "backgroundActive": "#FFFFFF",
                            "border": "#e3e5e6",
                            "borderActive": "#e3e5e6",
                            "color": "#BDB4C7",
                          },
                          "link": Object {
                            "background": "transparent",
                            "backgroundActive": "transparent",
                            "color": "#3B6ECC",
                          },
                          "primary": Object {
                            "background": "#6C5FC7",
                            "backgroundActive": "#4e3fb4",
                            "border": "#3d328e",
                            "borderActive": "#352b7b",
                            "color": "#FFFFFF",
                          },
                          "success": Object {
                            "background": "#3fa372",
                            "backgroundActive": "#57be8c",
                            "border": "#7ccca5",
                            "borderActive": "#7ccca5",
                            "color": "#FFFFFF",
                          },
                        },
                        "charts": Object {
                          "colors": Array [
                            "#444674",
                            "#524a7e",
                            "#624d84",
                            "#744f88",
                            "#865189",
                            "#985389",
                            "#aa5488",
                            "#bc5585",
                            "#cd5681",
                            "#df567c",
                            "#e86070",
                            "#ed6c64",
                            "#f17959",
                            "#f4854e",
                            "#f59242",
                            "#f59e35",
                            "#f4aa27",
                            "#f2b712",
                          ],
                          "getColorPalette": [Function],
                          "previousPeriod": "#BDB4C7",
                          "symbolSize": 6,
                        },
                        "diff": Object {
                          "added": "#d8f0e4",
                          "addedRow": "#f5fbf8",
                          "removed": "#f7ceca",
                          "removedRow": "#fcefee",
                        },
                        "disabled": "#BDB4C7",
                        "dropShadowHeavy": "0 1px 4px 1px rgba(47,40,55,0.08), 0 4px 16px 0 rgba(47,40,55,0.12)",
                        "dropShadowLight": "0 2px 0 rgba(37, 11, 54, 0.04)",
                        "error": "#e03e2f",
                        "fontSizeExtraLarge": "18px",
                        "fontSizeLarge": "16px",
                        "fontSizeMedium": "14px",
                        "fontSizeSmall": "12px",
                        "gray1": "#BDB4C7",
                        "gray2": "#9585A3",
                        "gray3": "#645574",
                        "gray4": "#4A3E56",
                        "gray5": "#302839",
                        "gray6": "#AFA3BB",
                        "green": "#57be8c",
                        "greenDark": "#3EA573",
                        "greenLight": "#71D8A6",
                        "greenTransparent": "rgba(87, 190, 140, 0.5)",
                        "grid": 8,
                        "headerFontSize": "22px",
                        "offWhite": "#FAF9FB",
                        "offWhite2": "#E7E1EC",
                        "orange": "#ec5e44",
                        "orangeDark": "#D3452B",
                        "orangeLight": "#FF785E",
                        "pink": "#F868BC",
                        "pinkDark": "#DF4FA3",
                        "pinkLight": "#FF82D6",
                        "purple": "#6C5FC7",
                        "purple2": "#6f617c",
                        "purpleDark": "#5346AE",
                        "purpleDarkest": "#392C94",
                        "purpleLight": "#8679E1",
                        "purpleLightest": "#9F92FA",
                        "red": "#e03e2f",
                        "redDark": "#C72516",
                        "redLight": "#FA5849",
                        "settings": Object {
                          "containerWidth": "1440px",
                          "headerHeight": "115px",
                          "maxCrumbWidth": "240px",
                          "sidebarWidth": "220px",
                        },
                        "sidebar": Object {
                          "background": "#2f2936",
                          "badgeSize": "22px",
                          "collapsedWidth": "70px",
                          "color": "#9586a5",
                          "divider": "#493e54",
                          "expandedWidth": "220px",
                          "menuSpacing": "15px",
                          "mobileHeight": "54px",
                          "panel": Object {
                            "headerHeight": "62px",
                            "width": "320px",
                          },
                          "smallBadgeSize": "11px",
                        },
                        "similarity": Object {
                          "colors": Array [
                            "#ec5e44",
                            "#f38259",
                            "#f9a66d",
                            "#98b480",
                            "#57be8c",
                          ],
                          "empty": "#e2dee6",
                        },
                        "success": "#57be8c",
                        "text": Object {
                          "family": "\\"Rubik\\", \\"Avenir Next\\", sans-serif",
                          "familyMono": "Monaco, Consolas, \\"Courier New\\", monospace",
                          "lineHeightBody": "1.4",
                          "lineHeightHeading": "1.15",
                        },
                        "textColor": "#302839",
                        "white": "#FFFFFF",
                        "whiteDark": "#fbfbfc",
                        "yellow": "#ecc844",
                        "yellowDark": "#e6bc23",
                        "yellowLight": "#FFF15E",
                        "yellowLightest": "#FFFDF7",
                        "yellowOrange": "#f9a66d",
                        "yellowOrangeDark": "#E08D54",
                        "yellowOrangeLight": "#FFC087",
                        "zIndex": Object {
                          "dropdown": 1001,
                          "dropdownAutocomplete": Object {
                            "actor": 1008,
                            "menu": 1007,
                          },
                          "globalSelectionHeader": 1002,
                          "header": 1000,
                          "modal": 10000,
                          "orgAndUserMenu": 1004,
                          "sidebar": 1003,
                          "toast": 10001,
                        },
                      }
                    }
                  >
                    <Sidebar
                      collapsed={false}
                      includeSidebar={true}
                      lastRoute={null}
                      location={
                        Object {
                          "query": Object {},
                        }
                      }
                      organization={
                        Object {
                          "access": Array [
                            "org:read",
                            "org:write",
                            "org:admin",
                            "project:read",
                            "project:write",
                            "project:admin",
                            "team:read",
                            "team:write",
                            "team:admin",
                          ],
                          "features": Array [],
                          "id": "3",
                          "name": "Organization Name",
                          "onboardingTasks": Array [],
                          "projects": Array [],
                          "scrapeJavaScript": true,
                          "slug": "org-slug",
                          "status": Object {
                            "id": "pending_deletion",
                            "name": "pending deletion",
                          },
                          "teams": Array [],
                        }
                      }
                      organizations={Array []}
                      project={null}
                      router={
                        Object {
                          "createHref": [MockFunction] {
                            "calls": Array [
                              Array [
                                "/org-slug/",
                              ],
                              Array [
                                "/organizations/org-slug/issues/assigned/",
                              ],
                              Array [
                                "/organizations/org-slug/issues/bookmarks/",
                              ],
                              Array [
                                "/organizations/org-slug/issues/history/",
                              ],
                              Array [
                                "/organizations/org-slug/activity/",
                              ],
                              Array [
                                "/organizations/org-slug/stats/",
                              ],
                              Array [
                                "/settings/org-slug/",
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                          "go": [MockFunction],
                          "goBack": [MockFunction],
                          "goForward": [MockFunction],
                          "isActive": [MockFunction],
                          "listen": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Function],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                          "location": Object {
                            "query": Object {},
                          },
                          "push": [MockFunction],
                          "replace": [MockFunction],
                          "setRouteLeaveHook": [MockFunction],
                        }
                      }
                    >
                      <StyledSidebar
                        collapsed={false}
                        innerRef={[Function]}
                      >
                        <div
                          className="css-5cf61n-StyledSidebar-responsiveFlex e1sgxx350"
                        >
                          <SidebarSectionGroup>
                            <div
                              className="css-1uxlgm0-SidebarSectionGroup-responsiveFlex e1sgxx351"
                            >
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <withApi(SidebarDropdown)
                                    collapsed={false}
                                    config={
                                      Object {
                                        "features": Set {},
                                        "messages": Array [],
                                        "user": Object {
                                          "email": "foo@example.com",
                                          "flags": Object {
                                            "newsletter_consent_prompt": false,
                                          },
                                          "hasPasswordAuth": true,
                                          "id": "1",
                                          "isAuthenticated": true,
                                          "name": "Foo Bar",
                                          "options": Object {
                                            "timezone": "UTC",
                                          },
                                          "permissions": Set {},
                                          "username": "foo@example.com",
                                        },
                                      }
                                    }
                                    onClick={[Function]}
                                    org={
                                      Object {
                                        "access": Array [
                                          "org:read",
                                          "org:write",
                                          "org:admin",
                                          "project:read",
                                          "project:write",
                                          "project:admin",
                                          "team:read",
                                          "team:write",
                                          "team:admin",
                                        ],
                                        "features": Array [],
                                        "id": "3",
                                        "name": "Organization Name",
                                        "onboardingTasks": Array [],
                                        "projects": Array [],
                                        "scrapeJavaScript": true,
                                        "slug": "org-slug",
                                        "status": Object {
                                          "id": "pending_deletion",
                                          "name": "pending deletion",
                                        },
                                        "teams": Array [],
                                      }
                                    }
                                    orientation="left"
                                    user={
                                      Object {
                                        "email": "foo@example.com",
                                        "flags": Object {
                                          "newsletter_consent_prompt": false,
                                        },
                                        "hasPasswordAuth": true,
                                        "id": "1",
                                        "isAuthenticated": true,
                                        "name": "Foo Bar",
                                        "options": Object {
                                          "timezone": "UTC",
                                        },
                                        "permissions": Set {},
                                        "username": "foo@example.com",
                                      }
                                    }
                                  >
                                    <SidebarDropdown
                                      api={Client {}}
                                      collapsed={false}
                                      config={
                                        Object {
                                          "features": Set {},
                                          "messages": Array [],
                                          "user": Object {
                                            "email": "foo@example.com",
                                            "flags": Object {
                                              "newsletter_consent_prompt": false,
                                            },
                                            "hasPasswordAuth": true,
                                            "id": "1",
                                            "isAuthenticated": true,
                                            "name": "Foo Bar",
                                            "options": Object {
                                              "timezone": "UTC",
                                            },
                                            "permissions": Set {},
                                            "username": "foo@example.com",
                                          },
                                        }
                                      }
                                      onClick={[Function]}
                                      org={
                                        Object {
                                          "access": Array [
                                            "org:read",
                                            "org:write",
                                            "org:admin",
                                            "project:read",
                                            "project:write",
                                            "project:admin",
                                            "team:read",
                                            "team:write",
                                            "team:admin",
                                          ],
                                          "features": Array [],
                                          "id": "3",
                                          "name": "Organization Name",
                                          "onboardingTasks": Array [],
                                          "projects": Array [],
                                          "scrapeJavaScript": true,
                                          "slug": "org-slug",
                                          "status": Object {
                                            "id": "pending_deletion",
                                            "name": "pending deletion",
                                          },
                                          "teams": Array [],
                                        }
                                      }
                                      orientation="left"
                                      user={
                                        Object {
                                          "email": "foo@example.com",
                                          "flags": Object {
                                            "newsletter_consent_prompt": false,
                                          },
                                          "hasPasswordAuth": true,
                                          "id": "1",
                                          "isAuthenticated": true,
                                          "name": "Foo Bar",
                                          "options": Object {
                                            "timezone": "UTC",
                                          },
                                          "permissions": Set {},
                                          "username": "foo@example.com",
                                        }
                                      }
                                    >
                                      <DropdownMenu
                                        closeOnEscape={true}
                                        keepMenuOpen={false}
                                      >
                                        <SidebarDropdownRoot
                                          isStyled={true}
                                        >
                                          <div
                                            className="css-jdsvwb-SidebarDropdownRoot e1fowdfw3"
                                          >
                                            <SidebarDropdownActor
                                              data-test-id="sidebar-dropdown"
                                              innerRef={[Function]}
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              style={
                                                Object {
                                                  "outline": "none",
                                                }
                                              }
                                              tabIndex={-1}
                                            >
                                              <div
                                                className="css-1d9hpgj-SidebarDropdownActor e1fowdfw7"
                                                data-test-id="sidebar-dropdown"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                style={
                                                  Object {
                                                    "outline": "none",
                                                  }
                                                }
                                                tabIndex={-1}
                                              >
                                                <div
                                                  style={
                                                    Object {
                                                      "alignItems": "flex-start",
                                                      "display": "flex",
                                                    }
                                                  }
                                                >
                                                  <StyledAvatar
                                                    collapsed={false}
                                                    onClick={[Function]}
                                                    organization={
                                                      Object {
                                                        "access": Array [
                                                          "org:read",
                                                          "org:write",
                                                          "org:admin",
                                                          "project:read",
                                                          "project:write",
                                                          "project:admin",
                                                          "team:read",
                                                          "team:write",
                                                          "team:admin",
                                                        ],
                                                        "features": Array [],
                                                        "id": "3",
                                                        "name": "Organization Name",
                                                        "onboardingTasks": Array [],
                                                        "projects": Array [],
                                                        "scrapeJavaScript": true,
                                                        "slug": "org-slug",
                                                        "status": Object {
                                                          "id": "pending_deletion",
                                                          "name": "pending deletion",
                                                        },
                                                        "teams": Array [],
                                                      }
                                                    }
                                                    round={false}
                                                    size={32}
                                                    user={null}
                                                  >
                                                    <Avatar
                                                      className="css-hbasbf-StyledAvatar e1fowdfw8"
                                                      collapsed={false}
                                                      hasTooltip={false}
                                                      onClick={[Function]}
                                                      organization={
                                                        Object {
                                                          "access": Array [
                                                            "org:read",
                                                            "org:write",
                                                            "org:admin",
                                                            "project:read",
                                                            "project:write",
                                                            "project:admin",
                                                            "team:read",
                                                            "team:write",
                                                            "team:admin",
                                                          ],
                                                          "features": Array [],
                                                          "id": "3",
                                                          "name": "Organization Name",
                                                          "onboardingTasks": Array [],
                                                          "projects": Array [],
                                                          "scrapeJavaScript": true,
                                                          "slug": "org-slug",
                                                          "status": Object {
                                                            "id": "pending_deletion",
                                                            "name": "pending deletion",
                                                          },
                                                          "teams": Array [],
                                                        }
                                                      }
                                                      round={false}
                                                      size={32}
                                                      user={null}
                                                    >
                                                      <OrganizationAvatar
                                                        className="css-hbasbf-StyledAvatar e1fowdfw8"
                                                        collapsed={false}
                                                        hasTooltip={false}
                                                        onClick={[Function]}
                                                        organization={
                                                          Object {
                                                            "access": Array [
                                                              "org:read",
                                                              "org:write",
                                                              "org:admin",
                                                              "project:read",
                                                              "project:write",
                                                              "project:admin",
                                                              "team:read",
                                                              "team:write",
                                                              "team:admin",
                                                            ],
                                                            "features": Array [],
                                                            "id": "3",
                                                            "name": "Organization Name",
                                                            "onboardingTasks": Array [],
                                                            "projects": Array [],
                                                            "scrapeJavaScript": true,
                                                            "slug": "org-slug",
                                                            "status": Object {
                                                              "id": "pending_deletion",
                                                              "name": "pending deletion",
                                                            },
                                                            "teams": Array [],
                                                          }
                                                        }
                                                        round={false}
                                                        size={32}
                                                      >
                                                        <BaseAvatar
                                                          className="css-hbasbf-StyledAvatar e1fowdfw8"
                                                          collapsed={false}
                                                          hasTooltip={false}
                                                          letterId="org-slug"
                                                          onClick={[Function]}
                                                          round={false}
                                                          size={32}
                                                          style={Object {}}
                                                          title="org slug"
                                                          tooltip="org-slug"
                                                          type="letter_avatar"
                                                          uploadPath="organization-avatar"
                                                        >
                                                          <Tooltip
                                                            disabled={true}
                                                            title="org-slug"
                                                          >
                                                            <StyledBaseAvatar
                                                              className="avatar css-hbasbf-StyledAvatar e1fowdfw8"
                                                              loaded={true}
                                                              round={false}
                                                              style={
                                                                Object {
                                                                  "height": "32px",
                                                                  "width": "32px",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="avatar e1fowdfw8 css-tmrp5m-StyledBaseAvatar-StyledAvatar e1z0ohzl0"
                                                                style={
                                                                  Object {
                                                                    "height": "32px",
                                                                    "width": "32px",
                                                                  }
                                                                }
                                                              >
                                                                <LetterAvatar
                                                                  displayName="org slug"
                                                                  identifier="org-slug"
                                                                  round={false}
                                                                >
                                                                  <Svg
                                                                    round={false}
                                                                    viewBox="0 0 120 120"
                                                                  >
                                                                    <svg
                                                                      className="css-123ijso-Svg e1knxa8x0"
                                                                      viewBox="0 0 120 120"
                                                                    >
                                                                      <rect
                                                                        fill="#4674ca"
                                                                        height="120"
                                                                        rx="15"
                                                                        ry="15"
                                                                        width="120"
                                                                        x="0"
                                                                        y="0"
                                                                      />
                                                                      <text
                                                                        fill="#FFFFFF"
                                                                        fontSize="65"
                                                                        style={
                                                                          Object {
                                                                            "dominantBaseline": "central",
                                                                          }
                                                                        }
                                                                        textAnchor="middle"
                                                                        x="50%"
                                                                        y="50%"
                                                                      >
                                                                        OS
                                                                      </text>
                                                                    </svg>
                                                                  </Svg>
                                                                </LetterAvatar>
                                                              </span>
                                                            </StyledBaseAvatar>
                                                          </Tooltip>
                                                        </BaseAvatar>
                                                      </OrganizationAvatar>
                                                    </Avatar>
                                                  </StyledAvatar>
                                                  <OrgAndUserWrapper>
                                                    <div
                                                      className="css-1mzb71u-OrgAndUserWrapper e1fowdfw4"
                                                    >
                                                      <OrgOrUserName>
                                                        <div
                                                          className="css-df1voe-TextOverflow-OrgOrUserName e1fowdfw5"
                                                        >
                                                          Organization Name
                                                           
                                                          <i
                                                            className="icon-arrow-down"
                                                          />
                                                        </div>
                                                      </OrgOrUserName>
                                                      <UserNameOrEmail>
                                                        <div
                                                          className="css-1b3lkmg-TextOverflow-UserNameOrEmail e1fowdfw6"
                                                        >
                                                          Foo Bar
                                                        </div>
                                                      </UserNameOrEmail>
                                                    </div>
                                                  </OrgAndUserWrapper>
                                                </div>
                                              </div>
                                            </SidebarDropdownActor>
                                          </div>
                                        </SidebarDropdownRoot>
                                      </DropdownMenu>
                                    </SidebarDropdown>
                                  </withApi(SidebarDropdown)>
                                </div>
                              </SidebarSection>
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <FeatureContainer
                                    features={
                                      Array [
                                        "sentry10",
                                      ]
                                    }
                                    renderDisabled={[Function]}
                                  >
                                    <Feature
                                      configFeatures={Array []}
                                      features={
                                        Array [
                                          "sentry10",
                                        ]
                                      }
                                      organization={
                                        Object {
                                          "access": Array [
                                            "org:read",
                                            "org:write",
                                            "org:admin",
                                            "project:read",
                                            "project:write",
                                            "project:admin",
                                            "team:read",
                                            "team:write",
                                            "team:admin",
                                          ],
                                          "features": Array [],
                                          "id": "3",
                                          "name": "Organization Name",
                                          "onboardingTasks": Array [],
                                          "projects": Array [],
                                          "scrapeJavaScript": true,
                                          "slug": "org-slug",
                                          "status": Object {
                                            "id": "pending_deletion",
                                            "name": "pending deletion",
                                          },
                                          "teams": Array [],
                                        }
                                      }
                                      project={
                                        Object {
                                          "hasAccess": true,
                                          "id": "2",
                                          "isBookmarked": false,
                                          "isMember": true,
                                          "name": "Project Name",
                                          "slug": "project-slug",
                                          "teams": Array [],
                                        }
                                      }
                                      renderDisabled={[Function]}
                                      requireAll={true}
                                    >
                                      <withRouter(SidebarItem)
                                        collapsed={false}
                                        hasPanel={false}
                                        icon={
                                          <InlineSvg
                                            src="icon-projects"
                                          />
                                        }
                                        index={true}
                                        label="Projects"
                                        onClick={[Function]}
                                        orientation="left"
                                        to="/org-slug/"
                                      >
                                        <SidebarItem
                                          collapsed={false}
                                          hasPanel={false}
                                          icon={
                                            <InlineSvg
                                              src="icon-projects"
                                            />
                                          }
                                          index={true}
                                          label="Projects"
                                          location={
                                            Object {
                                              "query": Object {},
                                            }
                                          }
                                          onClick={[Function]}
                                          orientation="left"
                                          router={
                                            Object {
                                              "createHref": [MockFunction] {
                                                "calls": Array [
                                                  Array [
                                                    "/org-slug/",
                                                  ],
                                                  Array [
                                                    "/organizations/org-slug/issues/assigned/",
                                                  ],
                                                  Array [
                                                    "/organizations/org-slug/issues/bookmarks/",
                                                  ],
                                                  Array [
                                                    "/organizations/org-slug/issues/history/",
                                                  ],
                                                  Array [
                                                    "/organizations/org-slug/activity/",
                                                  ],
                                                  Array [
                                                    "/organizations/org-slug/stats/",
                                                  ],
                                                  Array [
                                                    "/settings/org-slug/",
                                                  ],
                                                ],
                                                "results": Array [
                                                  Object {
                                                    "isThrow": false,
                                                    "value": undefined,
                                                  },
                                                  Object {
                                                    "isThrow": false,
                                                    "value": undefined,
                                                  },
                                                  Object {
                                                    "isThrow": false,
                                                    "value": undefined,
                                                  },
                                                  Object {
                                                    "isThrow": false,
                                                    "value": undefined,
                                                  },
                                                  Object {
                                                    "isThrow": false,
                                                    "value": undefined,
                                                  },
                                                  Object {
                                                    "isThrow": false,
                                                    "value": undefined,
                                                  },
                                                  Object {
                                                    "isThrow": false,
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "go": [MockFunction],
                                              "goBack": [MockFunction],
                                              "goForward": [MockFunction],
                                              "isActive": [MockFunction],
                                              "listen": [MockFunction] {
                                                "calls": Array [
                                                  Array [
                                                    [Function],
                                                  ],
                                                ],
                                                "results": Array [
                                                  Object {
                                                    "isThrow": false,
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "location": Object {
                                                "query": Object {},
                                              },
                                              "push": [MockFunction],
                                              "replace": [MockFunction],
                                              "setRouteLeaveHook": [MockFunction],
                                            }
                                          }
                                          to="/org-slug/"
                                        >
                                          <Tooltip
                                            disabled={true}
                                            title="Projects"
                                            tooltipOptions={
                                              Object {
                                                "html": true,
                                                "placement": "right",
                                              }
                                            }
                                          >
                                            <StyledSidebarItem
                                              active={false}
                                              onClick={[Function]}
                                              to="/org-slug/"
                                            >
                                              <Component
                                                active={false}
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                onClick={[Function]}
                                                to="/org-slug/"
                                              >
                                                <Link
                                                  className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                  onClick={[Function]}
                                                  to="/org-slug/"
                                                >
                                                  <Link
                                                    className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                    onClick={[Function]}
                                                    onlyActiveOnIndex={false}
                                                    style={Object {}}
                                                    to="/org-slug/"
                                                  >
                                                    <a
                                                      className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                      onClick={[Function]}
                                                      style={Object {}}
                                                    >
                                                      <SidebarItemWrapper>
                                                        <div
                                                          className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                        >
                                                          <SidebarItemIcon>
                                                            <span
                                                              className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                            >
                                                              <InlineSvg
                                                                src="icon-projects"
                                                              >
                                                                <StyledSvg
                                                                  height="1em"
                                                                  viewBox={Object {}}
                                                                  width="1em"
                                                                >
                                                                  <svg
                                                                    className="css-ryh69w-StyledSvg e2idor0"
                                                                    height="1em"
                                                                    viewBox={Object {}}
                                                                    width="1em"
                                                                  >
                                                                    <use
                                                                      href="#test"
                                                                      xlinkHref="#test"
                                                                    />
                                                                  </svg>
                                                                </StyledSvg>
                                                              </InlineSvg>
                                                            </span>
                                                          </SidebarItemIcon>
                                                          <SidebarItemLabel>
                                                            <span
                                                              className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                            >
                                                              <TextOverflow>
                                                                <div
                                                                  className="css-179hf69-TextOverflow e8qi82q0"
                                                                >
                                                                  Projects
                                                                </div>
                                                              </TextOverflow>
                                                            </span>
                                                          </SidebarItemLabel>
                                                        </div>
                                                      </SidebarItemWrapper>
                                                    </a>
                                                  </Link>
                                                </Link>
                                              </Component>
                                            </StyledSidebarItem>
                                          </Tooltip>
                                        </SidebarItem>
                                      </withRouter(SidebarItem)>
                                    </Feature>
                                  </FeatureContainer>
                                  <FeatureContainer
                                    features={
                                      Array [
                                        "events",
                                      ]
                                    }
                                  >
                                    <Feature
                                      configFeatures={Array []}
                                      features={
                                        Array [
                                          "events",
                                        ]
                                      }
                                      organization={
                                        Object {
                                          "access": Array [
                                            "org:read",
                                            "org:write",
                                            "org:admin",
                                            "project:read",
                                            "project:write",
                                            "project:admin",
                                            "team:read",
                                            "team:write",
                                            "team:admin",
                                          ],
                                          "features": Array [],
                                          "id": "3",
                                          "name": "Organization Name",
                                          "onboardingTasks": Array [],
                                          "projects": Array [],
                                          "scrapeJavaScript": true,
                                          "slug": "org-slug",
                                          "status": Object {
                                            "id": "pending_deletion",
                                            "name": "pending deletion",
                                          },
                                          "teams": Array [],
                                        }
                                      }
                                      project={
                                        Object {
                                          "hasAccess": true,
                                          "id": "2",
                                          "isBookmarked": false,
                                          "isMember": true,
                                          "name": "Project Name",
                                          "slug": "project-slug",
                                          "teams": Array [],
                                        }
                                      }
                                      renderDisabled={false}
                                      requireAll={true}
                                    />
                                  </FeatureContainer>
                                  <FeatureContainer
                                    features={
                                      Array [
                                        "sentry10",
                                      ]
                                    }
                                  >
                                    <Feature
                                      configFeatures={Array []}
                                      features={
                                        Array [
                                          "sentry10",
                                        ]
                                      }
                                      organization={
                                        Object {
                                          "access": Array [
                                            "org:read",
                                            "org:write",
                                            "org:admin",
                                            "project:read",
                                            "project:write",
                                            "project:admin",
                                            "team:read",
                                            "team:write",
                                            "team:admin",
                                          ],
                                          "features": Array [],
                                          "id": "3",
                                          "name": "Organization Name",
                                          "onboardingTasks": Array [],
                                          "projects": Array [],
                                          "scrapeJavaScript": true,
                                          "slug": "org-slug",
                                          "status": Object {
                                            "id": "pending_deletion",
                                            "name": "pending deletion",
                                          },
                                          "teams": Array [],
                                        }
                                      }
                                      project={
                                        Object {
                                          "hasAccess": true,
                                          "id": "2",
                                          "isBookmarked": false,
                                          "isMember": true,
                                          "name": "Project Name",
                                          "slug": "project-slug",
                                          "teams": Array [],
                                        }
                                      }
                                      renderDisabled={false}
                                      requireAll={true}
                                    />
                                  </FeatureContainer>
                                  <FeatureContainer
                                    features={
                                      Array [
                                        "discover",
                                      ]
                                    }
                                  >
                                    <Feature
                                      configFeatures={Array []}
                                      features={
                                        Array [
                                          "discover",
                                        ]
                                      }
                                      organization={
                                        Object {
                                          "access": Array [
                                            "org:read",
                                            "org:write",
                                            "org:admin",
                                            "project:read",
                                            "project:write",
                                            "project:admin",
                                            "team:read",
                                            "team:write",
                                            "team:admin",
                                          ],
                                          "features": Array [],
                                          "id": "3",
                                          "name": "Organization Name",
                                          "onboardingTasks": Array [],
                                          "projects": Array [],
                                          "scrapeJavaScript": true,
                                          "slug": "org-slug",
                                          "status": Object {
                                            "id": "pending_deletion",
                                            "name": "pending deletion",
                                          },
                                          "teams": Array [],
                                        }
                                      }
                                      project={
                                        Object {
                                          "hasAccess": true,
                                          "id": "2",
                                          "isBookmarked": false,
                                          "isMember": true,
                                          "name": "Project Name",
                                          "slug": "project-slug",
                                          "teams": Array [],
                                        }
                                      }
                                      renderDisabled={false}
                                      requireAll={true}
                                    />
                                  </FeatureContainer>
                                </div>
                              </SidebarSection>
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <withRouter(SidebarItem)
                                    collapsed={false}
                                    hasPanel={false}
                                    icon={
                                      <InlineSvg
                                        src="icon-user"
                                      />
                                    }
                                    label="Assigned to me"
                                    onClick={[Function]}
                                    orientation="left"
                                    to="/organizations/org-slug/issues/assigned/"
                                  >
                                    <SidebarItem
                                      collapsed={false}
                                      hasPanel={false}
                                      icon={
                                        <InlineSvg
                                          src="icon-user"
                                        />
                                      }
                                      label="Assigned to me"
                                      location={
                                        Object {
                                          "query": Object {},
                                        }
                                      }
                                      onClick={[Function]}
                                      orientation="left"
                                      router={
                                        Object {
                                          "createHref": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                "/org-slug/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/assigned/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/bookmarks/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/history/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/activity/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/stats/",
                                              ],
                                              Array [
                                                "/settings/org-slug/",
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "go": [MockFunction],
                                          "goBack": [MockFunction],
                                          "goForward": [MockFunction],
                                          "isActive": [MockFunction],
                                          "listen": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                [Function],
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "location": Object {
                                            "query": Object {},
                                          },
                                          "push": [MockFunction],
                                          "replace": [MockFunction],
                                          "setRouteLeaveHook": [MockFunction],
                                        }
                                      }
                                      to="/organizations/org-slug/issues/assigned/"
                                    >
                                      <Tooltip
                                        disabled={true}
                                        title="Assigned to me"
                                        tooltipOptions={
                                          Object {
                                            "html": true,
                                            "placement": "right",
                                          }
                                        }
                                      >
                                        <StyledSidebarItem
                                          active={false}
                                          onClick={[Function]}
                                          to="/organizations/org-slug/issues/assigned/"
                                        >
                                          <Component
                                            active={false}
                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                            onClick={[Function]}
                                            to="/organizations/org-slug/issues/assigned/"
                                          >
                                            <Link
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              onClick={[Function]}
                                              to="/organizations/org-slug/issues/assigned/"
                                            >
                                              <Link
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                onClick={[Function]}
                                                onlyActiveOnIndex={false}
                                                style={Object {}}
                                                to="/organizations/org-slug/issues/assigned/"
                                              >
                                                <a
                                                  className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                  onClick={[Function]}
                                                  style={Object {}}
                                                >
                                                  <SidebarItemWrapper>
                                                    <div
                                                      className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                    >
                                                      <SidebarItemIcon>
                                                        <span
                                                          className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                        >
                                                          <InlineSvg
                                                            src="icon-user"
                                                          >
                                                            <StyledSvg
                                                              height="1em"
                                                              viewBox={Object {}}
                                                              width="1em"
                                                            >
                                                              <svg
                                                                className="css-ryh69w-StyledSvg e2idor0"
                                                                height="1em"
                                                                viewBox={Object {}}
                                                                width="1em"
                                                              >
                                                                <use
                                                                  href="#test"
                                                                  xlinkHref="#test"
                                                                />
                                                              </svg>
                                                            </StyledSvg>
                                                          </InlineSvg>
                                                        </span>
                                                      </SidebarItemIcon>
                                                      <SidebarItemLabel>
                                                        <span
                                                          className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                        >
                                                          <TextOverflow>
                                                            <div
                                                              className="css-179hf69-TextOverflow e8qi82q0"
                                                            >
                                                              Assigned to me
                                                            </div>
                                                          </TextOverflow>
                                                        </span>
                                                      </SidebarItemLabel>
                                                    </div>
                                                  </SidebarItemWrapper>
                                                </a>
                                              </Link>
                                            </Link>
                                          </Component>
                                        </StyledSidebarItem>
                                      </Tooltip>
                                    </SidebarItem>
                                  </withRouter(SidebarItem)>
                                  <withRouter(SidebarItem)
                                    collapsed={false}
                                    hasPanel={false}
                                    icon={
                                      <InlineSvg
                                        src="icon-star"
                                      />
                                    }
                                    label="Bookmarked issues"
                                    onClick={[Function]}
                                    orientation="left"
                                    to="/organizations/org-slug/issues/bookmarks/"
                                  >
                                    <SidebarItem
                                      collapsed={false}
                                      hasPanel={false}
                                      icon={
                                        <InlineSvg
                                          src="icon-star"
                                        />
                                      }
                                      label="Bookmarked issues"
                                      location={
                                        Object {
                                          "query": Object {},
                                        }
                                      }
                                      onClick={[Function]}
                                      orientation="left"
                                      router={
                                        Object {
                                          "createHref": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                "/org-slug/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/assigned/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/bookmarks/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/history/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/activity/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/stats/",
                                              ],
                                              Array [
                                                "/settings/org-slug/",
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "go": [MockFunction],
                                          "goBack": [MockFunction],
                                          "goForward": [MockFunction],
                                          "isActive": [MockFunction],
                                          "listen": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                [Function],
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "location": Object {
                                            "query": Object {},
                                          },
                                          "push": [MockFunction],
                                          "replace": [MockFunction],
                                          "setRouteLeaveHook": [MockFunction],
                                        }
                                      }
                                      to="/organizations/org-slug/issues/bookmarks/"
                                    >
                                      <Tooltip
                                        disabled={true}
                                        title="Bookmarked issues"
                                        tooltipOptions={
                                          Object {
                                            "html": true,
                                            "placement": "right",
                                          }
                                        }
                                      >
                                        <StyledSidebarItem
                                          active={false}
                                          onClick={[Function]}
                                          to="/organizations/org-slug/issues/bookmarks/"
                                        >
                                          <Component
                                            active={false}
                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                            onClick={[Function]}
                                            to="/organizations/org-slug/issues/bookmarks/"
                                          >
                                            <Link
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              onClick={[Function]}
                                              to="/organizations/org-slug/issues/bookmarks/"
                                            >
                                              <Link
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                onClick={[Function]}
                                                onlyActiveOnIndex={false}
                                                style={Object {}}
                                                to="/organizations/org-slug/issues/bookmarks/"
                                              >
                                                <a
                                                  className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                  onClick={[Function]}
                                                  style={Object {}}
                                                >
                                                  <SidebarItemWrapper>
                                                    <div
                                                      className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                    >
                                                      <SidebarItemIcon>
                                                        <span
                                                          className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                        >
                                                          <InlineSvg
                                                            src="icon-star"
                                                          >
                                                            <StyledSvg
                                                              height="1em"
                                                              viewBox={Object {}}
                                                              width="1em"
                                                            >
                                                              <svg
                                                                className="css-ryh69w-StyledSvg e2idor0"
                                                                height="1em"
                                                                viewBox={Object {}}
                                                                width="1em"
                                                              >
                                                                <use
                                                                  href="#test"
                                                                  xlinkHref="#test"
                                                                />
                                                              </svg>
                                                            </StyledSvg>
                                                          </InlineSvg>
                                                        </span>
                                                      </SidebarItemIcon>
                                                      <SidebarItemLabel>
                                                        <span
                                                          className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                        >
                                                          <TextOverflow>
                                                            <div
                                                              className="css-179hf69-TextOverflow e8qi82q0"
                                                            >
                                                              Bookmarked issues
                                                            </div>
                                                          </TextOverflow>
                                                        </span>
                                                      </SidebarItemLabel>
                                                    </div>
                                                  </SidebarItemWrapper>
                                                </a>
                                              </Link>
                                            </Link>
                                          </Component>
                                        </StyledSidebarItem>
                                      </Tooltip>
                                    </SidebarItem>
                                  </withRouter(SidebarItem)>
                                  <withRouter(SidebarItem)
                                    collapsed={false}
                                    hasPanel={false}
                                    icon={
                                      <InlineSvg
                                        src="icon-history"
                                      />
                                    }
                                    label="Recently viewed"
                                    onClick={[Function]}
                                    orientation="left"
                                    to="/organizations/org-slug/issues/history/"
                                  >
                                    <SidebarItem
                                      collapsed={false}
                                      hasPanel={false}
                                      icon={
                                        <InlineSvg
                                          src="icon-history"
                                        />
                                      }
                                      label="Recently viewed"
                                      location={
                                        Object {
                                          "query": Object {},
                                        }
                                      }
                                      onClick={[Function]}
                                      orientation="left"
                                      router={
                                        Object {
                                          "createHref": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                "/org-slug/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/assigned/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/bookmarks/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/history/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/activity/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/stats/",
                                              ],
                                              Array [
                                                "/settings/org-slug/",
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "go": [MockFunction],
                                          "goBack": [MockFunction],
                                          "goForward": [MockFunction],
                                          "isActive": [MockFunction],
                                          "listen": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                [Function],
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "location": Object {
                                            "query": Object {},
                                          },
                                          "push": [MockFunction],
                                          "replace": [MockFunction],
                                          "setRouteLeaveHook": [MockFunction],
                                        }
                                      }
                                      to="/organizations/org-slug/issues/history/"
                                    >
                                      <Tooltip
                                        disabled={true}
                                        title="Recently viewed"
                                        tooltipOptions={
                                          Object {
                                            "html": true,
                                            "placement": "right",
                                          }
                                        }
                                      >
                                        <StyledSidebarItem
                                          active={false}
                                          onClick={[Function]}
                                          to="/organizations/org-slug/issues/history/"
                                        >
                                          <Component
                                            active={false}
                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                            onClick={[Function]}
                                            to="/organizations/org-slug/issues/history/"
                                          >
                                            <Link
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              onClick={[Function]}
                                              to="/organizations/org-slug/issues/history/"
                                            >
                                              <Link
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                onClick={[Function]}
                                                onlyActiveOnIndex={false}
                                                style={Object {}}
                                                to="/organizations/org-slug/issues/history/"
                                              >
                                                <a
                                                  className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                  onClick={[Function]}
                                                  style={Object {}}
                                                >
                                                  <SidebarItemWrapper>
                                                    <div
                                                      className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                    >
                                                      <SidebarItemIcon>
                                                        <span
                                                          className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                        >
                                                          <InlineSvg
                                                            src="icon-history"
                                                          >
                                                            <StyledSvg
                                                              height="1em"
                                                              viewBox={Object {}}
                                                              width="1em"
                                                            >
                                                              <svg
                                                                className="css-ryh69w-StyledSvg e2idor0"
                                                                height="1em"
                                                                viewBox={Object {}}
                                                                width="1em"
                                                              >
                                                                <use
                                                                  href="#test"
                                                                  xlinkHref="#test"
                                                                />
                                                              </svg>
                                                            </StyledSvg>
                                                          </InlineSvg>
                                                        </span>
                                                      </SidebarItemIcon>
                                                      <SidebarItemLabel>
                                                        <span
                                                          className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                        >
                                                          <TextOverflow>
                                                            <div
                                                              className="css-179hf69-TextOverflow e8qi82q0"
                                                            >
                                                              Recently viewed
                                                            </div>
                                                          </TextOverflow>
                                                        </span>
                                                      </SidebarItemLabel>
                                                    </div>
                                                  </SidebarItemWrapper>
                                                </a>
                                              </Link>
                                            </Link>
                                          </Component>
                                        </StyledSidebarItem>
                                      </Tooltip>
                                    </SidebarItem>
                                  </withRouter(SidebarItem)>
                                </div>
                              </SidebarSection>
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <withRouter(SidebarItem)
                                    collapsed={false}
                                    hasPanel={false}
                                    icon={
                                      <InlineSvg
                                        src="icon-activity"
                                      />
                                    }
                                    label="Activity"
                                    onClick={[Function]}
                                    orientation="left"
                                    to="/organizations/org-slug/activity/"
                                  >
                                    <SidebarItem
                                      collapsed={false}
                                      hasPanel={false}
                                      icon={
                                        <InlineSvg
                                          src="icon-activity"
                                        />
                                      }
                                      label="Activity"
                                      location={
                                        Object {
                                          "query": Object {},
                                        }
                                      }
                                      onClick={[Function]}
                                      orientation="left"
                                      router={
                                        Object {
                                          "createHref": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                "/org-slug/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/assigned/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/bookmarks/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/history/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/activity/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/stats/",
                                              ],
                                              Array [
                                                "/settings/org-slug/",
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "go": [MockFunction],
                                          "goBack": [MockFunction],
                                          "goForward": [MockFunction],
                                          "isActive": [MockFunction],
                                          "listen": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                [Function],
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "location": Object {
                                            "query": Object {},
                                          },
                                          "push": [MockFunction],
                                          "replace": [MockFunction],
                                          "setRouteLeaveHook": [MockFunction],
                                        }
                                      }
                                      to="/organizations/org-slug/activity/"
                                    >
                                      <Tooltip
                                        disabled={true}
                                        title="Activity"
                                        tooltipOptions={
                                          Object {
                                            "html": true,
                                            "placement": "right",
                                          }
                                        }
                                      >
                                        <StyledSidebarItem
                                          active={false}
                                          onClick={[Function]}
                                          to="/organizations/org-slug/activity/"
                                        >
                                          <Component
                                            active={false}
                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                            onClick={[Function]}
                                            to="/organizations/org-slug/activity/"
                                          >
                                            <Link
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              onClick={[Function]}
                                              to="/organizations/org-slug/activity/"
                                            >
                                              <Link
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                onClick={[Function]}
                                                onlyActiveOnIndex={false}
                                                style={Object {}}
                                                to="/organizations/org-slug/activity/"
                                              >
                                                <a
                                                  className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                  onClick={[Function]}
                                                  style={Object {}}
                                                >
                                                  <SidebarItemWrapper>
                                                    <div
                                                      className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                    >
                                                      <SidebarItemIcon>
                                                        <span
                                                          className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                        >
                                                          <InlineSvg
                                                            src="icon-activity"
                                                          >
                                                            <StyledSvg
                                                              height="1em"
                                                              viewBox={Object {}}
                                                              width="1em"
                                                            >
                                                              <svg
                                                                className="css-ryh69w-StyledSvg e2idor0"
                                                                height="1em"
                                                                viewBox={Object {}}
                                                                width="1em"
                                                              >
                                                                <use
                                                                  href="#test"
                                                                  xlinkHref="#test"
                                                                />
                                                              </svg>
                                                            </StyledSvg>
                                                          </InlineSvg>
                                                        </span>
                                                      </SidebarItemIcon>
                                                      <SidebarItemLabel>
                                                        <span
                                                          className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                        >
                                                          <TextOverflow>
                                                            <div
                                                              className="css-179hf69-TextOverflow e8qi82q0"
                                                            >
                                                              Activity
                                                            </div>
                                                          </TextOverflow>
                                                        </span>
                                                      </SidebarItemLabel>
                                                    </div>
                                                  </SidebarItemWrapper>
                                                </a>
                                              </Link>
                                            </Link>
                                          </Component>
                                        </StyledSidebarItem>
                                      </Tooltip>
                                    </SidebarItem>
                                  </withRouter(SidebarItem)>
                                  <withRouter(SidebarItem)
                                    collapsed={false}
                                    hasPanel={false}
                                    icon={
                                      <InlineSvg
                                        src="icon-stats"
                                      />
                                    }
                                    label="Stats"
                                    onClick={[Function]}
                                    orientation="left"
                                    to="/organizations/org-slug/stats/"
                                  >
                                    <SidebarItem
                                      collapsed={false}
                                      hasPanel={false}
                                      icon={
                                        <InlineSvg
                                          src="icon-stats"
                                        />
                                      }
                                      label="Stats"
                                      location={
                                        Object {
                                          "query": Object {},
                                        }
                                      }
                                      onClick={[Function]}
                                      orientation="left"
                                      router={
                                        Object {
                                          "createHref": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                "/org-slug/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/assigned/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/bookmarks/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/history/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/activity/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/stats/",
                                              ],
                                              Array [
                                                "/settings/org-slug/",
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "go": [MockFunction],
                                          "goBack": [MockFunction],
                                          "goForward": [MockFunction],
                                          "isActive": [MockFunction],
                                          "listen": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                [Function],
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "location": Object {
                                            "query": Object {},
                                          },
                                          "push": [MockFunction],
                                          "replace": [MockFunction],
                                          "setRouteLeaveHook": [MockFunction],
                                        }
                                      }
                                      to="/organizations/org-slug/stats/"
                                    >
                                      <Tooltip
                                        disabled={true}
                                        title="Stats"
                                        tooltipOptions={
                                          Object {
                                            "html": true,
                                            "placement": "right",
                                          }
                                        }
                                      >
                                        <StyledSidebarItem
                                          active={false}
                                          onClick={[Function]}
                                          to="/organizations/org-slug/stats/"
                                        >
                                          <Component
                                            active={false}
                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                            onClick={[Function]}
                                            to="/organizations/org-slug/stats/"
                                          >
                                            <Link
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              onClick={[Function]}
                                              to="/organizations/org-slug/stats/"
                                            >
                                              <Link
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                onClick={[Function]}
                                                onlyActiveOnIndex={false}
                                                style={Object {}}
                                                to="/organizations/org-slug/stats/"
                                              >
                                                <a
                                                  className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                  onClick={[Function]}
                                                  style={Object {}}
                                                >
                                                  <SidebarItemWrapper>
                                                    <div
                                                      className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                    >
                                                      <SidebarItemIcon>
                                                        <span
                                                          className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                        >
                                                          <InlineSvg
                                                            src="icon-stats"
                                                          >
                                                            <StyledSvg
                                                              height="1em"
                                                              viewBox={Object {}}
                                                              width="1em"
                                                            >
                                                              <svg
                                                                className="css-ryh69w-StyledSvg e2idor0"
                                                                height="1em"
                                                                viewBox={Object {}}
                                                                width="1em"
                                                              >
                                                                <use
                                                                  href="#test"
                                                                  xlinkHref="#test"
                                                                />
                                                              </svg>
                                                            </StyledSvg>
                                                          </InlineSvg>
                                                        </span>
                                                      </SidebarItemIcon>
                                                      <SidebarItemLabel>
                                                        <span
                                                          className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                        >
                                                          <TextOverflow>
                                                            <div
                                                              className="css-179hf69-TextOverflow e8qi82q0"
                                                            >
                                                              Stats
                                                            </div>
                                                          </TextOverflow>
                                                        </span>
                                                      </SidebarItemLabel>
                                                    </div>
                                                  </SidebarItemWrapper>
                                                </a>
                                              </Link>
                                            </Link>
                                          </Component>
                                        </StyledSidebarItem>
                                      </Tooltip>
                                    </SidebarItem>
                                  </withRouter(SidebarItem)>
                                </div>
                              </SidebarSection>
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <withRouter(SidebarItem)
                                    collapsed={false}
                                    hasPanel={false}
                                    icon={
                                      <InlineSvg
                                        src="icon-settings"
                                      />
                                    }
                                    label="Settings"
                                    onClick={[Function]}
                                    orientation="left"
                                    to="/settings/org-slug/"
                                  >
                                    <SidebarItem
                                      collapsed={false}
                                      hasPanel={false}
                                      icon={
                                        <InlineSvg
                                          src="icon-settings"
                                        />
                                      }
                                      label="Settings"
                                      location={
                                        Object {
                                          "query": Object {},
                                        }
                                      }
                                      onClick={[Function]}
                                      orientation="left"
                                      router={
                                        Object {
                                          "createHref": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                "/org-slug/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/assigned/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/bookmarks/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/history/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/activity/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/stats/",
                                              ],
                                              Array [
                                                "/settings/org-slug/",
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "go": [MockFunction],
                                          "goBack": [MockFunction],
                                          "goForward": [MockFunction],
                                          "isActive": [MockFunction],
                                          "listen": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                [Function],
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "location": Object {
                                            "query": Object {},
                                          },
                                          "push": [MockFunction],
                                          "replace": [MockFunction],
                                          "setRouteLeaveHook": [MockFunction],
                                        }
                                      }
                                      to="/settings/org-slug/"
                                    >
                                      <Tooltip
                                        disabled={true}
                                        title="Settings"
                                        tooltipOptions={
                                          Object {
                                            "html": true,
                                            "placement": "right",
                                          }
                                        }
                                      >
                                        <StyledSidebarItem
                                          active={false}
                                          onClick={[Function]}
                                          to="/settings/org-slug/"
                                        >
                                          <Component
                                            active={false}
                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                            onClick={[Function]}
                                            to="/settings/org-slug/"
                                          >
                                            <Link
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              onClick={[Function]}
                                              to="/settings/org-slug/"
                                            >
                                              <Link
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                onClick={[Function]}
                                                onlyActiveOnIndex={false}
                                                style={Object {}}
                                                to="/settings/org-slug/"
                                              >
                                                <a
                                                  className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                  onClick={[Function]}
                                                  style={Object {}}
                                                >
                                                  <SidebarItemWrapper>
                                                    <div
                                                      className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                    >
                                                      <SidebarItemIcon>
                                                        <span
                                                          className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                        >
                                                          <InlineSvg
                                                            src="icon-settings"
                                                          >
                                                            <StyledSvg
                                                              height="1em"
                                                              viewBox={Object {}}
                                                              width="1em"
                                                            >
                                                              <svg
                                                                className="css-ryh69w-StyledSvg e2idor0"
                                                                height="1em"
                                                                viewBox={Object {}}
                                                                width="1em"
                                                              >
                                                                <use
                                                                  href="#test"
                                                                  xlinkHref="#test"
                                                                />
                                                              </svg>
                                                            </StyledSvg>
                                                          </InlineSvg>
                                                        </span>
                                                      </SidebarItemIcon>
                                                      <SidebarItemLabel>
                                                        <span
                                                          className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                        >
                                                          <TextOverflow>
                                                            <div
                                                              className="css-179hf69-TextOverflow e8qi82q0"
                                                            >
                                                              Settings
                                                            </div>
                                                          </TextOverflow>
                                                        </span>
                                                      </SidebarItemLabel>
                                                    </div>
                                                  </SidebarItemWrapper>
                                                </a>
                                              </Link>
                                            </Link>
                                          </Component>
                                        </StyledSidebarItem>
                                      </Tooltip>
                                    </SidebarItem>
                                  </withRouter(SidebarItem)>
                                </div>
                              </SidebarSection>
                            </div>
                          </SidebarSectionGroup>
                          <SidebarSectionGroup>
                            <div
                              className="css-1uxlgm0-SidebarSectionGroup-responsiveFlex e1sgxx351"
                            >
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <SidebarHelp
                                    collapsed={false}
                                    hidePanel={[Function]}
                                    organization={
                                      Object {
                                        "access": Array [
                                          "org:read",
                                          "org:write",
                                          "org:admin",
                                          "project:read",
                                          "project:write",
                                          "project:admin",
                                          "team:read",
                                          "team:write",
                                          "team:admin",
                                        ],
                                        "features": Array [],
                                        "id": "3",
                                        "name": "Organization Name",
                                        "onboardingTasks": Array [],
                                        "projects": Array [],
                                        "scrapeJavaScript": true,
                                        "slug": "org-slug",
                                        "status": Object {
                                          "id": "pending_deletion",
                                          "name": "pending deletion",
                                        },
                                        "teams": Array [],
                                      }
                                    }
                                    orientation="left"
                                  >
                                    <DropdownMenu
                                      closeOnEscape={true}
                                      keepMenuOpen={false}
                                    >
                                      <HelpRoot>
                                        <div
                                          className="css-1dvxhjs-HelpRoot e1q2bb9t0"
                                        >
                                          <HelpActor
                                            innerRef={[Function]}
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            style={
                                              Object {
                                                "outline": "none",
                                              }
                                            }
                                            tabIndex={-1}
                                          >
                                            <div
                                              className="css-d4wreg-HelpActor e1q2bb9t1"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              style={
                                                Object {
                                                  "outline": "none",
                                                }
                                              }
                                              tabIndex={-1}
                                            >
                                              <withRouter(SidebarItem)
                                                collapsed={false}
                                                hasPanel={false}
                                                icon={
                                                  <InlineSvg
                                                    src="icon-circle-question"
                                                  />
                                                }
                                                label="Help"
                                                orientation="left"
                                              >
                                                <SidebarItem
                                                  collapsed={false}
                                                  hasPanel={false}
                                                  icon={
                                                    <InlineSvg
                                                      src="icon-circle-question"
                                                    />
                                                  }
                                                  label="Help"
                                                  location={
                                                    Object {
                                                      "query": Object {},
                                                    }
                                                  }
                                                  orientation="left"
                                                  router={
                                                    Object {
                                                      "createHref": [MockFunction] {
                                                        "calls": Array [
                                                          Array [
                                                            "/org-slug/",
                                                          ],
                                                          Array [
                                                            "/organizations/org-slug/issues/assigned/",
                                                          ],
                                                          Array [
                                                            "/organizations/org-slug/issues/bookmarks/",
                                                          ],
                                                          Array [
                                                            "/organizations/org-slug/issues/history/",
                                                          ],
                                                          Array [
                                                            "/organizations/org-slug/activity/",
                                                          ],
                                                          Array [
                                                            "/organizations/org-slug/stats/",
                                                          ],
                                                          Array [
                                                            "/settings/org-slug/",
                                                          ],
                                                        ],
                                                        "results": Array [
                                                          Object {
                                                            "isThrow": false,
                                                            "value": undefined,
                                                          },
                                                          Object {
                                                            "isThrow": false,
                                                            "value": undefined,
                                                          },
                                                          Object {
                                                            "isThrow": false,
                                                            "value": undefined,
                                                          },
                                                          Object {
                                                            "isThrow": false,
                                                            "value": undefined,
                                                          },
                                                          Object {
                                                            "isThrow": false,
                                                            "value": undefined,
                                                          },
                                                          Object {
                                                            "isThrow": false,
                                                            "value": undefined,
                                                          },
                                                          Object {
                                                            "isThrow": false,
                                                            "value": undefined,
                                                          },
                                                        ],
                                                      },
                                                      "go": [MockFunction],
                                                      "goBack": [MockFunction],
                                                      "goForward": [MockFunction],
                                                      "isActive": [MockFunction],
                                                      "listen": [MockFunction] {
                                                        "calls": Array [
                                                          Array [
                                                            [Function],
                                                          ],
                                                        ],
                                                        "results": Array [
                                                          Object {
                                                            "isThrow": false,
                                                            "value": undefined,
                                                          },
                                                        ],
                                                      },
                                                      "location": Object {
                                                        "query": Object {},
                                                      },
                                                      "push": [MockFunction],
                                                      "replace": [MockFunction],
                                                      "setRouteLeaveHook": [MockFunction],
                                                    }
                                                  }
                                                >
                                                  <Tooltip
                                                    disabled={true}
                                                    title="Help"
                                                    tooltipOptions={
                                                      Object {
                                                        "html": true,
                                                        "placement": "right",
                                                      }
                                                    }
                                                  >
                                                    <StyledSidebarItem
                                                      active={false}
                                                      onClick={[Function]}
                                                    >
                                                      <Component
                                                        active={false}
                                                        className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                        onClick={[Function]}
                                                      >
                                                        <Link
                                                          className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                          onClick={[Function]}
                                                        >
                                                          <a
                                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                            onClick={[Function]}
                                                          >
                                                            <SidebarItemWrapper>
                                                              <div
                                                                className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                              >
                                                                <SidebarItemIcon>
                                                                  <span
                                                                    className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                                  >
                                                                    <InlineSvg
                                                                      src="icon-circle-question"
                                                                    >
                                                                      <StyledSvg
                                                                        height="1em"
                                                                        viewBox={Object {}}
                                                                        width="1em"
                                                                      >
                                                                        <svg
                                                                          className="css-ryh69w-StyledSvg e2idor0"
                                                                          height="1em"
                                                                          viewBox={Object {}}
                                                                          width="1em"
                                                                        >
                                                                          <use
                                                                            href="#test"
                                                                            xlinkHref="#test"
                                                                          />
                                                                        </svg>
                                                                      </StyledSvg>
                                                                    </InlineSvg>
                                                                  </span>
                                                                </SidebarItemIcon>
                                                                <SidebarItemLabel>
                                                                  <span
                                                                    className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                                  >
                                                                    <TextOverflow>
                                                                      <div
                                                                        className="css-179hf69-TextOverflow e8qi82q0"
                                                                      >
                                                                        Help
                                                                      </div>
                                                                    </TextOverflow>
                                                                  </span>
                                                                </SidebarItemLabel>
                                                              </div>
                                                            </SidebarItemWrapper>
                                                          </a>
                                                        </Link>
                                                      </Component>
                                                    </StyledSidebarItem>
                                                  </Tooltip>
                                                </SidebarItem>
                                              </withRouter(SidebarItem)>
                                            </div>
                                          </HelpActor>
                                        </div>
                                      </HelpRoot>
                                    </DropdownMenu>
                                  </SidebarHelp>
                                  <Broadcasts
                                    collapsed={false}
                                    currentPanel=""
                                    hidePanel={[Function]}
                                    onShowPanel={[Function]}
                                    orientation="left"
                                    showPanel={false}
                                  >
                                    <withRouter(SidebarItem)
                                      active={false}
                                      badge={0}
                                      collapsed={false}
                                      data-test-id="sidebar-broadcasts"
                                      icon={
                                        <InlineSvg
                                          size="22px"
                                          src="icon-broadcast"
                                        />
                                      }
                                      label="What's new"
                                      onClick={[Function]}
                                      orientation="left"
                                    >
                                      <SidebarItem
                                        active={false}
                                        badge={0}
                                        collapsed={false}
                                        data-test-id="sidebar-broadcasts"
                                        icon={
                                          <InlineSvg
                                            size="22px"
                                            src="icon-broadcast"
                                          />
                                        }
                                        label="What's new"
                                        location={
                                          Object {
                                            "query": Object {},
                                          }
                                        }
                                        onClick={[Function]}
                                        orientation="left"
                                        router={
                                          Object {
                                            "createHref": [MockFunction] {
                                              "calls": Array [
                                                Array [
                                                  "/org-slug/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/issues/assigned/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/issues/bookmarks/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/issues/history/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/activity/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/stats/",
                                                ],
                                                Array [
                                                  "/settings/org-slug/",
                                                ],
                                              ],
                                              "results": Array [
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "go": [MockFunction],
                                            "goBack": [MockFunction],
                                            "goForward": [MockFunction],
                                            "isActive": [MockFunction],
                                            "listen": [MockFunction] {
                                              "calls": Array [
                                                Array [
                                                  [Function],
                                                ],
                                              ],
                                              "results": Array [
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "location": Object {
                                              "query": Object {},
                                            },
                                            "push": [MockFunction],
                                            "replace": [MockFunction],
                                            "setRouteLeaveHook": [MockFunction],
                                          }
                                        }
                                      >
                                        <Tooltip
                                          disabled={true}
                                          title="What's new"
                                          tooltipOptions={
                                            Object {
                                              "html": true,
                                              "placement": "right",
                                            }
                                          }
                                        >
                                          <StyledSidebarItem
                                            active={false}
                                            data-test-id="sidebar-broadcasts"
                                            onClick={[Function]}
                                          >
                                            <Component
                                              active={false}
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              data-test-id="sidebar-broadcasts"
                                              onClick={[Function]}
                                            >
                                              <Link
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                data-test-id="sidebar-broadcasts"
                                                onClick={[Function]}
                                              >
                                                <a
                                                  className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                  data-test-id="sidebar-broadcasts"
                                                  onClick={[Function]}
                                                >
                                                  <SidebarItemWrapper>
                                                    <div
                                                      className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                    >
                                                      <SidebarItemIcon>
                                                        <span
                                                          className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                        >
                                                          <InlineSvg
                                                            size="22px"
                                                            src="icon-broadcast"
                                                          >
                                                            <StyledSvg
                                                              height="22px"
                                                              viewBox={Object {}}
                                                              width="22px"
                                                            >
                                                              <svg
                                                                className="css-ryh69w-StyledSvg e2idor0"
                                                                height="22px"
                                                                viewBox={Object {}}
                                                                width="22px"
                                                              >
                                                                <use
                                                                  href="#test"
                                                                  xlinkHref="#test"
                                                                />
                                                              </svg>
                                                            </StyledSvg>
                                                          </InlineSvg>
                                                        </span>
                                                      </SidebarItemIcon>
                                                      <SidebarItemLabel>
                                                        <span
                                                          className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                        >
                                                          <TextOverflow>
                                                            <div
                                                              className="css-179hf69-TextOverflow e8qi82q0"
                                                            >
                                                              What's new
                                                            </div>
                                                          </TextOverflow>
                                                        </span>
                                                      </SidebarItemLabel>
                                                    </div>
                                                  </SidebarItemWrapper>
                                                </a>
                                              </Link>
                                            </Component>
                                          </StyledSidebarItem>
                                        </Tooltip>
                                      </SidebarItem>
                                    </withRouter(SidebarItem)>
                                  </Broadcasts>
                                  <Incidents
                                    collapsed={false}
                                    currentPanel=""
                                    hidePanel={[Function]}
                                    onShowPanel={[Function]}
                                    orientation="left"
                                    showPanel={false}
                                  />
                                </div>
                              </SidebarSection>
                              <SidebarSection
                                noMargin={true}
                              >
                                <div
                                  className="css-1j3ay2q-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <OnboardingStatus
                                    collapsed={false}
                                    currentPanel=""
                                    hidePanel={[Function]}
                                    onShowPanel={[Function]}
                                    org={
                                      Object {
                                        "access": Array [
                                          "org:read",
                                          "org:write",
                                          "org:admin",
                                          "project:read",
                                          "project:write",
                                          "project:admin",
                                          "team:read",
                                          "team:write",
                                          "team:admin",
                                        ],
                                        "features": Array [],
                                        "id": "3",
                                        "name": "Organization Name",
                                        "onboardingTasks": Array [],
                                        "projects": Array [],
                                        "scrapeJavaScript": true,
                                        "slug": "org-slug",
                                        "status": Object {
                                          "id": "pending_deletion",
                                          "name": "pending deletion",
                                        },
                                        "teams": Array [],
                                      }
                                    }
                                    showPanel={false}
                                  />
                                </div>
                              </SidebarSection>
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <SidebarCollapseItem
                                    collapsed={false}
                                    data-test-id="sidebar-collapse"
                                    hasPanel={false}
                                    icon={
                                      <StyledInlineSvg
                                        collapsed={false}
                                        src="icon-collapse"
                                      />
                                    }
                                    label="Collapse"
                                    onClick={[Function]}
                                    orientation="left"
                                  >
                                    <withRouter(SidebarItem)
                                      className="css-1s7mi0e-SidebarCollapseItem e1sgxx354"
                                      collapsed={false}
                                      data-test-id="sidebar-collapse"
                                      hasPanel={false}
                                      icon={
                                        <StyledInlineSvg
                                          collapsed={false}
                                          src="icon-collapse"
                                        />
                                      }
                                      label="Collapse"
                                      onClick={[Function]}
                                      orientation="left"
                                    >
                                      <SidebarItem
                                        className="css-1s7mi0e-SidebarCollapseItem e1sgxx354"
                                        collapsed={false}
                                        data-test-id="sidebar-collapse"
                                        hasPanel={false}
                                        icon={
                                          <StyledInlineSvg
                                            collapsed={false}
                                            src="icon-collapse"
                                          />
                                        }
                                        label="Collapse"
                                        location={
                                          Object {
                                            "query": Object {},
                                          }
                                        }
                                        onClick={[Function]}
                                        orientation="left"
                                        router={
                                          Object {
                                            "createHref": [MockFunction] {
                                              "calls": Array [
                                                Array [
                                                  "/org-slug/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/issues/assigned/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/issues/bookmarks/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/issues/history/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/activity/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/stats/",
                                                ],
                                                Array [
                                                  "/settings/org-slug/",
                                                ],
                                              ],
                                              "results": Array [
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "go": [MockFunction],
                                            "goBack": [MockFunction],
                                            "goForward": [MockFunction],
                                            "isActive": [MockFunction],
                                            "listen": [MockFunction] {
                                              "calls": Array [
                                                Array [
                                                  [Function],
                                                ],
                                              ],
                                              "results": Array [
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "location": Object {
                                              "query": Object {},
                                            },
                                            "push": [MockFunction],
                                            "replace": [MockFunction],
                                            "setRouteLeaveHook": [MockFunction],
                                          }
                                        }
                                      >
                                        <Tooltip
                                          disabled={true}
                                          title="Collapse"
                                          tooltipOptions={
                                            Object {
                                              "html": true,
                                              "placement": "right",
                                            }
                                          }
                                        >
                                          <StyledSidebarItem
                                            active={false}
                                            className="css-1s7mi0e-SidebarCollapseItem e1sgxx354"
                                            data-test-id="sidebar-collapse"
                                            onClick={[Function]}
                                          >
                                            <Component
                                              active={false}
                                              className="e1sgxx354 css-ekfpov-StyledSidebarItem-SidebarCollapseItem e1qdnaq70"
                                              data-test-id="sidebar-collapse"
                                              onClick={[Function]}
                                            >
                                              <Link
                                                className="e1sgxx354 css-ekfpov-StyledSidebarItem-SidebarCollapseItem e1qdnaq70"
                                                data-test-id="sidebar-collapse"
                                                onClick={[Function]}
                                              >
                                                <a
                                                  className="e1sgxx354 css-ekfpov-StyledSidebarItem-SidebarCollapseItem e1qdnaq70"
                                                  data-test-id="sidebar-collapse"
                                                  onClick={[Function]}
                                                >
                                                  <SidebarItemWrapper>
                                                    <div
                                                      className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                    >
                                                      <SidebarItemIcon>
                                                        <span
                                                          className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                        >
                                                          <StyledInlineSvg
                                                            collapsed={false}
                                                            src="icon-collapse"
                                                          >
                                                            <Component
                                                              className="css-19qca8n-StyledInlineSvg e1sgxx353"
                                                              collapsed={false}
                                                              src="icon-collapse"
                                                            >
                                                              <InlineSvg
                                                                className="e1sgxx353 css-1ktuuwq-StyledInlineSvg-ExpandedIcon"
                                                                src="icon-collapse"
                                                              >
                                                                <StyledSvg
                                                                  className="e1sgxx353 css-1ktuuwq-StyledInlineSvg-ExpandedIcon"
                                                                  height="1em"
                                                                  viewBox={Object {}}
                                                                  width="1em"
                                                                >
                                                                  <svg
                                                                    className="e1sgxx353 css-coblwz-StyledSvg-StyledInlineSvg-ExpandedIcon e2idor0"
                                                                    height="1em"
                                                                    viewBox={Object {}}
                                                                    width="1em"
                                                                  >
                                                                    <use
                                                                      href="#test"
                                                                      xlinkHref="#test"
                                                                    />
                                                                  </svg>
                                                                </StyledSvg>
                                                              </InlineSvg>
                                                            </Component>
                                                          </StyledInlineSvg>
                                                        </span>
                                                      </SidebarItemIcon>
                                                      <SidebarItemLabel>
                                                        <span
                                                          className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                        >
                                                          <TextOverflow>
                                                            <div
                                                              className="css-179hf69-TextOverflow e8qi82q0"
                                                            >
                                                              Collapse
                                                            </div>
                                                          </TextOverflow>
                                                        </span>
                                                      </SidebarItemLabel>
                                                    </div>
                                                  </SidebarItemWrapper>
                                                </a>
                                              </Link>
                                            </Component>
                                          </StyledSidebarItem>
                                        </Tooltip>
                                      </SidebarItem>
                                    </withRouter(SidebarItem)>
                                  </SidebarCollapseItem>
                                </div>
                              </SidebarSection>
                            </div>
                          </SidebarSectionGroup>
                        </div>
                      </StyledSidebar>
                    </Sidebar>
                  </ThemeProvider>
                </SidebarContainer>
              </withRouter(SidebarContainer)>
            </withLatestContext(withRouter(SidebarContainer))>
          </withOrganizations(withLatestContext(withRouter(SidebarContainer)))>
          <OrganizationDetailsBody>
            <DeletionPending
              organization={
                Object {
                  "access": Array [
                    "org:read",
                    "org:write",
                    "org:admin",
                    "project:read",
                    "project:write",
                    "project:admin",
                    "team:read",
                    "team:write",
                    "team:admin",
                  ],
                  "features": Array [],
                  "id": "3",
                  "name": "Organization Name",
                  "onboardingTasks": Array [],
                  "projects": Array [],
                  "scrapeJavaScript": true,
                  "slug": "org-slug",
                  "status": Object {
                    "id": "pending_deletion",
                    "name": "pending deletion",
                  },
                  "teams": Array [],
                }
              }
            >
              <NarrowLayout>
                <div
                  className="app"
                >
                  <div
                    className="pattern-bg"
                  />
                  <div
                    className="container"
                  >
                    <div
                      className="box box-modal"
                    >
                      <div
                        className="box-header"
                      >
                        <a
                          href="/"
                        >
                          <span
                            className="icon-sentry-logo"
                          />
                        </a>
                      </div>
                      <div
                        className="box-content with-padding"
                      >
                        <h3>
                          Deletion Scheduled
                        </h3>
                        <p>
                          <span
                            key="4"
                          >
                            <span
                              key="0"
                            >
                              The 
                            </span>
                            <strong
                              key="1"
                            >
                              org-slug
                            </strong>
                            <span
                              key="2"
                            >
                               organization is currently scheduled for deletion.
                            </span>
                          </span>
                        </p>
                        <div>
                          <p>
                            Would you like to cancel this process and restore the organization back to the original state?
                          </p>
                          <p>
                            <Button
                              disabled={false}
                              onClick={[Function]}
                              priority="primary"
                            >
                              <StyledButton
                                aria-label="Restore Organization"
                                disabled={false}
                                onClick={[Function]}
                                priority="primary"
                                role="button"
                              >
                                <Component
                                  aria-label="Restore Organization"
                                  className="css-1msljz8-StyledButton-getColors eqrebog0"
                                  disabled={false}
                                  onClick={[Function]}
                                  priority="primary"
                                  role="button"
                                >
                                  <button
                                    aria-label="Restore Organization"
                                    className="css-1msljz8-StyledButton-getColors eqrebog0"
                                    disabled={false}
                                    onClick={[Function]}
                                    priority="primary"
                                    role="button"
                                  >
                                    <ButtonLabel
                                      priority="primary"
                                    >
                                      <Component
                                        className="css-ga4b18-ButtonLabel eqrebog1"
                                        priority="primary"
                                      >
                                        <span
                                          className="css-ga4b18-ButtonLabel eqrebog1"
                                        >
                                          Restore Organization
                                        </span>
                                      </Component>
                                    </ButtonLabel>
                                  </button>
                                </Component>
                              </StyledButton>
                            </Button>
                          </p>
                        </div>
                        <p>
                          <small>
                            Note: Restoration is available until the process begins. Once it does, there's no recovering the data that has been removed.
                          </small>
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </NarrowLayout>
            </DeletionPending>
          </OrganizationDetailsBody>
        </div>
      </DocumentTitle>
    </SideEffect(DocumentTitle)>
  </OrganizationContext>
</OrganizationDetails>
`;

exports[`OrganizationDetails render() pending deletion should render a restoration prompt without action for members 1`] = `
<OrganizationDetails
  location={Object {}}
  params={
    Object {
      "orgId": "org-slug",
    }
  }
>
  <OrganizationContext
    includeSidebar={true}
    location={Object {}}
    params={
      Object {
        "orgId": "org-slug",
      }
    }
  >
    <SideEffect(DocumentTitle)
      title="Organization Name"
    >
      <DocumentTitle
        title="Organization Name"
      >
        <div
          className="app"
        >
          <withOrganizations(withLatestContext(withRouter(SidebarContainer)))
            includeSidebar={true}
            location={Object {}}
            organization={
              Object {
                "access": Array [],
                "features": Array [],
                "id": "3",
                "name": "Organization Name",
                "onboardingTasks": Array [],
                "projects": Array [],
                "scrapeJavaScript": true,
                "slug": "org-slug",
                "status": Object {
                  "id": "pending_deletion",
                  "name": "pending deletion",
                },
                "teams": Array [],
              }
            }
            params={
              Object {
                "orgId": "org-slug",
              }
            }
          >
            <withLatestContext(withRouter(SidebarContainer))
              includeSidebar={true}
              location={Object {}}
              organization={
                Object {
                  "access": Array [],
                  "features": Array [],
                  "id": "3",
                  "name": "Organization Name",
                  "onboardingTasks": Array [],
                  "projects": Array [],
                  "scrapeJavaScript": true,
                  "slug": "org-slug",
                  "status": Object {
                    "id": "pending_deletion",
                    "name": "pending deletion",
                  },
                  "teams": Array [],
                }
              }
              organizations={Array []}
              params={
                Object {
                  "orgId": "org-slug",
                }
              }
            >
              <withRouter(SidebarContainer)
                includeSidebar={true}
                lastRoute={null}
                location={Object {}}
                organization={
                  Object {
                    "access": Array [],
                    "features": Array [],
                    "id": "3",
                    "name": "Organization Name",
                    "onboardingTasks": Array [],
                    "projects": Array [],
                    "scrapeJavaScript": true,
                    "slug": "org-slug",
                    "status": Object {
                      "id": "pending_deletion",
                      "name": "pending deletion",
                    },
                    "teams": Array [],
                  }
                }
                organizations={Array []}
                params={
                  Object {
                    "orgId": "org-slug",
                  }
                }
                project={null}
              >
                <SidebarContainer
                  includeSidebar={true}
                  lastRoute={null}
                  location={
                    Object {
                      "query": Object {},
                    }
                  }
                  organization={
                    Object {
                      "access": Array [],
                      "features": Array [],
                      "id": "3",
                      "name": "Organization Name",
                      "onboardingTasks": Array [],
                      "projects": Array [],
                      "scrapeJavaScript": true,
                      "slug": "org-slug",
                      "status": Object {
                        "id": "pending_deletion",
                        "name": "pending deletion",
                      },
                      "teams": Array [],
                    }
                  }
                  organizations={Array []}
                  project={null}
                  router={
                    Object {
                      "createHref": [MockFunction] {
                        "calls": Array [
                          Array [
                            "/org-slug/",
                          ],
                          Array [
                            "/organizations/org-slug/issues/assigned/",
                          ],
                          Array [
                            "/organizations/org-slug/issues/bookmarks/",
                          ],
                          Array [
                            "/organizations/org-slug/issues/history/",
                          ],
                          Array [
                            "/organizations/org-slug/activity/",
                          ],
                          Array [
                            "/organizations/org-slug/stats/",
                          ],
                          Array [
                            "/settings/org-slug/",
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                      "go": [MockFunction],
                      "goBack": [MockFunction],
                      "goForward": [MockFunction],
                      "isActive": [MockFunction],
                      "listen": [MockFunction] {
                        "calls": Array [
                          Array [
                            [Function],
                          ],
                        ],
                        "results": Array [
                          Object {
                            "isThrow": false,
                            "value": undefined,
                          },
                        ],
                      },
                      "location": Object {
                        "query": Object {},
                      },
                      "push": [MockFunction],
                      "replace": [MockFunction],
                      "setRouteLeaveHook": [MockFunction],
                    }
                  }
                >
                  <ThemeProvider
                    theme={
                      Object {
                        "alert": Object {
                          "attention": Object {
                            "background": "#F09E71",
                            "backgroundLight": "#ECBFA6",
                            "border": "#D0816D",
                          },
                          "beta": Object {
                            "background": "linear-gradient(90deg, #F868BC, #6C5FC7)",
                          },
                          "default": Object {
                            "background": "#BDB4C7",
                            "backgroundLight": "#FAF9FB",
                            "border": "#E2DBE8",
                          },
                          "error": Object {
                            "background": "#e03e2f",
                            "backgroundLight": "#FDF6F5",
                            "border": "#E7C0BC",
                            "iconColor": "#C72516",
                            "textLight": "#92635f",
                          },
                          "info": Object {
                            "background": "#3B6ECC",
                            "backgroundLight": "#F5FAFE",
                            "border": "#B5D6ED",
                            "iconColor": "#3B6ECC",
                          },
                          "success": Object {
                            "background": "#57be8c",
                            "backgroundLight": "#F8FCF7",
                            "border": "#BBD6B3",
                            "iconColor": "#3EA573",
                          },
                          "warn": Object {
                            "background": "#ecc844",
                            "backgroundLight": "#FFFDF7",
                            "border": "#E1D697",
                            "iconColor": "#e6bc23",
                          },
                          "warning": Object {
                            "background": "#ecc844",
                            "backgroundLight": "#FFFDF7",
                            "border": "#E1D697",
                            "iconColor": "#e6bc23",
                          },
                        },
                        "background": "#fff",
                        "blue": "#3B6ECC",
                        "blueDark": "#2F58A3",
                        "blueLight": "#628BD6",
                        "borderDark": "#D1CAD8",
                        "borderLight": "#E2DBE8",
                        "borderLighter": "#f9f6fd",
                        "borderRadius": "4px",
                        "breakpoints": Array [
                          "768px",
                          "992px",
                          "1200px",
                        ],
                        "button": Object {
                          "borderRadius": "3px",
                          "danger": Object {
                            "background": "#e03e2f",
                            "backgroundActive": "#bf2a1d",
                            "border": "#bf2a1d",
                            "borderActive": "#7d1c13",
                            "color": "#FFFFFF",
                          },
                          "default": Object {
                            "background": "#FFFFFF",
                            "backgroundActive": "#FFFFFF",
                            "border": "#d8d2de",
                            "borderActive": "#c9c0d1",
                            "color": "#2f2936",
                            "colorActive": "#161319",
                          },
                          "disabled": Object {
                            "background": "#FFFFFF",
                            "backgroundActive": "#FFFFFF",
                            "border": "#e3e5e6",
                            "borderActive": "#e3e5e6",
                            "color": "#BDB4C7",
                          },
                          "link": Object {
                            "background": "transparent",
                            "backgroundActive": "transparent",
                            "color": "#3B6ECC",
                          },
                          "primary": Object {
                            "background": "#6C5FC7",
                            "backgroundActive": "#4e3fb4",
                            "border": "#3d328e",
                            "borderActive": "#352b7b",
                            "color": "#FFFFFF",
                          },
                          "success": Object {
                            "background": "#3fa372",
                            "backgroundActive": "#57be8c",
                            "border": "#7ccca5",
                            "borderActive": "#7ccca5",
                            "color": "#FFFFFF",
                          },
                        },
                        "charts": Object {
                          "colors": Array [
                            "#444674",
                            "#524a7e",
                            "#624d84",
                            "#744f88",
                            "#865189",
                            "#985389",
                            "#aa5488",
                            "#bc5585",
                            "#cd5681",
                            "#df567c",
                            "#e86070",
                            "#ed6c64",
                            "#f17959",
                            "#f4854e",
                            "#f59242",
                            "#f59e35",
                            "#f4aa27",
                            "#f2b712",
                          ],
                          "getColorPalette": [Function],
                          "previousPeriod": "#BDB4C7",
                          "symbolSize": 6,
                        },
                        "diff": Object {
                          "added": "#d8f0e4",
                          "addedRow": "#f5fbf8",
                          "removed": "#f7ceca",
                          "removedRow": "#fcefee",
                        },
                        "disabled": "#BDB4C7",
                        "dropShadowHeavy": "0 1px 4px 1px rgba(47,40,55,0.08), 0 4px 16px 0 rgba(47,40,55,0.12)",
                        "dropShadowLight": "0 2px 0 rgba(37, 11, 54, 0.04)",
                        "error": "#e03e2f",
                        "fontSizeExtraLarge": "18px",
                        "fontSizeLarge": "16px",
                        "fontSizeMedium": "14px",
                        "fontSizeSmall": "12px",
                        "gray1": "#BDB4C7",
                        "gray2": "#9585A3",
                        "gray3": "#645574",
                        "gray4": "#4A3E56",
                        "gray5": "#302839",
                        "gray6": "#AFA3BB",
                        "green": "#57be8c",
                        "greenDark": "#3EA573",
                        "greenLight": "#71D8A6",
                        "greenTransparent": "rgba(87, 190, 140, 0.5)",
                        "grid": 8,
                        "headerFontSize": "22px",
                        "offWhite": "#FAF9FB",
                        "offWhite2": "#E7E1EC",
                        "orange": "#ec5e44",
                        "orangeDark": "#D3452B",
                        "orangeLight": "#FF785E",
                        "pink": "#F868BC",
                        "pinkDark": "#DF4FA3",
                        "pinkLight": "#FF82D6",
                        "purple": "#6C5FC7",
                        "purple2": "#6f617c",
                        "purpleDark": "#5346AE",
                        "purpleDarkest": "#392C94",
                        "purpleLight": "#8679E1",
                        "purpleLightest": "#9F92FA",
                        "red": "#e03e2f",
                        "redDark": "#C72516",
                        "redLight": "#FA5849",
                        "settings": Object {
                          "containerWidth": "1440px",
                          "headerHeight": "115px",
                          "maxCrumbWidth": "240px",
                          "sidebarWidth": "220px",
                        },
                        "sidebar": Object {
                          "background": "#2f2936",
                          "badgeSize": "22px",
                          "collapsedWidth": "70px",
                          "color": "#9586a5",
                          "divider": "#493e54",
                          "expandedWidth": "220px",
                          "menuSpacing": "15px",
                          "mobileHeight": "54px",
                          "panel": Object {
                            "headerHeight": "62px",
                            "width": "320px",
                          },
                          "smallBadgeSize": "11px",
                        },
                        "similarity": Object {
                          "colors": Array [
                            "#ec5e44",
                            "#f38259",
                            "#f9a66d",
                            "#98b480",
                            "#57be8c",
                          ],
                          "empty": "#e2dee6",
                        },
                        "success": "#57be8c",
                        "text": Object {
                          "family": "\\"Rubik\\", \\"Avenir Next\\", sans-serif",
                          "familyMono": "Monaco, Consolas, \\"Courier New\\", monospace",
                          "lineHeightBody": "1.4",
                          "lineHeightHeading": "1.15",
                        },
                        "textColor": "#302839",
                        "white": "#FFFFFF",
                        "whiteDark": "#fbfbfc",
                        "yellow": "#ecc844",
                        "yellowDark": "#e6bc23",
                        "yellowLight": "#FFF15E",
                        "yellowLightest": "#FFFDF7",
                        "yellowOrange": "#f9a66d",
                        "yellowOrangeDark": "#E08D54",
                        "yellowOrangeLight": "#FFC087",
                        "zIndex": Object {
                          "dropdown": 1001,
                          "dropdownAutocomplete": Object {
                            "actor": 1008,
                            "menu": 1007,
                          },
                          "globalSelectionHeader": 1002,
                          "header": 1000,
                          "modal": 10000,
                          "orgAndUserMenu": 1004,
                          "sidebar": 1003,
                          "toast": 10001,
                        },
                      }
                    }
                  >
                    <Sidebar
                      collapsed={false}
                      includeSidebar={true}
                      lastRoute={null}
                      location={
                        Object {
                          "query": Object {},
                        }
                      }
                      organization={
                        Object {
                          "access": Array [],
                          "features": Array [],
                          "id": "3",
                          "name": "Organization Name",
                          "onboardingTasks": Array [],
                          "projects": Array [],
                          "scrapeJavaScript": true,
                          "slug": "org-slug",
                          "status": Object {
                            "id": "pending_deletion",
                            "name": "pending deletion",
                          },
                          "teams": Array [],
                        }
                      }
                      organizations={Array []}
                      project={null}
                      router={
                        Object {
                          "createHref": [MockFunction] {
                            "calls": Array [
                              Array [
                                "/org-slug/",
                              ],
                              Array [
                                "/organizations/org-slug/issues/assigned/",
                              ],
                              Array [
                                "/organizations/org-slug/issues/bookmarks/",
                              ],
                              Array [
                                "/organizations/org-slug/issues/history/",
                              ],
                              Array [
                                "/organizations/org-slug/activity/",
                              ],
                              Array [
                                "/organizations/org-slug/stats/",
                              ],
                              Array [
                                "/settings/org-slug/",
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                          "go": [MockFunction],
                          "goBack": [MockFunction],
                          "goForward": [MockFunction],
                          "isActive": [MockFunction],
                          "listen": [MockFunction] {
                            "calls": Array [
                              Array [
                                [Function],
                              ],
                            ],
                            "results": Array [
                              Object {
                                "isThrow": false,
                                "value": undefined,
                              },
                            ],
                          },
                          "location": Object {
                            "query": Object {},
                          },
                          "push": [MockFunction],
                          "replace": [MockFunction],
                          "setRouteLeaveHook": [MockFunction],
                        }
                      }
                    >
                      <StyledSidebar
                        collapsed={false}
                        innerRef={[Function]}
                      >
                        <div
                          className="css-5cf61n-StyledSidebar-responsiveFlex e1sgxx350"
                        >
                          <SidebarSectionGroup>
                            <div
                              className="css-1uxlgm0-SidebarSectionGroup-responsiveFlex e1sgxx351"
                            >
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <withApi(SidebarDropdown)
                                    collapsed={false}
                                    config={
                                      Object {
                                        "features": Set {},
                                        "messages": Array [],
                                        "user": Object {
                                          "email": "foo@example.com",
                                          "flags": Object {
                                            "newsletter_consent_prompt": false,
                                          },
                                          "hasPasswordAuth": true,
                                          "id": "1",
                                          "isAuthenticated": true,
                                          "name": "Foo Bar",
                                          "options": Object {
                                            "timezone": "UTC",
                                          },
                                          "permissions": Set {},
                                          "username": "foo@example.com",
                                        },
                                      }
                                    }
                                    onClick={[Function]}
                                    org={
                                      Object {
                                        "access": Array [],
                                        "features": Array [],
                                        "id": "3",
                                        "name": "Organization Name",
                                        "onboardingTasks": Array [],
                                        "projects": Array [],
                                        "scrapeJavaScript": true,
                                        "slug": "org-slug",
                                        "status": Object {
                                          "id": "pending_deletion",
                                          "name": "pending deletion",
                                        },
                                        "teams": Array [],
                                      }
                                    }
                                    orientation="left"
                                    user={
                                      Object {
                                        "email": "foo@example.com",
                                        "flags": Object {
                                          "newsletter_consent_prompt": false,
                                        },
                                        "hasPasswordAuth": true,
                                        "id": "1",
                                        "isAuthenticated": true,
                                        "name": "Foo Bar",
                                        "options": Object {
                                          "timezone": "UTC",
                                        },
                                        "permissions": Set {},
                                        "username": "foo@example.com",
                                      }
                                    }
                                  >
                                    <SidebarDropdown
                                      api={Client {}}
                                      collapsed={false}
                                      config={
                                        Object {
                                          "features": Set {},
                                          "messages": Array [],
                                          "user": Object {
                                            "email": "foo@example.com",
                                            "flags": Object {
                                              "newsletter_consent_prompt": false,
                                            },
                                            "hasPasswordAuth": true,
                                            "id": "1",
                                            "isAuthenticated": true,
                                            "name": "Foo Bar",
                                            "options": Object {
                                              "timezone": "UTC",
                                            },
                                            "permissions": Set {},
                                            "username": "foo@example.com",
                                          },
                                        }
                                      }
                                      onClick={[Function]}
                                      org={
                                        Object {
                                          "access": Array [],
                                          "features": Array [],
                                          "id": "3",
                                          "name": "Organization Name",
                                          "onboardingTasks": Array [],
                                          "projects": Array [],
                                          "scrapeJavaScript": true,
                                          "slug": "org-slug",
                                          "status": Object {
                                            "id": "pending_deletion",
                                            "name": "pending deletion",
                                          },
                                          "teams": Array [],
                                        }
                                      }
                                      orientation="left"
                                      user={
                                        Object {
                                          "email": "foo@example.com",
                                          "flags": Object {
                                            "newsletter_consent_prompt": false,
                                          },
                                          "hasPasswordAuth": true,
                                          "id": "1",
                                          "isAuthenticated": true,
                                          "name": "Foo Bar",
                                          "options": Object {
                                            "timezone": "UTC",
                                          },
                                          "permissions": Set {},
                                          "username": "foo@example.com",
                                        }
                                      }
                                    >
                                      <DropdownMenu
                                        closeOnEscape={true}
                                        keepMenuOpen={false}
                                      >
                                        <SidebarDropdownRoot
                                          isStyled={true}
                                        >
                                          <div
                                            className="css-jdsvwb-SidebarDropdownRoot e1fowdfw3"
                                          >
                                            <SidebarDropdownActor
                                              data-test-id="sidebar-dropdown"
                                              innerRef={[Function]}
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              style={
                                                Object {
                                                  "outline": "none",
                                                }
                                              }
                                              tabIndex={-1}
                                            >
                                              <div
                                                className="css-1d9hpgj-SidebarDropdownActor e1fowdfw7"
                                                data-test-id="sidebar-dropdown"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                style={
                                                  Object {
                                                    "outline": "none",
                                                  }
                                                }
                                                tabIndex={-1}
                                              >
                                                <div
                                                  style={
                                                    Object {
                                                      "alignItems": "flex-start",
                                                      "display": "flex",
                                                    }
                                                  }
                                                >
                                                  <StyledAvatar
                                                    collapsed={false}
                                                    onClick={[Function]}
                                                    organization={
                                                      Object {
                                                        "access": Array [],
                                                        "features": Array [],
                                                        "id": "3",
                                                        "name": "Organization Name",
                                                        "onboardingTasks": Array [],
                                                        "projects": Array [],
                                                        "scrapeJavaScript": true,
                                                        "slug": "org-slug",
                                                        "status": Object {
                                                          "id": "pending_deletion",
                                                          "name": "pending deletion",
                                                        },
                                                        "teams": Array [],
                                                      }
                                                    }
                                                    round={false}
                                                    size={32}
                                                    user={null}
                                                  >
                                                    <Avatar
                                                      className="css-hbasbf-StyledAvatar e1fowdfw8"
                                                      collapsed={false}
                                                      hasTooltip={false}
                                                      onClick={[Function]}
                                                      organization={
                                                        Object {
                                                          "access": Array [],
                                                          "features": Array [],
                                                          "id": "3",
                                                          "name": "Organization Name",
                                                          "onboardingTasks": Array [],
                                                          "projects": Array [],
                                                          "scrapeJavaScript": true,
                                                          "slug": "org-slug",
                                                          "status": Object {
                                                            "id": "pending_deletion",
                                                            "name": "pending deletion",
                                                          },
                                                          "teams": Array [],
                                                        }
                                                      }
                                                      round={false}
                                                      size={32}
                                                      user={null}
                                                    >
                                                      <OrganizationAvatar
                                                        className="css-hbasbf-StyledAvatar e1fowdfw8"
                                                        collapsed={false}
                                                        hasTooltip={false}
                                                        onClick={[Function]}
                                                        organization={
                                                          Object {
                                                            "access": Array [],
                                                            "features": Array [],
                                                            "id": "3",
                                                            "name": "Organization Name",
                                                            "onboardingTasks": Array [],
                                                            "projects": Array [],
                                                            "scrapeJavaScript": true,
                                                            "slug": "org-slug",
                                                            "status": Object {
                                                              "id": "pending_deletion",
                                                              "name": "pending deletion",
                                                            },
                                                            "teams": Array [],
                                                          }
                                                        }
                                                        round={false}
                                                        size={32}
                                                      >
                                                        <BaseAvatar
                                                          className="css-hbasbf-StyledAvatar e1fowdfw8"
                                                          collapsed={false}
                                                          hasTooltip={false}
                                                          letterId="org-slug"
                                                          onClick={[Function]}
                                                          round={false}
                                                          size={32}
                                                          style={Object {}}
                                                          title="org slug"
                                                          tooltip="org-slug"
                                                          type="letter_avatar"
                                                          uploadPath="organization-avatar"
                                                        >
                                                          <Tooltip
                                                            disabled={true}
                                                            title="org-slug"
                                                          >
                                                            <StyledBaseAvatar
                                                              className="avatar css-hbasbf-StyledAvatar e1fowdfw8"
                                                              loaded={true}
                                                              round={false}
                                                              style={
                                                                Object {
                                                                  "height": "32px",
                                                                  "width": "32px",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="avatar e1fowdfw8 css-tmrp5m-StyledBaseAvatar-StyledAvatar e1z0ohzl0"
                                                                style={
                                                                  Object {
                                                                    "height": "32px",
                                                                    "width": "32px",
                                                                  }
                                                                }
                                                              >
                                                                <LetterAvatar
                                                                  displayName="org slug"
                                                                  identifier="org-slug"
                                                                  round={false}
                                                                >
                                                                  <Svg
                                                                    round={false}
                                                                    viewBox="0 0 120 120"
                                                                  >
                                                                    <svg
                                                                      className="css-123ijso-Svg e1knxa8x0"
                                                                      viewBox="0 0 120 120"
                                                                    >
                                                                      <rect
                                                                        fill="#4674ca"
                                                                        height="120"
                                                                        rx="15"
                                                                        ry="15"
                                                                        width="120"
                                                                        x="0"
                                                                        y="0"
                                                                      />
                                                                      <text
                                                                        fill="#FFFFFF"
                                                                        fontSize="65"
                                                                        style={
                                                                          Object {
                                                                            "dominantBaseline": "central",
                                                                          }
                                                                        }
                                                                        textAnchor="middle"
                                                                        x="50%"
                                                                        y="50%"
                                                                      >
                                                                        OS
                                                                      </text>
                                                                    </svg>
                                                                  </Svg>
                                                                </LetterAvatar>
                                                              </span>
                                                            </StyledBaseAvatar>
                                                          </Tooltip>
                                                        </BaseAvatar>
                                                      </OrganizationAvatar>
                                                    </Avatar>
                                                  </StyledAvatar>
                                                  <OrgAndUserWrapper>
                                                    <div
                                                      className="css-1mzb71u-OrgAndUserWrapper e1fowdfw4"
                                                    >
                                                      <OrgOrUserName>
                                                        <div
                                                          className="css-df1voe-TextOverflow-OrgOrUserName e1fowdfw5"
                                                        >
                                                          Organization Name
                                                           
                                                          <i
                                                            className="icon-arrow-down"
                                                          />
                                                        </div>
                                                      </OrgOrUserName>
                                                      <UserNameOrEmail>
                                                        <div
                                                          className="css-1b3lkmg-TextOverflow-UserNameOrEmail e1fowdfw6"
                                                        >
                                                          Foo Bar
                                                        </div>
                                                      </UserNameOrEmail>
                                                    </div>
                                                  </OrgAndUserWrapper>
                                                </div>
                                              </div>
                                            </SidebarDropdownActor>
                                          </div>
                                        </SidebarDropdownRoot>
                                      </DropdownMenu>
                                    </SidebarDropdown>
                                  </withApi(SidebarDropdown)>
                                </div>
                              </SidebarSection>
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <FeatureContainer
                                    features={
                                      Array [
                                        "sentry10",
                                      ]
                                    }
                                    renderDisabled={[Function]}
                                  >
                                    <Feature
                                      configFeatures={Array []}
                                      features={
                                        Array [
                                          "sentry10",
                                        ]
                                      }
                                      organization={
                                        Object {
                                          "access": Array [],
                                          "features": Array [],
                                          "id": "3",
                                          "name": "Organization Name",
                                          "onboardingTasks": Array [],
                                          "projects": Array [],
                                          "scrapeJavaScript": true,
                                          "slug": "org-slug",
                                          "status": Object {
                                            "id": "pending_deletion",
                                            "name": "pending deletion",
                                          },
                                          "teams": Array [],
                                        }
                                      }
                                      project={
                                        Object {
                                          "hasAccess": true,
                                          "id": "2",
                                          "isBookmarked": false,
                                          "isMember": true,
                                          "name": "Project Name",
                                          "slug": "project-slug",
                                          "teams": Array [],
                                        }
                                      }
                                      renderDisabled={[Function]}
                                      requireAll={true}
                                    >
                                      <withRouter(SidebarItem)
                                        collapsed={false}
                                        hasPanel={false}
                                        icon={
                                          <InlineSvg
                                            src="icon-projects"
                                          />
                                        }
                                        index={true}
                                        label="Projects"
                                        onClick={[Function]}
                                        orientation="left"
                                        to="/org-slug/"
                                      >
                                        <SidebarItem
                                          collapsed={false}
                                          hasPanel={false}
                                          icon={
                                            <InlineSvg
                                              src="icon-projects"
                                            />
                                          }
                                          index={true}
                                          label="Projects"
                                          location={
                                            Object {
                                              "query": Object {},
                                            }
                                          }
                                          onClick={[Function]}
                                          orientation="left"
                                          router={
                                            Object {
                                              "createHref": [MockFunction] {
                                                "calls": Array [
                                                  Array [
                                                    "/org-slug/",
                                                  ],
                                                  Array [
                                                    "/organizations/org-slug/issues/assigned/",
                                                  ],
                                                  Array [
                                                    "/organizations/org-slug/issues/bookmarks/",
                                                  ],
                                                  Array [
                                                    "/organizations/org-slug/issues/history/",
                                                  ],
                                                  Array [
                                                    "/organizations/org-slug/activity/",
                                                  ],
                                                  Array [
                                                    "/organizations/org-slug/stats/",
                                                  ],
                                                  Array [
                                                    "/settings/org-slug/",
                                                  ],
                                                ],
                                                "results": Array [
                                                  Object {
                                                    "isThrow": false,
                                                    "value": undefined,
                                                  },
                                                  Object {
                                                    "isThrow": false,
                                                    "value": undefined,
                                                  },
                                                  Object {
                                                    "isThrow": false,
                                                    "value": undefined,
                                                  },
                                                  Object {
                                                    "isThrow": false,
                                                    "value": undefined,
                                                  },
                                                  Object {
                                                    "isThrow": false,
                                                    "value": undefined,
                                                  },
                                                  Object {
                                                    "isThrow": false,
                                                    "value": undefined,
                                                  },
                                                  Object {
                                                    "isThrow": false,
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "go": [MockFunction],
                                              "goBack": [MockFunction],
                                              "goForward": [MockFunction],
                                              "isActive": [MockFunction],
                                              "listen": [MockFunction] {
                                                "calls": Array [
                                                  Array [
                                                    [Function],
                                                  ],
                                                ],
                                                "results": Array [
                                                  Object {
                                                    "isThrow": false,
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "location": Object {
                                                "query": Object {},
                                              },
                                              "push": [MockFunction],
                                              "replace": [MockFunction],
                                              "setRouteLeaveHook": [MockFunction],
                                            }
                                          }
                                          to="/org-slug/"
                                        >
                                          <Tooltip
                                            disabled={true}
                                            title="Projects"
                                            tooltipOptions={
                                              Object {
                                                "html": true,
                                                "placement": "right",
                                              }
                                            }
                                          >
                                            <StyledSidebarItem
                                              active={false}
                                              onClick={[Function]}
                                              to="/org-slug/"
                                            >
                                              <Component
                                                active={false}
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                onClick={[Function]}
                                                to="/org-slug/"
                                              >
                                                <Link
                                                  className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                  onClick={[Function]}
                                                  to="/org-slug/"
                                                >
                                                  <Link
                                                    className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                    onClick={[Function]}
                                                    onlyActiveOnIndex={false}
                                                    style={Object {}}
                                                    to="/org-slug/"
                                                  >
                                                    <a
                                                      className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                      onClick={[Function]}
                                                      style={Object {}}
                                                    >
                                                      <SidebarItemWrapper>
                                                        <div
                                                          className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                        >
                                                          <SidebarItemIcon>
                                                            <span
                                                              className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                            >
                                                              <InlineSvg
                                                                src="icon-projects"
                                                              >
                                                                <StyledSvg
                                                                  height="1em"
                                                                  viewBox={Object {}}
                                                                  width="1em"
                                                                >
                                                                  <svg
                                                                    className="css-ryh69w-StyledSvg e2idor0"
                                                                    height="1em"
                                                                    viewBox={Object {}}
                                                                    width="1em"
                                                                  >
                                                                    <use
                                                                      href="#test"
                                                                      xlinkHref="#test"
                                                                    />
                                                                  </svg>
                                                                </StyledSvg>
                                                              </InlineSvg>
                                                            </span>
                                                          </SidebarItemIcon>
                                                          <SidebarItemLabel>
                                                            <span
                                                              className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                            >
                                                              <TextOverflow>
                                                                <div
                                                                  className="css-179hf69-TextOverflow e8qi82q0"
                                                                >
                                                                  Projects
                                                                </div>
                                                              </TextOverflow>
                                                            </span>
                                                          </SidebarItemLabel>
                                                        </div>
                                                      </SidebarItemWrapper>
                                                    </a>
                                                  </Link>
                                                </Link>
                                              </Component>
                                            </StyledSidebarItem>
                                          </Tooltip>
                                        </SidebarItem>
                                      </withRouter(SidebarItem)>
                                    </Feature>
                                  </FeatureContainer>
                                  <FeatureContainer
                                    features={
                                      Array [
                                        "events",
                                      ]
                                    }
                                  >
                                    <Feature
                                      configFeatures={Array []}
                                      features={
                                        Array [
                                          "events",
                                        ]
                                      }
                                      organization={
                                        Object {
                                          "access": Array [],
                                          "features": Array [],
                                          "id": "3",
                                          "name": "Organization Name",
                                          "onboardingTasks": Array [],
                                          "projects": Array [],
                                          "scrapeJavaScript": true,
                                          "slug": "org-slug",
                                          "status": Object {
                                            "id": "pending_deletion",
                                            "name": "pending deletion",
                                          },
                                          "teams": Array [],
                                        }
                                      }
                                      project={
                                        Object {
                                          "hasAccess": true,
                                          "id": "2",
                                          "isBookmarked": false,
                                          "isMember": true,
                                          "name": "Project Name",
                                          "slug": "project-slug",
                                          "teams": Array [],
                                        }
                                      }
                                      renderDisabled={false}
                                      requireAll={true}
                                    />
                                  </FeatureContainer>
                                  <FeatureContainer
                                    features={
                                      Array [
                                        "sentry10",
                                      ]
                                    }
                                  >
                                    <Feature
                                      configFeatures={Array []}
                                      features={
                                        Array [
                                          "sentry10",
                                        ]
                                      }
                                      organization={
                                        Object {
                                          "access": Array [],
                                          "features": Array [],
                                          "id": "3",
                                          "name": "Organization Name",
                                          "onboardingTasks": Array [],
                                          "projects": Array [],
                                          "scrapeJavaScript": true,
                                          "slug": "org-slug",
                                          "status": Object {
                                            "id": "pending_deletion",
                                            "name": "pending deletion",
                                          },
                                          "teams": Array [],
                                        }
                                      }
                                      project={
                                        Object {
                                          "hasAccess": true,
                                          "id": "2",
                                          "isBookmarked": false,
                                          "isMember": true,
                                          "name": "Project Name",
                                          "slug": "project-slug",
                                          "teams": Array [],
                                        }
                                      }
                                      renderDisabled={false}
                                      requireAll={true}
                                    />
                                  </FeatureContainer>
                                  <FeatureContainer
                                    features={
                                      Array [
                                        "discover",
                                      ]
                                    }
                                  >
                                    <Feature
                                      configFeatures={Array []}
                                      features={
                                        Array [
                                          "discover",
                                        ]
                                      }
                                      organization={
                                        Object {
                                          "access": Array [],
                                          "features": Array [],
                                          "id": "3",
                                          "name": "Organization Name",
                                          "onboardingTasks": Array [],
                                          "projects": Array [],
                                          "scrapeJavaScript": true,
                                          "slug": "org-slug",
                                          "status": Object {
                                            "id": "pending_deletion",
                                            "name": "pending deletion",
                                          },
                                          "teams": Array [],
                                        }
                                      }
                                      project={
                                        Object {
                                          "hasAccess": true,
                                          "id": "2",
                                          "isBookmarked": false,
                                          "isMember": true,
                                          "name": "Project Name",
                                          "slug": "project-slug",
                                          "teams": Array [],
                                        }
                                      }
                                      renderDisabled={false}
                                      requireAll={true}
                                    />
                                  </FeatureContainer>
                                </div>
                              </SidebarSection>
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <withRouter(SidebarItem)
                                    collapsed={false}
                                    hasPanel={false}
                                    icon={
                                      <InlineSvg
                                        src="icon-user"
                                      />
                                    }
                                    label="Assigned to me"
                                    onClick={[Function]}
                                    orientation="left"
                                    to="/organizations/org-slug/issues/assigned/"
                                  >
                                    <SidebarItem
                                      collapsed={false}
                                      hasPanel={false}
                                      icon={
                                        <InlineSvg
                                          src="icon-user"
                                        />
                                      }
                                      label="Assigned to me"
                                      location={
                                        Object {
                                          "query": Object {},
                                        }
                                      }
                                      onClick={[Function]}
                                      orientation="left"
                                      router={
                                        Object {
                                          "createHref": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                "/org-slug/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/assigned/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/bookmarks/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/history/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/activity/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/stats/",
                                              ],
                                              Array [
                                                "/settings/org-slug/",
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "go": [MockFunction],
                                          "goBack": [MockFunction],
                                          "goForward": [MockFunction],
                                          "isActive": [MockFunction],
                                          "listen": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                [Function],
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "location": Object {
                                            "query": Object {},
                                          },
                                          "push": [MockFunction],
                                          "replace": [MockFunction],
                                          "setRouteLeaveHook": [MockFunction],
                                        }
                                      }
                                      to="/organizations/org-slug/issues/assigned/"
                                    >
                                      <Tooltip
                                        disabled={true}
                                        title="Assigned to me"
                                        tooltipOptions={
                                          Object {
                                            "html": true,
                                            "placement": "right",
                                          }
                                        }
                                      >
                                        <StyledSidebarItem
                                          active={false}
                                          onClick={[Function]}
                                          to="/organizations/org-slug/issues/assigned/"
                                        >
                                          <Component
                                            active={false}
                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                            onClick={[Function]}
                                            to="/organizations/org-slug/issues/assigned/"
                                          >
                                            <Link
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              onClick={[Function]}
                                              to="/organizations/org-slug/issues/assigned/"
                                            >
                                              <Link
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                onClick={[Function]}
                                                onlyActiveOnIndex={false}
                                                style={Object {}}
                                                to="/organizations/org-slug/issues/assigned/"
                                              >
                                                <a
                                                  className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                  onClick={[Function]}
                                                  style={Object {}}
                                                >
                                                  <SidebarItemWrapper>
                                                    <div
                                                      className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                    >
                                                      <SidebarItemIcon>
                                                        <span
                                                          className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                        >
                                                          <InlineSvg
                                                            src="icon-user"
                                                          >
                                                            <StyledSvg
                                                              height="1em"
                                                              viewBox={Object {}}
                                                              width="1em"
                                                            >
                                                              <svg
                                                                className="css-ryh69w-StyledSvg e2idor0"
                                                                height="1em"
                                                                viewBox={Object {}}
                                                                width="1em"
                                                              >
                                                                <use
                                                                  href="#test"
                                                                  xlinkHref="#test"
                                                                />
                                                              </svg>
                                                            </StyledSvg>
                                                          </InlineSvg>
                                                        </span>
                                                      </SidebarItemIcon>
                                                      <SidebarItemLabel>
                                                        <span
                                                          className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                        >
                                                          <TextOverflow>
                                                            <div
                                                              className="css-179hf69-TextOverflow e8qi82q0"
                                                            >
                                                              Assigned to me
                                                            </div>
                                                          </TextOverflow>
                                                        </span>
                                                      </SidebarItemLabel>
                                                    </div>
                                                  </SidebarItemWrapper>
                                                </a>
                                              </Link>
                                            </Link>
                                          </Component>
                                        </StyledSidebarItem>
                                      </Tooltip>
                                    </SidebarItem>
                                  </withRouter(SidebarItem)>
                                  <withRouter(SidebarItem)
                                    collapsed={false}
                                    hasPanel={false}
                                    icon={
                                      <InlineSvg
                                        src="icon-star"
                                      />
                                    }
                                    label="Bookmarked issues"
                                    onClick={[Function]}
                                    orientation="left"
                                    to="/organizations/org-slug/issues/bookmarks/"
                                  >
                                    <SidebarItem
                                      collapsed={false}
                                      hasPanel={false}
                                      icon={
                                        <InlineSvg
                                          src="icon-star"
                                        />
                                      }
                                      label="Bookmarked issues"
                                      location={
                                        Object {
                                          "query": Object {},
                                        }
                                      }
                                      onClick={[Function]}
                                      orientation="left"
                                      router={
                                        Object {
                                          "createHref": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                "/org-slug/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/assigned/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/bookmarks/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/history/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/activity/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/stats/",
                                              ],
                                              Array [
                                                "/settings/org-slug/",
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "go": [MockFunction],
                                          "goBack": [MockFunction],
                                          "goForward": [MockFunction],
                                          "isActive": [MockFunction],
                                          "listen": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                [Function],
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "location": Object {
                                            "query": Object {},
                                          },
                                          "push": [MockFunction],
                                          "replace": [MockFunction],
                                          "setRouteLeaveHook": [MockFunction],
                                        }
                                      }
                                      to="/organizations/org-slug/issues/bookmarks/"
                                    >
                                      <Tooltip
                                        disabled={true}
                                        title="Bookmarked issues"
                                        tooltipOptions={
                                          Object {
                                            "html": true,
                                            "placement": "right",
                                          }
                                        }
                                      >
                                        <StyledSidebarItem
                                          active={false}
                                          onClick={[Function]}
                                          to="/organizations/org-slug/issues/bookmarks/"
                                        >
                                          <Component
                                            active={false}
                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                            onClick={[Function]}
                                            to="/organizations/org-slug/issues/bookmarks/"
                                          >
                                            <Link
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              onClick={[Function]}
                                              to="/organizations/org-slug/issues/bookmarks/"
                                            >
                                              <Link
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                onClick={[Function]}
                                                onlyActiveOnIndex={false}
                                                style={Object {}}
                                                to="/organizations/org-slug/issues/bookmarks/"
                                              >
                                                <a
                                                  className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                  onClick={[Function]}
                                                  style={Object {}}
                                                >
                                                  <SidebarItemWrapper>
                                                    <div
                                                      className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                    >
                                                      <SidebarItemIcon>
                                                        <span
                                                          className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                        >
                                                          <InlineSvg
                                                            src="icon-star"
                                                          >
                                                            <StyledSvg
                                                              height="1em"
                                                              viewBox={Object {}}
                                                              width="1em"
                                                            >
                                                              <svg
                                                                className="css-ryh69w-StyledSvg e2idor0"
                                                                height="1em"
                                                                viewBox={Object {}}
                                                                width="1em"
                                                              >
                                                                <use
                                                                  href="#test"
                                                                  xlinkHref="#test"
                                                                />
                                                              </svg>
                                                            </StyledSvg>
                                                          </InlineSvg>
                                                        </span>
                                                      </SidebarItemIcon>
                                                      <SidebarItemLabel>
                                                        <span
                                                          className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                        >
                                                          <TextOverflow>
                                                            <div
                                                              className="css-179hf69-TextOverflow e8qi82q0"
                                                            >
                                                              Bookmarked issues
                                                            </div>
                                                          </TextOverflow>
                                                        </span>
                                                      </SidebarItemLabel>
                                                    </div>
                                                  </SidebarItemWrapper>
                                                </a>
                                              </Link>
                                            </Link>
                                          </Component>
                                        </StyledSidebarItem>
                                      </Tooltip>
                                    </SidebarItem>
                                  </withRouter(SidebarItem)>
                                  <withRouter(SidebarItem)
                                    collapsed={false}
                                    hasPanel={false}
                                    icon={
                                      <InlineSvg
                                        src="icon-history"
                                      />
                                    }
                                    label="Recently viewed"
                                    onClick={[Function]}
                                    orientation="left"
                                    to="/organizations/org-slug/issues/history/"
                                  >
                                    <SidebarItem
                                      collapsed={false}
                                      hasPanel={false}
                                      icon={
                                        <InlineSvg
                                          src="icon-history"
                                        />
                                      }
                                      label="Recently viewed"
                                      location={
                                        Object {
                                          "query": Object {},
                                        }
                                      }
                                      onClick={[Function]}
                                      orientation="left"
                                      router={
                                        Object {
                                          "createHref": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                "/org-slug/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/assigned/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/bookmarks/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/history/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/activity/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/stats/",
                                              ],
                                              Array [
                                                "/settings/org-slug/",
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "go": [MockFunction],
                                          "goBack": [MockFunction],
                                          "goForward": [MockFunction],
                                          "isActive": [MockFunction],
                                          "listen": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                [Function],
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "location": Object {
                                            "query": Object {},
                                          },
                                          "push": [MockFunction],
                                          "replace": [MockFunction],
                                          "setRouteLeaveHook": [MockFunction],
                                        }
                                      }
                                      to="/organizations/org-slug/issues/history/"
                                    >
                                      <Tooltip
                                        disabled={true}
                                        title="Recently viewed"
                                        tooltipOptions={
                                          Object {
                                            "html": true,
                                            "placement": "right",
                                          }
                                        }
                                      >
                                        <StyledSidebarItem
                                          active={false}
                                          onClick={[Function]}
                                          to="/organizations/org-slug/issues/history/"
                                        >
                                          <Component
                                            active={false}
                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                            onClick={[Function]}
                                            to="/organizations/org-slug/issues/history/"
                                          >
                                            <Link
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              onClick={[Function]}
                                              to="/organizations/org-slug/issues/history/"
                                            >
                                              <Link
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                onClick={[Function]}
                                                onlyActiveOnIndex={false}
                                                style={Object {}}
                                                to="/organizations/org-slug/issues/history/"
                                              >
                                                <a
                                                  className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                  onClick={[Function]}
                                                  style={Object {}}
                                                >
                                                  <SidebarItemWrapper>
                                                    <div
                                                      className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                    >
                                                      <SidebarItemIcon>
                                                        <span
                                                          className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                        >
                                                          <InlineSvg
                                                            src="icon-history"
                                                          >
                                                            <StyledSvg
                                                              height="1em"
                                                              viewBox={Object {}}
                                                              width="1em"
                                                            >
                                                              <svg
                                                                className="css-ryh69w-StyledSvg e2idor0"
                                                                height="1em"
                                                                viewBox={Object {}}
                                                                width="1em"
                                                              >
                                                                <use
                                                                  href="#test"
                                                                  xlinkHref="#test"
                                                                />
                                                              </svg>
                                                            </StyledSvg>
                                                          </InlineSvg>
                                                        </span>
                                                      </SidebarItemIcon>
                                                      <SidebarItemLabel>
                                                        <span
                                                          className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                        >
                                                          <TextOverflow>
                                                            <div
                                                              className="css-179hf69-TextOverflow e8qi82q0"
                                                            >
                                                              Recently viewed
                                                            </div>
                                                          </TextOverflow>
                                                        </span>
                                                      </SidebarItemLabel>
                                                    </div>
                                                  </SidebarItemWrapper>
                                                </a>
                                              </Link>
                                            </Link>
                                          </Component>
                                        </StyledSidebarItem>
                                      </Tooltip>
                                    </SidebarItem>
                                  </withRouter(SidebarItem)>
                                </div>
                              </SidebarSection>
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <withRouter(SidebarItem)
                                    collapsed={false}
                                    hasPanel={false}
                                    icon={
                                      <InlineSvg
                                        src="icon-activity"
                                      />
                                    }
                                    label="Activity"
                                    onClick={[Function]}
                                    orientation="left"
                                    to="/organizations/org-slug/activity/"
                                  >
                                    <SidebarItem
                                      collapsed={false}
                                      hasPanel={false}
                                      icon={
                                        <InlineSvg
                                          src="icon-activity"
                                        />
                                      }
                                      label="Activity"
                                      location={
                                        Object {
                                          "query": Object {},
                                        }
                                      }
                                      onClick={[Function]}
                                      orientation="left"
                                      router={
                                        Object {
                                          "createHref": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                "/org-slug/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/assigned/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/bookmarks/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/history/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/activity/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/stats/",
                                              ],
                                              Array [
                                                "/settings/org-slug/",
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "go": [MockFunction],
                                          "goBack": [MockFunction],
                                          "goForward": [MockFunction],
                                          "isActive": [MockFunction],
                                          "listen": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                [Function],
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "location": Object {
                                            "query": Object {},
                                          },
                                          "push": [MockFunction],
                                          "replace": [MockFunction],
                                          "setRouteLeaveHook": [MockFunction],
                                        }
                                      }
                                      to="/organizations/org-slug/activity/"
                                    >
                                      <Tooltip
                                        disabled={true}
                                        title="Activity"
                                        tooltipOptions={
                                          Object {
                                            "html": true,
                                            "placement": "right",
                                          }
                                        }
                                      >
                                        <StyledSidebarItem
                                          active={false}
                                          onClick={[Function]}
                                          to="/organizations/org-slug/activity/"
                                        >
                                          <Component
                                            active={false}
                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                            onClick={[Function]}
                                            to="/organizations/org-slug/activity/"
                                          >
                                            <Link
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              onClick={[Function]}
                                              to="/organizations/org-slug/activity/"
                                            >
                                              <Link
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                onClick={[Function]}
                                                onlyActiveOnIndex={false}
                                                style={Object {}}
                                                to="/organizations/org-slug/activity/"
                                              >
                                                <a
                                                  className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                  onClick={[Function]}
                                                  style={Object {}}
                                                >
                                                  <SidebarItemWrapper>
                                                    <div
                                                      className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                    >
                                                      <SidebarItemIcon>
                                                        <span
                                                          className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                        >
                                                          <InlineSvg
                                                            src="icon-activity"
                                                          >
                                                            <StyledSvg
                                                              height="1em"
                                                              viewBox={Object {}}
                                                              width="1em"
                                                            >
                                                              <svg
                                                                className="css-ryh69w-StyledSvg e2idor0"
                                                                height="1em"
                                                                viewBox={Object {}}
                                                                width="1em"
                                                              >
                                                                <use
                                                                  href="#test"
                                                                  xlinkHref="#test"
                                                                />
                                                              </svg>
                                                            </StyledSvg>
                                                          </InlineSvg>
                                                        </span>
                                                      </SidebarItemIcon>
                                                      <SidebarItemLabel>
                                                        <span
                                                          className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                        >
                                                          <TextOverflow>
                                                            <div
                                                              className="css-179hf69-TextOverflow e8qi82q0"
                                                            >
                                                              Activity
                                                            </div>
                                                          </TextOverflow>
                                                        </span>
                                                      </SidebarItemLabel>
                                                    </div>
                                                  </SidebarItemWrapper>
                                                </a>
                                              </Link>
                                            </Link>
                                          </Component>
                                        </StyledSidebarItem>
                                      </Tooltip>
                                    </SidebarItem>
                                  </withRouter(SidebarItem)>
                                  <withRouter(SidebarItem)
                                    collapsed={false}
                                    hasPanel={false}
                                    icon={
                                      <InlineSvg
                                        src="icon-stats"
                                      />
                                    }
                                    label="Stats"
                                    onClick={[Function]}
                                    orientation="left"
                                    to="/organizations/org-slug/stats/"
                                  >
                                    <SidebarItem
                                      collapsed={false}
                                      hasPanel={false}
                                      icon={
                                        <InlineSvg
                                          src="icon-stats"
                                        />
                                      }
                                      label="Stats"
                                      location={
                                        Object {
                                          "query": Object {},
                                        }
                                      }
                                      onClick={[Function]}
                                      orientation="left"
                                      router={
                                        Object {
                                          "createHref": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                "/org-slug/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/assigned/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/bookmarks/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/history/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/activity/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/stats/",
                                              ],
                                              Array [
                                                "/settings/org-slug/",
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "go": [MockFunction],
                                          "goBack": [MockFunction],
                                          "goForward": [MockFunction],
                                          "isActive": [MockFunction],
                                          "listen": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                [Function],
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "location": Object {
                                            "query": Object {},
                                          },
                                          "push": [MockFunction],
                                          "replace": [MockFunction],
                                          "setRouteLeaveHook": [MockFunction],
                                        }
                                      }
                                      to="/organizations/org-slug/stats/"
                                    >
                                      <Tooltip
                                        disabled={true}
                                        title="Stats"
                                        tooltipOptions={
                                          Object {
                                            "html": true,
                                            "placement": "right",
                                          }
                                        }
                                      >
                                        <StyledSidebarItem
                                          active={false}
                                          onClick={[Function]}
                                          to="/organizations/org-slug/stats/"
                                        >
                                          <Component
                                            active={false}
                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                            onClick={[Function]}
                                            to="/organizations/org-slug/stats/"
                                          >
                                            <Link
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              onClick={[Function]}
                                              to="/organizations/org-slug/stats/"
                                            >
                                              <Link
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                onClick={[Function]}
                                                onlyActiveOnIndex={false}
                                                style={Object {}}
                                                to="/organizations/org-slug/stats/"
                                              >
                                                <a
                                                  className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                  onClick={[Function]}
                                                  style={Object {}}
                                                >
                                                  <SidebarItemWrapper>
                                                    <div
                                                      className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                    >
                                                      <SidebarItemIcon>
                                                        <span
                                                          className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                        >
                                                          <InlineSvg
                                                            src="icon-stats"
                                                          >
                                                            <StyledSvg
                                                              height="1em"
                                                              viewBox={Object {}}
                                                              width="1em"
                                                            >
                                                              <svg
                                                                className="css-ryh69w-StyledSvg e2idor0"
                                                                height="1em"
                                                                viewBox={Object {}}
                                                                width="1em"
                                                              >
                                                                <use
                                                                  href="#test"
                                                                  xlinkHref="#test"
                                                                />
                                                              </svg>
                                                            </StyledSvg>
                                                          </InlineSvg>
                                                        </span>
                                                      </SidebarItemIcon>
                                                      <SidebarItemLabel>
                                                        <span
                                                          className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                        >
                                                          <TextOverflow>
                                                            <div
                                                              className="css-179hf69-TextOverflow e8qi82q0"
                                                            >
                                                              Stats
                                                            </div>
                                                          </TextOverflow>
                                                        </span>
                                                      </SidebarItemLabel>
                                                    </div>
                                                  </SidebarItemWrapper>
                                                </a>
                                              </Link>
                                            </Link>
                                          </Component>
                                        </StyledSidebarItem>
                                      </Tooltip>
                                    </SidebarItem>
                                  </withRouter(SidebarItem)>
                                </div>
                              </SidebarSection>
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <withRouter(SidebarItem)
                                    collapsed={false}
                                    hasPanel={false}
                                    icon={
                                      <InlineSvg
                                        src="icon-settings"
                                      />
                                    }
                                    label="Settings"
                                    onClick={[Function]}
                                    orientation="left"
                                    to="/settings/org-slug/"
                                  >
                                    <SidebarItem
                                      collapsed={false}
                                      hasPanel={false}
                                      icon={
                                        <InlineSvg
                                          src="icon-settings"
                                        />
                                      }
                                      label="Settings"
                                      location={
                                        Object {
                                          "query": Object {},
                                        }
                                      }
                                      onClick={[Function]}
                                      orientation="left"
                                      router={
                                        Object {
                                          "createHref": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                "/org-slug/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/assigned/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/bookmarks/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/issues/history/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/activity/",
                                              ],
                                              Array [
                                                "/organizations/org-slug/stats/",
                                              ],
                                              Array [
                                                "/settings/org-slug/",
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "go": [MockFunction],
                                          "goBack": [MockFunction],
                                          "goForward": [MockFunction],
                                          "isActive": [MockFunction],
                                          "listen": [MockFunction] {
                                            "calls": Array [
                                              Array [
                                                [Function],
                                              ],
                                            ],
                                            "results": Array [
                                              Object {
                                                "isThrow": false,
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "location": Object {
                                            "query": Object {},
                                          },
                                          "push": [MockFunction],
                                          "replace": [MockFunction],
                                          "setRouteLeaveHook": [MockFunction],
                                        }
                                      }
                                      to="/settings/org-slug/"
                                    >
                                      <Tooltip
                                        disabled={true}
                                        title="Settings"
                                        tooltipOptions={
                                          Object {
                                            "html": true,
                                            "placement": "right",
                                          }
                                        }
                                      >
                                        <StyledSidebarItem
                                          active={false}
                                          onClick={[Function]}
                                          to="/settings/org-slug/"
                                        >
                                          <Component
                                            active={false}
                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                            onClick={[Function]}
                                            to="/settings/org-slug/"
                                          >
                                            <Link
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              onClick={[Function]}
                                              to="/settings/org-slug/"
                                            >
                                              <Link
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                onClick={[Function]}
                                                onlyActiveOnIndex={false}
                                                style={Object {}}
                                                to="/settings/org-slug/"
                                              >
                                                <a
                                                  className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                  onClick={[Function]}
                                                  style={Object {}}
                                                >
                                                  <SidebarItemWrapper>
                                                    <div
                                                      className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                    >
                                                      <SidebarItemIcon>
                                                        <span
                                                          className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                        >
                                                          <InlineSvg
                                                            src="icon-settings"
                                                          >
                                                            <StyledSvg
                                                              height="1em"
                                                              viewBox={Object {}}
                                                              width="1em"
                                                            >
                                                              <svg
                                                                className="css-ryh69w-StyledSvg e2idor0"
                                                                height="1em"
                                                                viewBox={Object {}}
                                                                width="1em"
                                                              >
                                                                <use
                                                                  href="#test"
                                                                  xlinkHref="#test"
                                                                />
                                                              </svg>
                                                            </StyledSvg>
                                                          </InlineSvg>
                                                        </span>
                                                      </SidebarItemIcon>
                                                      <SidebarItemLabel>
                                                        <span
                                                          className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                        >
                                                          <TextOverflow>
                                                            <div
                                                              className="css-179hf69-TextOverflow e8qi82q0"
                                                            >
                                                              Settings
                                                            </div>
                                                          </TextOverflow>
                                                        </span>
                                                      </SidebarItemLabel>
                                                    </div>
                                                  </SidebarItemWrapper>
                                                </a>
                                              </Link>
                                            </Link>
                                          </Component>
                                        </StyledSidebarItem>
                                      </Tooltip>
                                    </SidebarItem>
                                  </withRouter(SidebarItem)>
                                </div>
                              </SidebarSection>
                            </div>
                          </SidebarSectionGroup>
                          <SidebarSectionGroup>
                            <div
                              className="css-1uxlgm0-SidebarSectionGroup-responsiveFlex e1sgxx351"
                            >
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <SidebarHelp
                                    collapsed={false}
                                    hidePanel={[Function]}
                                    organization={
                                      Object {
                                        "access": Array [],
                                        "features": Array [],
                                        "id": "3",
                                        "name": "Organization Name",
                                        "onboardingTasks": Array [],
                                        "projects": Array [],
                                        "scrapeJavaScript": true,
                                        "slug": "org-slug",
                                        "status": Object {
                                          "id": "pending_deletion",
                                          "name": "pending deletion",
                                        },
                                        "teams": Array [],
                                      }
                                    }
                                    orientation="left"
                                  >
                                    <DropdownMenu
                                      closeOnEscape={true}
                                      keepMenuOpen={false}
                                    >
                                      <HelpRoot>
                                        <div
                                          className="css-1dvxhjs-HelpRoot e1q2bb9t0"
                                        >
                                          <HelpActor
                                            innerRef={[Function]}
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            style={
                                              Object {
                                                "outline": "none",
                                              }
                                            }
                                            tabIndex={-1}
                                          >
                                            <div
                                              className="css-d4wreg-HelpActor e1q2bb9t1"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              style={
                                                Object {
                                                  "outline": "none",
                                                }
                                              }
                                              tabIndex={-1}
                                            >
                                              <withRouter(SidebarItem)
                                                collapsed={false}
                                                hasPanel={false}
                                                icon={
                                                  <InlineSvg
                                                    src="icon-circle-question"
                                                  />
                                                }
                                                label="Help"
                                                orientation="left"
                                              >
                                                <SidebarItem
                                                  collapsed={false}
                                                  hasPanel={false}
                                                  icon={
                                                    <InlineSvg
                                                      src="icon-circle-question"
                                                    />
                                                  }
                                                  label="Help"
                                                  location={
                                                    Object {
                                                      "query": Object {},
                                                    }
                                                  }
                                                  orientation="left"
                                                  router={
                                                    Object {
                                                      "createHref": [MockFunction] {
                                                        "calls": Array [
                                                          Array [
                                                            "/org-slug/",
                                                          ],
                                                          Array [
                                                            "/organizations/org-slug/issues/assigned/",
                                                          ],
                                                          Array [
                                                            "/organizations/org-slug/issues/bookmarks/",
                                                          ],
                                                          Array [
                                                            "/organizations/org-slug/issues/history/",
                                                          ],
                                                          Array [
                                                            "/organizations/org-slug/activity/",
                                                          ],
                                                          Array [
                                                            "/organizations/org-slug/stats/",
                                                          ],
                                                          Array [
                                                            "/settings/org-slug/",
                                                          ],
                                                        ],
                                                        "results": Array [
                                                          Object {
                                                            "isThrow": false,
                                                            "value": undefined,
                                                          },
                                                          Object {
                                                            "isThrow": false,
                                                            "value": undefined,
                                                          },
                                                          Object {
                                                            "isThrow": false,
                                                            "value": undefined,
                                                          },
                                                          Object {
                                                            "isThrow": false,
                                                            "value": undefined,
                                                          },
                                                          Object {
                                                            "isThrow": false,
                                                            "value": undefined,
                                                          },
                                                          Object {
                                                            "isThrow": false,
                                                            "value": undefined,
                                                          },
                                                          Object {
                                                            "isThrow": false,
                                                            "value": undefined,
                                                          },
                                                        ],
                                                      },
                                                      "go": [MockFunction],
                                                      "goBack": [MockFunction],
                                                      "goForward": [MockFunction],
                                                      "isActive": [MockFunction],
                                                      "listen": [MockFunction] {
                                                        "calls": Array [
                                                          Array [
                                                            [Function],
                                                          ],
                                                        ],
                                                        "results": Array [
                                                          Object {
                                                            "isThrow": false,
                                                            "value": undefined,
                                                          },
                                                        ],
                                                      },
                                                      "location": Object {
                                                        "query": Object {},
                                                      },
                                                      "push": [MockFunction],
                                                      "replace": [MockFunction],
                                                      "setRouteLeaveHook": [MockFunction],
                                                    }
                                                  }
                                                >
                                                  <Tooltip
                                                    disabled={true}
                                                    title="Help"
                                                    tooltipOptions={
                                                      Object {
                                                        "html": true,
                                                        "placement": "right",
                                                      }
                                                    }
                                                  >
                                                    <StyledSidebarItem
                                                      active={false}
                                                      onClick={[Function]}
                                                    >
                                                      <Component
                                                        active={false}
                                                        className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                        onClick={[Function]}
                                                      >
                                                        <Link
                                                          className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                          onClick={[Function]}
                                                        >
                                                          <a
                                                            className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                            onClick={[Function]}
                                                          >
                                                            <SidebarItemWrapper>
                                                              <div
                                                                className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                              >
                                                                <SidebarItemIcon>
                                                                  <span
                                                                    className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                                  >
                                                                    <InlineSvg
                                                                      src="icon-circle-question"
                                                                    >
                                                                      <StyledSvg
                                                                        height="1em"
                                                                        viewBox={Object {}}
                                                                        width="1em"
                                                                      >
                                                                        <svg
                                                                          className="css-ryh69w-StyledSvg e2idor0"
                                                                          height="1em"
                                                                          viewBox={Object {}}
                                                                          width="1em"
                                                                        >
                                                                          <use
                                                                            href="#test"
                                                                            xlinkHref="#test"
                                                                          />
                                                                        </svg>
                                                                      </StyledSvg>
                                                                    </InlineSvg>
                                                                  </span>
                                                                </SidebarItemIcon>
                                                                <SidebarItemLabel>
                                                                  <span
                                                                    className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                                  >
                                                                    <TextOverflow>
                                                                      <div
                                                                        className="css-179hf69-TextOverflow e8qi82q0"
                                                                      >
                                                                        Help
                                                                      </div>
                                                                    </TextOverflow>
                                                                  </span>
                                                                </SidebarItemLabel>
                                                              </div>
                                                            </SidebarItemWrapper>
                                                          </a>
                                                        </Link>
                                                      </Component>
                                                    </StyledSidebarItem>
                                                  </Tooltip>
                                                </SidebarItem>
                                              </withRouter(SidebarItem)>
                                            </div>
                                          </HelpActor>
                                        </div>
                                      </HelpRoot>
                                    </DropdownMenu>
                                  </SidebarHelp>
                                  <Broadcasts
                                    collapsed={false}
                                    currentPanel=""
                                    hidePanel={[Function]}
                                    onShowPanel={[Function]}
                                    orientation="left"
                                    showPanel={false}
                                  >
                                    <withRouter(SidebarItem)
                                      active={false}
                                      badge={0}
                                      collapsed={false}
                                      data-test-id="sidebar-broadcasts"
                                      icon={
                                        <InlineSvg
                                          size="22px"
                                          src="icon-broadcast"
                                        />
                                      }
                                      label="What's new"
                                      onClick={[Function]}
                                      orientation="left"
                                    >
                                      <SidebarItem
                                        active={false}
                                        badge={0}
                                        collapsed={false}
                                        data-test-id="sidebar-broadcasts"
                                        icon={
                                          <InlineSvg
                                            size="22px"
                                            src="icon-broadcast"
                                          />
                                        }
                                        label="What's new"
                                        location={
                                          Object {
                                            "query": Object {},
                                          }
                                        }
                                        onClick={[Function]}
                                        orientation="left"
                                        router={
                                          Object {
                                            "createHref": [MockFunction] {
                                              "calls": Array [
                                                Array [
                                                  "/org-slug/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/issues/assigned/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/issues/bookmarks/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/issues/history/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/activity/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/stats/",
                                                ],
                                                Array [
                                                  "/settings/org-slug/",
                                                ],
                                              ],
                                              "results": Array [
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "go": [MockFunction],
                                            "goBack": [MockFunction],
                                            "goForward": [MockFunction],
                                            "isActive": [MockFunction],
                                            "listen": [MockFunction] {
                                              "calls": Array [
                                                Array [
                                                  [Function],
                                                ],
                                              ],
                                              "results": Array [
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "location": Object {
                                              "query": Object {},
                                            },
                                            "push": [MockFunction],
                                            "replace": [MockFunction],
                                            "setRouteLeaveHook": [MockFunction],
                                          }
                                        }
                                      >
                                        <Tooltip
                                          disabled={true}
                                          title="What's new"
                                          tooltipOptions={
                                            Object {
                                              "html": true,
                                              "placement": "right",
                                            }
                                          }
                                        >
                                          <StyledSidebarItem
                                            active={false}
                                            data-test-id="sidebar-broadcasts"
                                            onClick={[Function]}
                                          >
                                            <Component
                                              active={false}
                                              className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                              data-test-id="sidebar-broadcasts"
                                              onClick={[Function]}
                                            >
                                              <Link
                                                className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                data-test-id="sidebar-broadcasts"
                                                onClick={[Function]}
                                              >
                                                <a
                                                  className="css-u8cmbr-StyledSidebarItem e1qdnaq70"
                                                  data-test-id="sidebar-broadcasts"
                                                  onClick={[Function]}
                                                >
                                                  <SidebarItemWrapper>
                                                    <div
                                                      className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                    >
                                                      <SidebarItemIcon>
                                                        <span
                                                          className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                        >
                                                          <InlineSvg
                                                            size="22px"
                                                            src="icon-broadcast"
                                                          >
                                                            <StyledSvg
                                                              height="22px"
                                                              viewBox={Object {}}
                                                              width="22px"
                                                            >
                                                              <svg
                                                                className="css-ryh69w-StyledSvg e2idor0"
                                                                height="22px"
                                                                viewBox={Object {}}
                                                                width="22px"
                                                              >
                                                                <use
                                                                  href="#test"
                                                                  xlinkHref="#test"
                                                                />
                                                              </svg>
                                                            </StyledSvg>
                                                          </InlineSvg>
                                                        </span>
                                                      </SidebarItemIcon>
                                                      <SidebarItemLabel>
                                                        <span
                                                          className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                        >
                                                          <TextOverflow>
                                                            <div
                                                              className="css-179hf69-TextOverflow e8qi82q0"
                                                            >
                                                              What's new
                                                            </div>
                                                          </TextOverflow>
                                                        </span>
                                                      </SidebarItemLabel>
                                                    </div>
                                                  </SidebarItemWrapper>
                                                </a>
                                              </Link>
                                            </Component>
                                          </StyledSidebarItem>
                                        </Tooltip>
                                      </SidebarItem>
                                    </withRouter(SidebarItem)>
                                  </Broadcasts>
                                  <Incidents
                                    collapsed={false}
                                    currentPanel=""
                                    hidePanel={[Function]}
                                    onShowPanel={[Function]}
                                    orientation="left"
                                    showPanel={false}
                                  />
                                </div>
                              </SidebarSection>
                              <SidebarSection
                                noMargin={true}
                              >
                                <div
                                  className="css-1j3ay2q-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <OnboardingStatus
                                    collapsed={false}
                                    currentPanel=""
                                    hidePanel={[Function]}
                                    onShowPanel={[Function]}
                                    org={
                                      Object {
                                        "access": Array [],
                                        "features": Array [],
                                        "id": "3",
                                        "name": "Organization Name",
                                        "onboardingTasks": Array [],
                                        "projects": Array [],
                                        "scrapeJavaScript": true,
                                        "slug": "org-slug",
                                        "status": Object {
                                          "id": "pending_deletion",
                                          "name": "pending deletion",
                                        },
                                        "teams": Array [],
                                      }
                                    }
                                    showPanel={false}
                                  />
                                </div>
                              </SidebarSection>
                              <SidebarSection>
                                <div
                                  className="css-tlukoq-SidebarSectionGroup-responsiveFlex-SidebarSection e1sgxx352"
                                >
                                  <SidebarCollapseItem
                                    collapsed={false}
                                    data-test-id="sidebar-collapse"
                                    hasPanel={false}
                                    icon={
                                      <StyledInlineSvg
                                        collapsed={false}
                                        src="icon-collapse"
                                      />
                                    }
                                    label="Collapse"
                                    onClick={[Function]}
                                    orientation="left"
                                  >
                                    <withRouter(SidebarItem)
                                      className="css-1s7mi0e-SidebarCollapseItem e1sgxx354"
                                      collapsed={false}
                                      data-test-id="sidebar-collapse"
                                      hasPanel={false}
                                      icon={
                                        <StyledInlineSvg
                                          collapsed={false}
                                          src="icon-collapse"
                                        />
                                      }
                                      label="Collapse"
                                      onClick={[Function]}
                                      orientation="left"
                                    >
                                      <SidebarItem
                                        className="css-1s7mi0e-SidebarCollapseItem e1sgxx354"
                                        collapsed={false}
                                        data-test-id="sidebar-collapse"
                                        hasPanel={false}
                                        icon={
                                          <StyledInlineSvg
                                            collapsed={false}
                                            src="icon-collapse"
                                          />
                                        }
                                        label="Collapse"
                                        location={
                                          Object {
                                            "query": Object {},
                                          }
                                        }
                                        onClick={[Function]}
                                        orientation="left"
                                        router={
                                          Object {
                                            "createHref": [MockFunction] {
                                              "calls": Array [
                                                Array [
                                                  "/org-slug/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/issues/assigned/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/issues/bookmarks/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/issues/history/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/activity/",
                                                ],
                                                Array [
                                                  "/organizations/org-slug/stats/",
                                                ],
                                                Array [
                                                  "/settings/org-slug/",
                                                ],
                                              ],
                                              "results": Array [
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "go": [MockFunction],
                                            "goBack": [MockFunction],
                                            "goForward": [MockFunction],
                                            "isActive": [MockFunction],
                                            "listen": [MockFunction] {
                                              "calls": Array [
                                                Array [
                                                  [Function],
                                                ],
                                              ],
                                              "results": Array [
                                                Object {
                                                  "isThrow": false,
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "location": Object {
                                              "query": Object {},
                                            },
                                            "push": [MockFunction],
                                            "replace": [MockFunction],
                                            "setRouteLeaveHook": [MockFunction],
                                          }
                                        }
                                      >
                                        <Tooltip
                                          disabled={true}
                                          title="Collapse"
                                          tooltipOptions={
                                            Object {
                                              "html": true,
                                              "placement": "right",
                                            }
                                          }
                                        >
                                          <StyledSidebarItem
                                            active={false}
                                            className="css-1s7mi0e-SidebarCollapseItem e1sgxx354"
                                            data-test-id="sidebar-collapse"
                                            onClick={[Function]}
                                          >
                                            <Component
                                              active={false}
                                              className="e1sgxx354 css-ekfpov-StyledSidebarItem-SidebarCollapseItem e1qdnaq70"
                                              data-test-id="sidebar-collapse"
                                              onClick={[Function]}
                                            >
                                              <Link
                                                className="e1sgxx354 css-ekfpov-StyledSidebarItem-SidebarCollapseItem e1qdnaq70"
                                                data-test-id="sidebar-collapse"
                                                onClick={[Function]}
                                              >
                                                <a
                                                  className="e1sgxx354 css-ekfpov-StyledSidebarItem-SidebarCollapseItem e1qdnaq70"
                                                  data-test-id="sidebar-collapse"
                                                  onClick={[Function]}
                                                >
                                                  <SidebarItemWrapper>
                                                    <div
                                                      className="css-gn87gt-SidebarItemWrapper e1qdnaq71"
                                                    >
                                                      <SidebarItemIcon>
                                                        <span
                                                          className="css-1murlm5-SidebarItemIcon e1qdnaq72"
                                                        >
                                                          <StyledInlineSvg
                                                            collapsed={false}
                                                            src="icon-collapse"
                                                          >
                                                            <Component
                                                              className="css-19qca8n-StyledInlineSvg e1sgxx353"
                                                              collapsed={false}
                                                              src="icon-collapse"
                                                            >
                                                              <InlineSvg
                                                                className="e1sgxx353 css-1ktuuwq-StyledInlineSvg-ExpandedIcon"
                                                                src="icon-collapse"
                                                              >
                                                                <StyledSvg
                                                                  className="e1sgxx353 css-1ktuuwq-StyledInlineSvg-ExpandedIcon"
                                                                  height="1em"
                                                                  viewBox={Object {}}
                                                                  width="1em"
                                                                >
                                                                  <svg
                                                                    className="e1sgxx353 css-coblwz-StyledSvg-StyledInlineSvg-ExpandedIcon e2idor0"
                                                                    height="1em"
                                                                    viewBox={Object {}}
                                                                    width="1em"
                                                                  >
                                                                    <use
                                                                      href="#test"
                                                                      xlinkHref="#test"
                                                                    />
                                                                  </svg>
                                                                </StyledSvg>
                                                              </InlineSvg>
                                                            </Component>
                                                          </StyledInlineSvg>
                                                        </span>
                                                      </SidebarItemIcon>
                                                      <SidebarItemLabel>
                                                        <span
                                                          className="css-1wgok4l-SidebarItemLabel e1qdnaq73"
                                                        >
                                                          <TextOverflow>
                                                            <div
                                                              className="css-179hf69-TextOverflow e8qi82q0"
                                                            >
                                                              Collapse
                                                            </div>
                                                          </TextOverflow>
                                                        </span>
                                                      </SidebarItemLabel>
                                                    </div>
                                                  </SidebarItemWrapper>
                                                </a>
                                              </Link>
                                            </Component>
                                          </StyledSidebarItem>
                                        </Tooltip>
                                      </SidebarItem>
                                    </withRouter(SidebarItem)>
                                  </SidebarCollapseItem>
                                </div>
                              </SidebarSection>
                            </div>
                          </SidebarSectionGroup>
                        </div>
                      </StyledSidebar>
                    </Sidebar>
                  </ThemeProvider>
                </SidebarContainer>
              </withRouter(SidebarContainer)>
            </withLatestContext(withRouter(SidebarContainer))>
          </withOrganizations(withLatestContext(withRouter(SidebarContainer)))>
          <OrganizationDetailsBody>
            <DeletionPending
              organization={
                Object {
                  "access": Array [],
                  "features": Array [],
                  "id": "3",
                  "name": "Organization Name",
                  "onboardingTasks": Array [],
                  "projects": Array [],
                  "scrapeJavaScript": true,
                  "slug": "org-slug",
                  "status": Object {
                    "id": "pending_deletion",
                    "name": "pending deletion",
                  },
                  "teams": Array [],
                }
              }
            >
              <NarrowLayout>
                <div
                  className="app"
                >
                  <div
                    className="pattern-bg"
                  />
                  <div
                    className="container"
                  >
                    <div
                      className="box box-modal"
                    >
                      <div
                        className="box-header"
                      >
                        <a
                          href="/"
                        >
                          <span
                            className="icon-sentry-logo"
                          />
                        </a>
                      </div>
                      <div
                        className="box-content with-padding"
                      >
                        <h3>
                          Deletion Scheduled
                        </h3>
                        <p>
                          <span
                            key="4"
                          >
                            <span
                              key="0"
                            >
                              The 
                            </span>
                            <strong
                              key="1"
                            >
                              org-slug
                            </strong>
                            <span
                              key="2"
                            >
                               organization is currently scheduled for deletion.
                            </span>
                          </span>
                        </p>
                        <p>
                          If this is a mistake, contact an organization owner and ask them to restore this organization.
                        </p>
                        <p>
                          <small>
                            Note: Restoration is available until the process begins. Once it does, there's no recovering the data that has been removed.
                          </small>
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </NarrowLayout>
            </DeletionPending>
          </OrganizationDetailsBody>
        </div>
      </DocumentTitle>
    </SideEffect(DocumentTitle)>
  </OrganizationContext>
</OrganizationDetails>
`;
